{
	"id": "eedf3e159db087e6eb2791715954bcf7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tweet_On_Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"contracts/token/ERC20/ERC20.sol\";\r\nimport \"contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"contracts/access/Ownable.sol\";\r\nimport \"contracts/security/Pausable.sol\";\r\nimport \"contracts/security/Pausable.sol\";\r\nimport \"contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract Tweet_On_Base is ERC20, ERC20Burnable, Pausable, Ownable, ReentrancyGuard { \r\n    uint256 public constant INITIAL_SUPPLY = 100_000_000 * (10 ** 18);\r\n    uint256 public constant MAX_SUPPLY = 5_000_000_000 * (10 ** 18); \r\n\r\n    mapping(address => uint256) private _liquidityProvided;\r\n    mapping(address => uint256) private _liquidityProvidedTimestamp;//\r\n\r\n    bool private _circuitBreakerEnabled = false;\r\n\r\n    constructor() ERC20(\"Tweet On Base\", \"Tweets\") Ownable(msg.sender) {\r\n        _mint(msg.sender, INITIAL_SUPPLY);\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n    \r\n\r\n    // Circuit Breaker modifier\r\n    modifier circuitBreakerNotActive() {\r\n        require(!_circuitBreakerEnabled, \"Circuit breaker is active\");\r\n        _;\r\n    }\r\n    // Function to enable the circuit breaker\r\n    function enableCircuitBreaker() public onlyOwner {\r\n        _circuitBreakerEnabled = true;\r\n    }\r\n\r\n    // Function to disable the circuit breaker\r\n    function disableCircuitBreaker() public onlyOwner {\r\n        _circuitBreakerEnabled = false;\r\n    }\r\n\r\n    // Override the _transfer function to include burning 0.001% of the transaction\r\n    function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {\r\n        uint256 burnAmount = amount / 100000; // 0.001% of the transaction\r\n        uint256 sendAmount = amount - burnAmount; // 99.999% of the transaction\r\n        require(amount == sendAmount + burnAmount, \"Burn value invalid\");\r\n\r\n        super._transfer(sender, recipient, sendAmount);\r\n        _burn(sender, burnAmount);\r\n    }\r\n \r\n    // Override the _beforeTokenTransfer function to include burning 0.001% of the transaction and the _liquidityProvidedTimestamp mapping update\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        circuitBreakerNotActive\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    function addLiquidity(uint256 amount) public {\r\n        _transfer(msg.sender, address(this), amount);\r\n        _liquidityProvided[msg.sender] += amount;\r\n        _liquidityProvidedTimestamp[msg.sender] = block.timestamp;\r\n    }\r\n    function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {\r\n        require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\");\r\n        require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\");\r\n\r\n        uint256 reward = calculateReward(msg.sender);\r\n        require(totalSupply() + reward <= MAX_SUPPLY, \"Reward exceeds max supply\");\r\n\r\n        _mint(msg.sender, reward); // Mint the reward to the liquidity provider\r\n        _transfer(address(this), msg.sender, amount); // Transfer the liquidity back to the provider\r\n        _liquidityProvided[msg.sender] -= amount;\r\n        if (_liquidityProvided[msg.sender] == 0) {\r\n            _liquidityProvidedTimestamp[msg.sender] = 0; // Reset the timestamp if all liquidity is removed\r\n        } else {\r\n            _liquidityProvidedTimestamp[msg.sender] = block.timestamp; // Update the timestamp for the remaining liquidity\r\n        }\r\n    }\r\n\r\n    function calculateReward(address user) public view returns (uint256) {\r\n        if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {\r\n            uint256 reward = (_liquidityProvided[user] * 5) / 100; // 5% reward\r\n            return reward;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // New function to allow the owner to add liquidity directly without rewards\r\n    function ownerAddLiquidity(uint256 amount) public onlyOwner {\r\n        _liquidityProvided[owner()] += amount;\r\n        _liquidityProvidedTimestamp[owner()] = block.timestamp;\r\n        _mint(address(this), amount); // Mint the tokens directly to the contract\r\n    }\r\n\r\n    // New function to allow the owner to remove liquidity directly without rewards\r\n    function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {\r\n        require(amount <= _liquidityProvided[owner()], \"Insufficient balance\");\r\n        _liquidityProvided[owner()] -= amount;\r\n        if (_liquidityProvided[owner()] == 0) {\r\n            _liquidityProvidedTimestamp[owner()] = 0;\r\n        }\r\n        _transfer(address(this), owner(), amount); // Transfer the liquidity back to the owner\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal virtual  {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual {\n        // Hook logic (if needed)\n    }\n\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Tweet_On_Base.sol": {
				"Tweet_On_Base": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableCircuitBreaker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableCircuitBreaker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerAddLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerRemoveLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityAndClaimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tweet_On_Base.sol\":344:4881  contract Tweet_On_Base is ERC20, ERC20Burnable, Pausable, Ownable, ReentrancyGuard { ... */\n  mstore(0x40, 0x80)\n    /* \"Tweet_On_Base.sol\":753:758  false */\n  0x00\n    /* \"Tweet_On_Base.sol\":715:758  bool private _circuitBreakerEnabled = false */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base.sol\":767:886  constructor() ERC20(\"Tweet On Base\", \"Tweets\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Tweet_On_Base.sol\":822:832  msg.sender */\n  caller\n    /* \"contracts/token/ERC20/ERC20.sol\":844:957  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x5477656574204f6e204261736500000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x5477656574730000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":918:923  name_ */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":910:915  _name */\n  0x03\n    /* \"contracts/token/ERC20/ERC20.sol\":910:923  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":943:950  symbol_ */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":933:940  _symbol */\n  0x04\n    /* \"contracts/token/ERC20/ERC20.sol\":933:950  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":844:957  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x00\n    /* \"contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base.sol\":845:878  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_20\n    /* \"Tweet_On_Base.sol\":851:861  msg.sender */\n  caller\n    /* \"Tweet_On_Base.sol\":476:500  100_000_000 * (10 ** 18) */\n  0x52b7d2dcc80cd2e4000000\n    /* \"Tweet_On_Base.sol\":845:850  _mint */\n  shl(0x20, tag_21)\n    /* \"Tweet_On_Base.sol\":845:878  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Tweet_On_Base.sol\":344:4881  contract Tweet_On_Base is ERC20, ERC20Burnable, Pausable, Ownable, ReentrancyGuard { ... */\n  jump(tag_22)\n    /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\ntag_21:\n    /* \"contracts/token/ERC20/ERC20.sol\":6775:6776  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6763  account */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6829:6830  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6800:6832  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\ntag_25:\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n  tag_27\n    /* \"contracts/token/ERC20/ERC20.sol\":6868:6869  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6872:6879  account */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6881:6886  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6859  _update */\n  shl(0x20, tag_28)\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"contracts/token/ERC20/ERC20.sol\":5332:5333  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5320  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":5468:5473  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5452:5464  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5452:5473  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"contracts/token/ERC20/ERC20.sol\":5504:5523  uint256 fromBalance */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5535  _balances */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5536:5540  from */\n  dup6\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/token/ERC20/ERC20.sol\":5504:5541  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5573:5578  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5559:5570  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5559:5578  fromBalance < value */\n  lt\n    /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":5630:5634  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5636:5647  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5649:5654  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5605:5655  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\ntag_34:\n    /* \"contracts/token/ERC20/ERC20.sol\":5822:5827  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5808:5819  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5808:5827  fromBalance - value */\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5799  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5800:5804  from */\n  dup7\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5827  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5490:5852  {... */\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\ntag_33:\n    /* \"contracts/token/ERC20/ERC20.sol\":5880:5881  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5868  to */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6045:6050  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6029:6041  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6029:6050  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6249  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6250:6252  to */\n  dup5\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6262  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\ntag_38:\n    /* \"contracts/token/ERC20/ERC20.sol\":6317:6319  to */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6311:6315  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/token/ERC20/ERC20.sol\":6321:6326  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_41:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_42:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_43:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_44:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_71:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_73\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":714:798   */\ntag_72:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_45:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_46:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_47:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_48:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_78\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_47\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1429:1468   */\n  tag_79\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_47\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_49:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_50:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_51:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_83\n    /* \"#utility.yul\":1818:1852   */\n  tag_84\n    /* \"#utility.yul\":1827:1851   */\n  tag_85\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_52:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_53:\n    /* \"#utility.yul\":2056:2095   */\n  tag_88\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2117:2208   */\n  tag_89\n    /* \"#utility.yul\":2166:2207   */\n  tag_90\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_54:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_55:\n    /* \"#utility.yul\":2377:2409   */\n  tag_93\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2418:2483   */\n  tag_94\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_53\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_56:\n    /* \"#utility.yul\":2555:2675   */\ntag_96:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_99\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_57:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_102\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2906:2935   */\n  tag_103\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_46\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_104:\n    /* \"#utility.yul\":3133:3213   */\n  tag_105\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_56\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_101:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_58:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_59:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_109\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_60:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_111\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_9:\n    /* \"#utility.yul\":3950:3987   */\n  tag_113\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_115\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4038:4094   */\ntag_114:\n    /* \"#utility.yul\":4118:4156   */\n  tag_116\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_44\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_57\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_120:\n    /* \"#utility.yul\":5144:5211   */\n  tag_121\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_60\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_118)\n    /* \"#utility.yul\":4365:4983   */\ntag_119:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_122\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_45\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_123:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_127\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_59\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_126:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_118:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_61:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_62:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_130\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_61\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_63:\n    /* \"#utility.yul\":5555:5579   */\n  tag_132\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_62\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_15:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_134\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_63\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_64:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_32:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_137\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_138\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_140\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6154:6190   */\ntag_139:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_65:\n    /* \"#utility.yul\":6290:6314   */\n  tag_142\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_49\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_36:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_144\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6608:6680   */\n  tag_145\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_65\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6690:6762   */\n  tag_146\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_65\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_40:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_148\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_65\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Tweet_On_Base.sol\":344:4881  contract Tweet_On_Base is ERC20, ERC20Burnable, Pausable, Ownable, ReentrancyGuard { ... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tweet_On_Base.sol\":344:4881  contract Tweet_On_Base is ERC20, ERC20Burnable, Pausable, Ownable, ReentrancyGuard { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa64254c3\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc8052107\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc8052107\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xa64254c3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xafe8289a\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x21208fa2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2254b79c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":1408:1507  function disableCircuitBreaker() public onlyOwner {... */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Tweet_On_Base.sol\":4450:4874  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":435:500  uint256 public constant INITIAL_SUPPLY = 100_000_000 * (10 ** 18) */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":1950:2032  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":507:570  uint256 public constant MAX_SUPPLY = 5_000_000_000 * (10 ** 18) */\n    tag_11:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":963:1028  function unpause() public onlyOwner {... */\n    tag_12:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"Tweet_On_Base.sol\":2445:2672  function addLiquidity(uint256 amount) public {... */\n    tag_14:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_18:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"Tweet_On_Base.sol\":894:955  function pause() public onlyOwner {... */\n    tag_19:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":1255:1352  function enableCircuitBreaker() public onlyOwner {... */\n    tag_22:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base.sol\":4093:4357  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_24:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"Tweet_On_Base.sol\":2678:3700  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_25:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"Tweet_On_Base.sol\":3708:4003  function calculateReward(address user) public view returns (uint256) {... */\n    tag_26:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"contracts/token/ERC20/ERC20.sol\":1067:1080  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1099:1104  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":1092:1104  return _name */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_125\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"contracts/token/ERC20/ERC20.sol\":3314:3318  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3330:3343  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3358  _msgSender() */\n      tag_131\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3356  _msgSender */\n      tag_132\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3358  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/token/ERC20/ERC20.sol\":3330:3358  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3399  _approve(owner, spender, value) */\n      tag_133\n        /* \"contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3384:3391  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3393:3398  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3376  _approve */\n      tag_134\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3399  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/token/ERC20/ERC20.sol\":3416:3420  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3409:3420  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"contracts/token/ERC20/ERC20.sol\":2144:2151  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2170:2182  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":2163:2182  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":1408:1507  function disableCircuitBreaker() public onlyOwner {... */\n    tag_49:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"Tweet_On_Base.sol\":1494:1499  false */\n      0x00\n        /* \"Tweet_On_Base.sol\":1469:1491  _circuitBreakerEnabled */\n      0x09\n      0x00\n        /* \"Tweet_On_Base.sol\":1469:1499  _circuitBreakerEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":1408:1507  function disableCircuitBreaker() public onlyOwner {... */\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":4450:4874  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_53:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_143\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_143:\n        /* \"Tweet_On_Base.sol\":4555:4573  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":4555:4582  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4574:4581  owner() */\n      tag_146\n        /* \"Tweet_On_Base.sol\":4574:4579  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4574:4581  owner() */\n      jump\t// in\n    tag_146:\n        /* \"Tweet_On_Base.sol\":4555:4582  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":4545:4551  amount */\n      dup2\n        /* \"Tweet_On_Base.sol\":4545:4582  amount <= _liquidityProvided[owner()] */\n      gt\n      iszero\n        /* \"Tweet_On_Base.sol\":4537:4607  require(amount <= _liquidityProvided[owner()], \"Insufficient balance\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Tweet_On_Base.sol\":4649:4655  amount */\n      dup1\n        /* \"Tweet_On_Base.sol\":4618:4636  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":4618:4645  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4637:4644  owner() */\n      tag_150\n        /* \"Tweet_On_Base.sol\":4637:4642  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4637:4644  owner() */\n      jump\t// in\n    tag_150:\n        /* \"Tweet_On_Base.sol\":4618:4645  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base.sol\":4618:4655  _liquidityProvided[owner()] -= amount */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":4701:4702  0 */\n      0x00\n        /* \"Tweet_On_Base.sol\":4670:4688  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":4670:4697  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4689:4696  owner() */\n      tag_153\n        /* \"Tweet_On_Base.sol\":4689:4694  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4689:4696  owner() */\n      jump\t// in\n    tag_153:\n        /* \"Tweet_On_Base.sol\":4670:4697  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":4670:4702  _liquidityProvided[owner()] == 0 */\n      sub\n        /* \"Tweet_On_Base.sol\":4666:4771  if (_liquidityProvided[owner()] == 0) {... */\n      tag_154\n      jumpi\n        /* \"Tweet_On_Base.sol\":4758:4759  0 */\n      0x00\n        /* \"Tweet_On_Base.sol\":4719:4746  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":4719:4755  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4747:4754  owner() */\n      tag_155\n        /* \"Tweet_On_Base.sol\":4747:4752  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4747:4754  owner() */\n      jump\t// in\n    tag_155:\n        /* \"Tweet_On_Base.sol\":4719:4755  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base.sol\":4719:4759  _liquidityProvidedTimestamp[owner()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":4666:4771  if (_liquidityProvided[owner()] == 0) {... */\n    tag_154:\n        /* \"Tweet_On_Base.sol\":4781:4822  _transfer(address(this), owner(), amount) */\n      tag_156\n        /* \"Tweet_On_Base.sol\":4799:4803  this */\n      address\n        /* \"Tweet_On_Base.sol\":4806:4813  owner() */\n      tag_157\n        /* \"Tweet_On_Base.sol\":4806:4811  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4806:4813  owner() */\n      jump\t// in\n    tag_157:\n        /* \"Tweet_On_Base.sol\":4815:4821  amount */\n      dup4\n        /* \"Tweet_On_Base.sol\":4781:4790  _transfer */\n      tag_158\n        /* \"Tweet_On_Base.sol\":4781:4822  _transfer(address(this), owner(), amount) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_159\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_160\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_159:\n        /* \"Tweet_On_Base.sol\":4450:4874  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"contracts/token/ERC20/ERC20.sol\":4074:4078  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4090:4105  address spender */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4120  _msgSender() */\n      tag_162\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4118  _msgSender */\n      tag_132\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4120  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/token/ERC20/ERC20.sol\":4090:4120  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4167  _spendAllowance(from, spender, value) */\n      tag_163\n        /* \"contracts/token/ERC20/ERC20.sol\":4146:4150  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4152:4159  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4161:4166  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4145  _spendAllowance */\n      tag_164\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4167  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4203  _transfer(from, to, value) */\n      tag_165\n        /* \"contracts/token/ERC20/ERC20.sol\":4187:4191  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4193:4195  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4197:4202  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4186  _transfer */\n      tag_158\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4203  _transfer(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/token/ERC20/ERC20.sol\":4220:4224  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":4213:4224  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":435:500  uint256 public constant INITIAL_SUPPLY = 100_000_000 * (10 ** 18) */\n    tag_60:\n        /* \"Tweet_On_Base.sol\":476:500  100_000_000 * (10 ** 18) */\n      0x52b7d2dcc80cd2e4000000\n        /* \"Tweet_On_Base.sol\":435:500  uint256 public constant INITIAL_SUPPLY = 100_000_000 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":1950:2032  function decimals() public view virtual returns (uint8) {... */\n    tag_63:\n        /* \"contracts/token/ERC20/ERC20.sol\":1999:2004  uint8 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2023:2025  18 */\n      0x12\n        /* \"contracts/token/ERC20/ERC20.sol\":2016:2025  return 18 */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1950:2032  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":507:570  uint256 public constant MAX_SUPPLY = 5_000_000_000 * (10 ** 18) */\n    tag_67:\n        /* \"Tweet_On_Base.sol\":544:570  5_000_000_000 * (10 ** 18) */\n      0x1027e72f1f12813088000000\n        /* \"Tweet_On_Base.sol\":507:570  uint256 public constant MAX_SUPPLY = 5_000_000_000 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":963:1028  function unpause() public onlyOwner {... */\n    tag_70:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"Tweet_On_Base.sol\":1010:1020  _unpause() */\n      tag_170\n        /* \"Tweet_On_Base.sol\":1010:1018  _unpause */\n      tag_171\n        /* \"Tweet_On_Base.sol\":1010:1020  _unpause() */\n      jump\t// in\n    tag_170:\n        /* \"Tweet_On_Base.sol\":963:1028  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_73:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_173\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_174\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_132\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_175\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":2445:2672  function addLiquidity(uint256 amount) public {... */\n    tag_76:\n        /* \"Tweet_On_Base.sol\":2501:2545  _transfer(msg.sender, address(this), amount) */\n      tag_177\n        /* \"Tweet_On_Base.sol\":2511:2521  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":2531:2535  this */\n      address\n        /* \"Tweet_On_Base.sol\":2538:2544  amount */\n      dup4\n        /* \"Tweet_On_Base.sol\":2501:2510  _transfer */\n      tag_158\n        /* \"Tweet_On_Base.sol\":2501:2545  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_177:\n        /* \"Tweet_On_Base.sol\":2590:2596  amount */\n      dup1\n        /* \"Tweet_On_Base.sol\":2556:2574  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":2556:2586  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":2575:2585  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":2556:2586  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base.sol\":2556:2596  _liquidityProvided[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":2649:2664  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base.sol\":2607:2634  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":2607:2646  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":2635:2645  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":2607:2646  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base.sol\":2607:2664  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":2445:2672  function addLiquidity(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_78:\n        /* \"contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"contracts/token/ERC20/ERC20.sol\":2312:2319  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2347  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2356  _balances[account] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2348:2355  account */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2356  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":2331:2356  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_185\n        /* \"contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_186\n        /* \"contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_89:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_188\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_189\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_132\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_164\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_190\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_175\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":894:955  function pause() public onlyOwner {... */\n    tag_91:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"Tweet_On_Base.sol\":939:947  _pause() */\n      tag_194\n        /* \"Tweet_On_Base.sol\":939:945  _pause */\n      tag_195\n        /* \"Tweet_On_Base.sol\":939:947  _pause() */\n      jump\t// in\n    tag_194:\n        /* \"Tweet_On_Base.sol\":894:955  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_93:\n        /* \"contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n    tag_97:\n        /* \"contracts/token/ERC20/ERC20.sol\":1271:1284  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1303:1310  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":1296:1310  return _symbol */\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_125\n      jump\t// in\n    tag_198:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_125\n      jump\t// in\n    tag_199:\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_201\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_200)\n    tag_201:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_202:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_202\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":1255:1352  function enableCircuitBreaker() public onlyOwner {... */\n    tag_100:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \"Tweet_On_Base.sol\":1340:1344  true */\n      0x01\n        /* \"Tweet_On_Base.sol\":1315:1337  _circuitBreakerEnabled */\n      0x09\n      0x00\n        /* \"Tweet_On_Base.sol\":1315:1344  _circuitBreakerEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":1255:1352  function enableCircuitBreaker() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_103:\n        /* \"contracts/token/ERC20/ERC20.sol\":2627:2631  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2643:2656  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2671  _msgSender() */\n      tag_207\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2669  _msgSender */\n      tag_132\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2671  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/token/ERC20/ERC20.sol\":2643:2671  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2708  _transfer(owner, to, value) */\n      tag_208\n        /* \"contracts/token/ERC20/ERC20.sol\":2691:2696  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":2698:2700  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2702:2707  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2690  _transfer */\n      tag_158\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2708  _transfer(owner, to, value) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/token/ERC20/ERC20.sol\":2725:2729  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2718:2729  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":4093:4357  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_107:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"Tweet_On_Base.sol\":4195:4201  amount */\n      dup1\n        /* \"Tweet_On_Base.sol\":4164:4182  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":4164:4191  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4183:4190  owner() */\n      tag_212\n        /* \"Tweet_On_Base.sol\":4183:4188  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4183:4190  owner() */\n      jump\t// in\n    tag_212:\n        /* \"Tweet_On_Base.sol\":4164:4191  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base.sol\":4164:4201  _liquidityProvided[owner()] += amount */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_213:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":4251:4266  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base.sol\":4212:4239  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":4212:4248  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"Tweet_On_Base.sol\":4240:4247  owner() */\n      tag_214\n        /* \"Tweet_On_Base.sol\":4240:4245  owner */\n      tag_93\n        /* \"Tweet_On_Base.sol\":4240:4247  owner() */\n      jump\t// in\n    tag_214:\n        /* \"Tweet_On_Base.sol\":4212:4248  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base.sol\":4212:4266  _liquidityProvidedTimestamp[owner()] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":4277:4305  _mint(address(this), amount) */\n      tag_215\n        /* \"Tweet_On_Base.sol\":4291:4295  this */\n      address\n        /* \"Tweet_On_Base.sol\":4298:4304  amount */\n      dup3\n        /* \"Tweet_On_Base.sol\":4277:4282  _mint */\n      tag_216\n        /* \"Tweet_On_Base.sol\":4277:4305  _mint(address(this), amount) */\n      jump\t// in\n    tag_215:\n        /* \"Tweet_On_Base.sol\":4093:4357  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":2678:3700  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_110:\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_218\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_144\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_218:\n        /* \"Tweet_On_Base.sol\":2783:2801  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":2783:2813  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":2802:2812  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":2783:2813  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":2773:2779  amount */\n      dup2\n        /* \"Tweet_On_Base.sol\":2773:2813  amount <= _liquidityProvided[msg.sender] */\n      gt\n      iszero\n        /* \"Tweet_On_Base.sol\":2765:2838  require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_149\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"Tweet_On_Base.sol\":2918:2925  30 days */\n      0x278d00\n        /* \"Tweet_On_Base.sol\":2876:2903  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":2876:2915  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":2904:2914  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":2876:2915  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":2876:2925  _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      tag_222\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_222:\n        /* \"Tweet_On_Base.sol\":2857:2872  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base.sol\":2857:2925  block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      lt\n      iszero\n        /* \"Tweet_On_Base.sol\":2849:3000  require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"Tweet_On_Base.sol\":3013:3027  uint256 reward */\n      0x00\n        /* \"Tweet_On_Base.sol\":3030:3057  calculateReward(msg.sender) */\n      tag_226\n        /* \"Tweet_On_Base.sol\":3046:3056  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3030:3045  calculateReward */\n      tag_113\n        /* \"Tweet_On_Base.sol\":3030:3057  calculateReward(msg.sender) */\n      jump\t// in\n    tag_226:\n        /* \"Tweet_On_Base.sol\":3013:3057  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"Tweet_On_Base.sol\":544:570  5_000_000_000 * (10 ** 18) */\n      0x1027e72f1f12813088000000\n        /* \"Tweet_On_Base.sol\":3092:3098  reward */\n      dup2\n        /* \"Tweet_On_Base.sol\":3076:3089  totalSupply() */\n      tag_227\n        /* \"Tweet_On_Base.sol\":3076:3087  totalSupply */\n      tag_45\n        /* \"Tweet_On_Base.sol\":3076:3089  totalSupply() */\n      jump\t// in\n    tag_227:\n        /* \"Tweet_On_Base.sol\":3076:3098  totalSupply() + reward */\n      tag_228\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_228:\n        /* \"Tweet_On_Base.sol\":3076:3112  totalSupply() + reward <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"Tweet_On_Base.sol\":3068:3142  require(totalSupply() + reward <= MAX_SUPPLY, \"Reward exceeds max supply\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"Tweet_On_Base.sol\":3155:3180  _mint(msg.sender, reward) */\n      tag_232\n        /* \"Tweet_On_Base.sol\":3161:3171  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3173:3179  reward */\n      dup3\n        /* \"Tweet_On_Base.sol\":3155:3160  _mint */\n      tag_216\n        /* \"Tweet_On_Base.sol\":3155:3180  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_232:\n        /* \"Tweet_On_Base.sol\":3236:3280  _transfer(address(this), msg.sender, amount) */\n      tag_233\n        /* \"Tweet_On_Base.sol\":3254:3258  this */\n      address\n        /* \"Tweet_On_Base.sol\":3261:3271  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3273:3279  amount */\n      dup5\n        /* \"Tweet_On_Base.sol\":3236:3245  _transfer */\n      tag_158\n        /* \"Tweet_On_Base.sol\":3236:3280  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_233:\n        /* \"Tweet_On_Base.sol\":3372:3378  amount */\n      dup2\n        /* \"Tweet_On_Base.sol\":3338:3356  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":3338:3368  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3357:3367  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3338:3368  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base.sol\":3338:3378  _liquidityProvided[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_234\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_234:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":3427:3428  0 */\n      0x00\n        /* \"Tweet_On_Base.sol\":3393:3411  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":3393:3423  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3412:3422  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3393:3423  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":3393:3428  _liquidityProvided[msg.sender] == 0 */\n      sub\n        /* \"Tweet_On_Base.sol\":3389:3693  if (_liquidityProvided[msg.sender] == 0) {... */\n      tag_235\n      jumpi\n        /* \"Tweet_On_Base.sol\":3487:3488  0 */\n      0x00\n        /* \"Tweet_On_Base.sol\":3445:3472  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":3445:3484  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3473:3483  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3445:3484  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base.sol\":3445:3488  _liquidityProvidedTimestamp[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":3389:3693  if (_liquidityProvided[msg.sender] == 0) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"Tweet_On_Base.sol\":3614:3629  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base.sol\":3572:3599  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":3572:3611  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3600:3610  msg.sender */\n      caller\n        /* \"Tweet_On_Base.sol\":3572:3611  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base.sol\":3572:3629  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base.sol\":3389:3693  if (_liquidityProvided[msg.sender] == 0) {... */\n    tag_236:\n        /* \"Tweet_On_Base.sol\":2754:3700  {... */\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_237\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_160\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_237:\n        /* \"Tweet_On_Base.sol\":2678:3700  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":3708:4003  function calculateReward(address user) public view returns (uint256) {... */\n    tag_113:\n        /* \"Tweet_On_Base.sol\":3768:3775  uint256 */\n      0x00\n        /* \"Tweet_On_Base.sol\":3847:3854  30 days */\n      0x278d00\n        /* \"Tweet_On_Base.sol\":3811:3838  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base.sol\":3811:3844  _liquidityProvidedTimestamp[user] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3839:3843  user */\n      dup5\n        /* \"Tweet_On_Base.sol\":3811:3844  _liquidityProvidedTimestamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":3811:3854  _liquidityProvidedTimestamp[user] + 30 days */\n      tag_239\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"Tweet_On_Base.sol\":3792:3807  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base.sol\":3792:3854  block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days */\n      lt\n        /* \"Tweet_On_Base.sol\":3788:3977  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n      tag_240\n      jumpi\n        /* \"Tweet_On_Base.sol\":3871:3885  uint256 reward */\n      0x00\n        /* \"Tweet_On_Base.sol\":3921:3924  100 */\n      0x64\n        /* \"Tweet_On_Base.sol\":3916:3917  5 */\n      0x05\n        /* \"Tweet_On_Base.sol\":3889:3907  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base.sol\":3889:3913  _liquidityProvided[user] */\n      0x00\n        /* \"Tweet_On_Base.sol\":3908:3912  user */\n      dup7\n        /* \"Tweet_On_Base.sol\":3889:3913  _liquidityProvided[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base.sol\":3889:3917  _liquidityProvided[user] * 5 */\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"Tweet_On_Base.sol\":3888:3924  (_liquidityProvided[user] * 5) / 100 */\n      tag_243\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"Tweet_On_Base.sol\":3871:3924  uint256 reward = (_liquidityProvided[user] * 5) / 100 */\n      swap1\n      pop\n        /* \"Tweet_On_Base.sol\":3959:3965  reward */\n      dup1\n        /* \"Tweet_On_Base.sol\":3952:3965  return reward */\n      swap2\n      pop\n      pop\n      jump(tag_238)\n        /* \"Tweet_On_Base.sol\":3788:3977  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n    tag_240:\n        /* \"Tweet_On_Base.sol\":3994:3995  0 */\n      0x00\n        /* \"Tweet_On_Base.sol\":3987:3995  return 0 */\n      swap1\n      pop\n        /* \"Tweet_On_Base.sol\":3708:4003  function calculateReward(address user) public view returns (uint256) {... */\n    tag_238:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_118:\n        /* \"contracts/token/ERC20/ERC20.sol\":2874:2881  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2911  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2918  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2912:2917  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2918  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2927  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2919:2926  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2927  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":2893:2927  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_122:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_247\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_251\n        /* \"contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_186\n        /* \"contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_132:\n        /* \"contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":8090:8218  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_134:\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8211  _approve(owner, spender, value, true) */\n      tag_254\n        /* \"contracts/token/ERC20/ERC20.sol\":8183:8188  owner */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8190:8197  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8199:8204  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8206:8210  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8182  _approve */\n      tag_255\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8211  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/token/ERC20/ERC20.sol\":8090:8218  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_257\n        /* \"contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_132\n        /* \"contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_258\n        /* \"contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_93\n        /* \"contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_259\n      jumpi\n        /* \"contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_260\n        /* \"contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_132\n        /* \"contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_259:\n        /* \"contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_144:\n        /* \"contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Tweet_On_Base.sol\":1600:2047  function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {... */\n    tag_158:\n        /* \"Tweet_On_Base.sol\":1130:1152  _circuitBreakerEnabled */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Tweet_On_Base.sol\":1129:1152  !_circuitBreakerEnabled */\n      iszero\n        /* \"Tweet_On_Base.sol\":1121:1182  require(!_circuitBreakerEnabled, \"Circuit breaker is active\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"Tweet_On_Base.sol\":1723:1741  uint256 burnAmount */\n      0x00\n        /* \"Tweet_On_Base.sol\":1753:1759  100000 */\n      0x0186a0\n        /* \"Tweet_On_Base.sol\":1744:1750  amount */\n      dup3\n        /* \"Tweet_On_Base.sol\":1744:1759  amount / 100000 */\n      tag_271\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_271:\n        /* \"Tweet_On_Base.sol\":1723:1759  uint256 burnAmount = amount / 100000 */\n      swap1\n      pop\n        /* \"Tweet_On_Base.sol\":1799:1817  uint256 sendAmount */\n      0x00\n        /* \"Tweet_On_Base.sol\":1829:1839  burnAmount */\n      dup2\n        /* \"Tweet_On_Base.sol\":1820:1826  amount */\n      dup4\n        /* \"Tweet_On_Base.sol\":1820:1839  amount - burnAmount */\n      tag_272\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_272:\n        /* \"Tweet_On_Base.sol\":1799:1839  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"Tweet_On_Base.sol\":1911:1921  burnAmount */\n      dup2\n        /* \"Tweet_On_Base.sol\":1898:1908  sendAmount */\n      dup2\n        /* \"Tweet_On_Base.sol\":1898:1921  sendAmount + burnAmount */\n      tag_273\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_273:\n        /* \"Tweet_On_Base.sol\":1888:1894  amount */\n      dup4\n        /* \"Tweet_On_Base.sol\":1888:1921  amount == sendAmount + burnAmount */\n      eq\n        /* \"Tweet_On_Base.sol\":1880:1944  require(amount == sendAmount + burnAmount, \"Burn value invalid\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"Tweet_On_Base.sol\":1957:2003  super._transfer(sender, recipient, sendAmount) */\n      tag_277\n        /* \"Tweet_On_Base.sol\":1973:1979  sender */\n      dup6\n        /* \"Tweet_On_Base.sol\":1981:1990  recipient */\n      dup6\n        /* \"Tweet_On_Base.sol\":1992:2002  sendAmount */\n      dup4\n        /* \"Tweet_On_Base.sol\":1957:1972  super._transfer */\n      tag_278\n        /* \"Tweet_On_Base.sol\":1957:2003  super._transfer(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_277:\n        /* \"Tweet_On_Base.sol\":2014:2039  _burn(sender, burnAmount) */\n      tag_279\n        /* \"Tweet_On_Base.sol\":2020:2026  sender */\n      dup6\n        /* \"Tweet_On_Base.sol\":2028:2038  burnAmount */\n      dup4\n        /* \"Tweet_On_Base.sol\":2014:2019  _burn */\n      tag_175\n        /* \"Tweet_On_Base.sol\":2014:2039  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_279:\n        /* \"Tweet_On_Base.sol\":1712:2047  {... */\n      pop\n      pop\n        /* \"Tweet_On_Base.sol\":1600:2047  function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_160:\n        /* \"contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9764:10241  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_164:\n        /* \"contracts/token/ERC20/ERC20.sol\":9863:9887  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9915  allowance(owner, spender) */\n      tag_282\n        /* \"contracts/token/ERC20/ERC20.sol\":9900:9905  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9907:9914  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9899  allowance */\n      tag_118\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9915  allowance(owner, spender) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/token/ERC20/ERC20.sol\":9863:9915  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9949:9966  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/token/ERC20/ERC20.sol\":9929:9945  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9929:9966  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":9925:10235  if (currentAllowance != type(uint256).max) {... */\n      tag_283\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10005:10010  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9986:10002  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9986:10010  currentAllowance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":9982:10112  if (currentAllowance < value) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10064:10071  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":10073:10089  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":10037:10097  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9982:10112  if (currentAllowance < value) {... */\n    tag_284:\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10210  _approve(owner, spender, currentAllowance - value, false) */\n      tag_287\n        /* \"contracts/token/ERC20/ERC20.sol\":10162:10167  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10169:10176  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10197:10202  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10178:10194  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10178:10202  currentAllowance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10204:10209  false */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10161  _approve */\n      tag_255\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10210  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/token/ERC20/ERC20.sol\":9925:10235  if (currentAllowance != type(uint256).max) {... */\n    tag_283:\n        /* \"contracts/token/ERC20/ERC20.sol\":9853:10241  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9764:10241  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_171:\n        /* \"contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_289\n        /* \"contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_290\n        /* \"contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x00\n        /* \"contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_292\n        /* \"contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_132\n        /* \"contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_293\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":7212:7418  function _burn(address account, uint256 value) internal {... */\n    tag_175:\n        /* \"contracts/token/ERC20/ERC20.sol\":7301:7302  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7303  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7289  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7303  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":7278:7367  if (account == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":7353:7354  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7326:7356  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":7278:7367  if (account == address(0)) {... */\n    tag_295:\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7411  _update(account, address(0), value) */\n      tag_297\n        /* \"contracts/token/ERC20/ERC20.sol\":7384:7391  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":7401:7402  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7405:7410  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7383  _update */\n      tag_298\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7411  _update(account, address(0), value) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/token/ERC20/ERC20.sol\":7212:7418  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_186:\n        /* \"contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_195:\n        /* \"contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_301\n        /* \"contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_302\n        /* \"contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x00\n        /* \"contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_304\n        /* \"contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_132\n        /* \"contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n    tag_216:\n        /* \"contracts/token/ERC20/ERC20.sol\":6775:6776  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6763  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6829:6830  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6800:6832  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n    tag_307:\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n      tag_309\n        /* \"contracts/token/ERC20/ERC20.sol\":6868:6869  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6872:6879  account */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6881:6886  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6859  _update */\n      tag_298\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9050:9482  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_255:\n        /* \"contracts/token/ERC20/ERC20.sol\":9179:9180  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9181  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9167  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9181  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":9158:9247  if (owner == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9233:9234  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9204:9236  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9158:9247  if (owner == address(0)) {... */\n    tag_311:\n        /* \"contracts/token/ERC20/ERC20.sol\":9279:9280  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9281  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9267  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9281  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":9256:9346  if (spender == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9332:9333  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9304:9335  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9256:9346  if (spender == address(0)) {... */\n    tag_313:\n        /* \"contracts/token/ERC20/ERC20.sol\":9385:9390  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9366  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9373  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9367:9372  owner */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9373  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9382  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9374:9381  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9382  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9390  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9404:9413  emitEvent */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":9400:9476  if (emitEvent) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9450:9457  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9443:9448  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/ERC20/ERC20.sol\":9459:9464  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":9400:9476  if (emitEvent) {... */\n    tag_315:\n        /* \"contracts/token/ERC20/ERC20.sol\":9050:9482  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4604:4912  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_278:\n        /* \"contracts/token/ERC20/ERC20.sol\":4711:4712  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4713  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4699  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4713  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":4691:4777  if (from == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":4763:4764  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4736:4766  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":4691:4777  if (from == address(0)) {... */\n    tag_318:\n        /* \"contracts/token/ERC20/ERC20.sol\":4804:4805  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4806  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4792  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4806  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":4786:4872  if (to == address(0)) {... */\n      tag_320\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":4858:4859  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4829:4861  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":4786:4872  if (to == address(0)) {... */\n    tag_320:\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4905  _update(from, to, value) */\n      tag_322\n        /* \"contracts/token/ERC20/ERC20.sol\":4889:4893  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4895:4897  to */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4899:4904  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4888  _update */\n      tag_298\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4905  _update(from, to, value) */\n      jump\t// in\n    tag_322:\n        /* \"contracts/token/ERC20/ERC20.sol\":4604:4912  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_290:\n        /* \"contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_324\n        /* \"contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_78\n        /* \"contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_324:\n        /* \"contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_298:\n        /* \"contracts/token/ERC20/ERC20.sol\":5332:5333  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5320  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n      tag_329\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5468:5473  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5452:5464  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5452:5473  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_330\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_330:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n      jump(tag_331)\n    tag_329:\n        /* \"contracts/token/ERC20/ERC20.sol\":5504:5523  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5535  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5536:5540  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":5504:5541  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5573:5578  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5559:5570  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5559:5578  fromBalance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5630:5634  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5636:5647  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5649:5654  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5605:5655  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n    tag_332:\n        /* \"contracts/token/ERC20/ERC20.sol\":5822:5827  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5808:5819  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5808:5827  fromBalance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5799  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5800:5804  from */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5827  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5490:5852  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n    tag_331:\n        /* \"contracts/token/ERC20/ERC20.sol\":5880:5881  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5868  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6045:6050  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6029:6041  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6029:6050  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n      jump(tag_335)\n    tag_334:\n        /* \"contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6249  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6250:6252  to */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6262  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n    tag_335:\n        /* \"contracts/token/ERC20/ERC20.sol\":6317:6319  to */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6311:6315  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/ERC20/ERC20.sol\":6321:6326  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_302:\n        /* \"contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_338\n        /* \"contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_78\n        /* \"contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_338:\n        /* \"contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_342:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_343:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_344:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_345:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_346:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_388\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_342\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":711:782   */\n      tag_389\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_343\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_390\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_344\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":881:910   */\n      tag_391\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_345\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_37:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_393\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_346\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_348:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_350:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_351:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_399\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_350\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_352:\n        /* \"#utility.yul\":1876:1900   */\n      tag_401\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_351\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_402:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_353:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_404\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_352\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_354:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_355:\n        /* \"#utility.yul\":2232:2256   */\n      tag_407\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_354\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_408:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_356:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_410\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_355\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_40:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_413\n      tag_348\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2525:2644   */\n    tag_412:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_414\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_353\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_415\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_356\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_357:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_358:\n        /* \"#utility.yul\":3089:3110   */\n      tag_418\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_357\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_43:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_420\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_358\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_359:\n        /* \"#utility.yul\":3426:3450   */\n      tag_422\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_354\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_47:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_424\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_359\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_52:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_427\n      tag_348\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3767:3886   */\n    tag_426:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_428\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_356\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_56:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_431\n      tag_348\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4136:4255   */\n    tag_430:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_432\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_353\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_433\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_353\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_434\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_356\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_360:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_361:\n        /* \"#utility.yul\":4826:4848   */\n      tag_437\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_360\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_65:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_439\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_361\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_82:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_442\n      tag_348\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5157:5276   */\n    tag_441:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_443\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_353\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_362:\n        /* \"#utility.yul\":5503:5527   */\n      tag_445\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_351\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_95:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_447\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_362\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_117:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_450\n      tag_348\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5861:5980   */\n    tag_449:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_451\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_353\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_452\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_353\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_363:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_125:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_455:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_457\n      tag_363\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6664:6748   */\n    tag_456:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6930   */\n    tag_364:\n        /* \"#utility.yul\":6900:6922   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6923   */\n      mstore\n        /* \"#utility.yul\":6760:6930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7302   */\n    tag_365:\n        /* \"#utility.yul\":7078:7081   */\n      0x00\n        /* \"#utility.yul\":7099:7166   */\n      tag_460\n        /* \"#utility.yul\":7163:7165   */\n      0x14\n        /* \"#utility.yul\":7158:7161   */\n      dup4\n        /* \"#utility.yul\":7099:7166   */\n      tag_343\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7092:7166   */\n      swap2\n      pop\n        /* \"#utility.yul\":7175:7268   */\n      tag_461\n        /* \"#utility.yul\":7264:7267   */\n      dup3\n        /* \"#utility.yul\":7175:7268   */\n      tag_364\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7288:7291   */\n      dup3\n        /* \"#utility.yul\":7284:7296   */\n      add\n        /* \"#utility.yul\":7277:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":6936:7302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7308:7727   */\n    tag_149:\n        /* \"#utility.yul\":7474:7478   */\n      0x00\n        /* \"#utility.yul\":7512:7514   */\n      0x20\n        /* \"#utility.yul\":7501:7510   */\n      dup3\n        /* \"#utility.yul\":7497:7515   */\n      add\n        /* \"#utility.yul\":7489:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7570   */\n      dup2\n        /* \"#utility.yul\":7555:7559   */\n      dup2\n        /* \"#utility.yul\":7551:7571   */\n      sub\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7536:7545   */\n      dup4\n        /* \"#utility.yul\":7532:7549   */\n      add\n        /* \"#utility.yul\":7525:7572   */\n      mstore\n        /* \"#utility.yul\":7589:7720   */\n      tag_463\n        /* \"#utility.yul\":7715:7719   */\n      dup2\n        /* \"#utility.yul\":7589:7720   */\n      tag_365\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7581:7720   */\n      swap1\n      pop\n        /* \"#utility.yul\":7308:7727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:7913   */\n    tag_366:\n        /* \"#utility.yul\":7781:7858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7778:7779   */\n      0x00\n        /* \"#utility.yul\":7771:7859   */\n      mstore\n        /* \"#utility.yul\":7878:7882   */\n      0x11\n        /* \"#utility.yul\":7875:7876   */\n      0x04\n        /* \"#utility.yul\":7868:7883   */\n      mstore\n        /* \"#utility.yul\":7902:7906   */\n      0x24\n        /* \"#utility.yul\":7899:7900   */\n      0x00\n        /* \"#utility.yul\":7892:7907   */\n      revert\n        /* \"#utility.yul\":7919:8113   */\n    tag_152:\n        /* \"#utility.yul\":7959:7963   */\n      0x00\n        /* \"#utility.yul\":7979:7999   */\n      tag_466\n        /* \"#utility.yul\":7997:7998   */\n      dup3\n        /* \"#utility.yul\":7979:7999   */\n      tag_354\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7974:7999   */\n      swap2\n      pop\n        /* \"#utility.yul\":8013:8033   */\n      tag_467\n        /* \"#utility.yul\":8031:8032   */\n      dup4\n        /* \"#utility.yul\":8013:8033   */\n      tag_354\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8008:8033   */\n      swap3\n      pop\n        /* \"#utility.yul\":8057:8058   */\n      dup3\n        /* \"#utility.yul\":8054:8055   */\n      dup3\n        /* \"#utility.yul\":8050:8059   */\n      sub\n        /* \"#utility.yul\":8042:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":8081:8082   */\n      dup2\n        /* \"#utility.yul\":8075:8079   */\n      dup2\n        /* \"#utility.yul\":8072:8083   */\n      gt\n        /* \"#utility.yul\":8069:8106   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8086:8104   */\n      tag_469\n      tag_366\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8069:8106   */\n    tag_468:\n        /* \"#utility.yul\":7919:8113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8310   */\n    tag_179:\n        /* \"#utility.yul\":8159:8162   */\n      0x00\n        /* \"#utility.yul\":8178:8198   */\n      tag_471\n        /* \"#utility.yul\":8196:8197   */\n      dup3\n        /* \"#utility.yul\":8178:8198   */\n      tag_354\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8173:8198   */\n      swap2\n      pop\n        /* \"#utility.yul\":8212:8232   */\n      tag_472\n        /* \"#utility.yul\":8230:8231   */\n      dup4\n        /* \"#utility.yul\":8212:8232   */\n      tag_354\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8207:8232   */\n      swap3\n      pop\n        /* \"#utility.yul\":8255:8256   */\n      dup3\n        /* \"#utility.yul\":8252:8253   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      add\n        /* \"#utility.yul\":8241:8257   */\n      swap1\n      pop\n        /* \"#utility.yul\":8276:8279   */\n      dup1\n        /* \"#utility.yul\":8273:8274   */\n      dup3\n        /* \"#utility.yul\":8270:8280   */\n      gt\n        /* \"#utility.yul\":8267:8303   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":8283:8301   */\n      tag_474\n      tag_366\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8267:8303   */\n    tag_473:\n        /* \"#utility.yul\":8119:8310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8316:8610   */\n    tag_367:\n        /* \"#utility.yul\":8456:8490   */\n      0x4c6971756964697479206d7573742062652070726f766964656420666f722061\n        /* \"#utility.yul\":8452:8453   */\n      0x00\n        /* \"#utility.yul\":8444:8450   */\n      dup3\n        /* \"#utility.yul\":8440:8454   */\n      add\n        /* \"#utility.yul\":8433:8491   */\n      mstore\n        /* \"#utility.yul\":8525:8559   */\n      0x74206c65617374203330206461797320746f207175616c69667920666f722072\n        /* \"#utility.yul\":8520:8522   */\n      0x20\n        /* \"#utility.yul\":8512:8518   */\n      dup3\n        /* \"#utility.yul\":8508:8523   */\n      add\n        /* \"#utility.yul\":8501:8560   */\n      mstore\n        /* \"#utility.yul\":8594:8602   */\n      0x6577617264730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8589:8591   */\n      0x40\n        /* \"#utility.yul\":8581:8587   */\n      dup3\n        /* \"#utility.yul\":8577:8592   */\n      add\n        /* \"#utility.yul\":8570:8603   */\n      mstore\n        /* \"#utility.yul\":8316:8610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8982   */\n    tag_368:\n        /* \"#utility.yul\":8758:8761   */\n      0x00\n        /* \"#utility.yul\":8779:8846   */\n      tag_477\n        /* \"#utility.yul\":8843:8845   */\n      0x46\n        /* \"#utility.yul\":8838:8841   */\n      dup4\n        /* \"#utility.yul\":8779:8846   */\n      tag_343\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8772:8846   */\n      swap2\n      pop\n        /* \"#utility.yul\":8855:8948   */\n      tag_478\n        /* \"#utility.yul\":8944:8947   */\n      dup3\n        /* \"#utility.yul\":8855:8948   */\n      tag_367\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8973:8975   */\n      0x60\n        /* \"#utility.yul\":8968:8971   */\n      dup3\n        /* \"#utility.yul\":8964:8976   */\n      add\n        /* \"#utility.yul\":8957:8976   */\n      swap1\n      pop\n        /* \"#utility.yul\":8616:8982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8988:9407   */\n    tag_225:\n        /* \"#utility.yul\":9154:9158   */\n      0x00\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"#utility.yul\":9181:9190   */\n      dup3\n        /* \"#utility.yul\":9177:9195   */\n      add\n        /* \"#utility.yul\":9169:9195   */\n      swap1\n      pop\n        /* \"#utility.yul\":9241:9250   */\n      dup2\n        /* \"#utility.yul\":9235:9239   */\n      dup2\n        /* \"#utility.yul\":9231:9251   */\n      sub\n        /* \"#utility.yul\":9227:9228   */\n      0x00\n        /* \"#utility.yul\":9216:9225   */\n      dup4\n        /* \"#utility.yul\":9212:9229   */\n      add\n        /* \"#utility.yul\":9205:9252   */\n      mstore\n        /* \"#utility.yul\":9269:9400   */\n      tag_480\n        /* \"#utility.yul\":9395:9399   */\n      dup2\n        /* \"#utility.yul\":9269:9400   */\n      tag_368\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9261:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":8988:9407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9588   */\n    tag_369:\n        /* \"#utility.yul\":9553:9580   */\n      0x5265776172642065786365656473206d617820737570706c7900000000000000\n        /* \"#utility.yul\":9549:9550   */\n      0x00\n        /* \"#utility.yul\":9541:9547   */\n      dup3\n        /* \"#utility.yul\":9537:9551   */\n      add\n        /* \"#utility.yul\":9530:9581   */\n      mstore\n        /* \"#utility.yul\":9413:9588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9594:9960   */\n    tag_370:\n        /* \"#utility.yul\":9736:9739   */\n      0x00\n        /* \"#utility.yul\":9757:9824   */\n      tag_483\n        /* \"#utility.yul\":9821:9823   */\n      0x19\n        /* \"#utility.yul\":9816:9819   */\n      dup4\n        /* \"#utility.yul\":9757:9824   */\n      tag_343\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9750:9824   */\n      swap2\n      pop\n        /* \"#utility.yul\":9833:9926   */\n      tag_484\n        /* \"#utility.yul\":9922:9925   */\n      dup3\n        /* \"#utility.yul\":9833:9926   */\n      tag_369\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9951:9953   */\n      0x20\n        /* \"#utility.yul\":9946:9949   */\n      dup3\n        /* \"#utility.yul\":9942:9954   */\n      add\n        /* \"#utility.yul\":9935:9954   */\n      swap1\n      pop\n        /* \"#utility.yul\":9594:9960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9966:10385   */\n    tag_231:\n        /* \"#utility.yul\":10132:10136   */\n      0x00\n        /* \"#utility.yul\":10170:10172   */\n      0x20\n        /* \"#utility.yul\":10159:10168   */\n      dup3\n        /* \"#utility.yul\":10155:10173   */\n      add\n        /* \"#utility.yul\":10147:10173   */\n      swap1\n      pop\n        /* \"#utility.yul\":10219:10228   */\n      dup2\n        /* \"#utility.yul\":10213:10217   */\n      dup2\n        /* \"#utility.yul\":10209:10229   */\n      sub\n        /* \"#utility.yul\":10205:10206   */\n      0x00\n        /* \"#utility.yul\":10194:10203   */\n      dup4\n        /* \"#utility.yul\":10190:10207   */\n      add\n        /* \"#utility.yul\":10183:10230   */\n      mstore\n        /* \"#utility.yul\":10247:10378   */\n      tag_486\n        /* \"#utility.yul\":10373:10377   */\n      dup2\n        /* \"#utility.yul\":10247:10378   */\n      tag_370\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10239:10378   */\n      swap1\n      pop\n        /* \"#utility.yul\":9966:10385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10801   */\n    tag_242:\n        /* \"#utility.yul\":10431:10438   */\n      0x00\n        /* \"#utility.yul\":10454:10474   */\n      tag_488\n        /* \"#utility.yul\":10472:10473   */\n      dup3\n        /* \"#utility.yul\":10454:10474   */\n      tag_354\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10449:10474   */\n      swap2\n      pop\n        /* \"#utility.yul\":10488:10508   */\n      tag_489\n        /* \"#utility.yul\":10506:10507   */\n      dup4\n        /* \"#utility.yul\":10488:10508   */\n      tag_354\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10483:10508   */\n      swap3\n      pop\n        /* \"#utility.yul\":10543:10544   */\n      dup3\n        /* \"#utility.yul\":10540:10541   */\n      dup3\n        /* \"#utility.yul\":10536:10545   */\n      mul\n        /* \"#utility.yul\":10565:10595   */\n      tag_490\n        /* \"#utility.yul\":10583:10594   */\n      dup2\n        /* \"#utility.yul\":10565:10595   */\n      tag_354\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10554:10595   */\n      swap2\n      pop\n        /* \"#utility.yul\":10744:10745   */\n      dup3\n        /* \"#utility.yul\":10735:10742   */\n      dup3\n        /* \"#utility.yul\":10731:10746   */\n      div\n        /* \"#utility.yul\":10728:10729   */\n      dup5\n        /* \"#utility.yul\":10725:10747   */\n      eq\n        /* \"#utility.yul\":10705:10706   */\n      dup4\n        /* \"#utility.yul\":10698:10707   */\n      iszero\n        /* \"#utility.yul\":10678:10761   */\n      or\n        /* \"#utility.yul\":10655:10794   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":10774:10792   */\n      tag_492\n      tag_366\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10655:10794   */\n    tag_491:\n        /* \"#utility.yul\":10439:10801   */\n      pop\n        /* \"#utility.yul\":10391:10801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10807:10987   */\n    tag_371:\n        /* \"#utility.yul\":10855:10932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10852:10853   */\n      0x00\n        /* \"#utility.yul\":10845:10933   */\n      mstore\n        /* \"#utility.yul\":10952:10956   */\n      0x12\n        /* \"#utility.yul\":10949:10950   */\n      0x04\n        /* \"#utility.yul\":10942:10957   */\n      mstore\n        /* \"#utility.yul\":10976:10980   */\n      0x24\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10966:10981   */\n      revert\n        /* \"#utility.yul\":10993:11178   */\n    tag_244:\n        /* \"#utility.yul\":11033:11034   */\n      0x00\n        /* \"#utility.yul\":11050:11070   */\n      tag_495\n        /* \"#utility.yul\":11068:11069   */\n      dup3\n        /* \"#utility.yul\":11050:11070   */\n      tag_354\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11045:11070   */\n      swap2\n      pop\n        /* \"#utility.yul\":11084:11104   */\n      tag_496\n        /* \"#utility.yul\":11102:11103   */\n      dup4\n        /* \"#utility.yul\":11084:11104   */\n      tag_354\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11079:11104   */\n      swap3\n      pop\n        /* \"#utility.yul\":11123:11124   */\n      dup3\n        /* \"#utility.yul\":11113:11148   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":11128:11146   */\n      tag_498\n      tag_371\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11113:11148   */\n    tag_497:\n        /* \"#utility.yul\":11170:11171   */\n      dup3\n        /* \"#utility.yul\":11167:11168   */\n      dup3\n        /* \"#utility.yul\":11163:11172   */\n      div\n        /* \"#utility.yul\":11158:11172   */\n      swap1\n      pop\n        /* \"#utility.yul\":10993:11178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11365   */\n    tag_372:\n        /* \"#utility.yul\":11324:11357   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11320:11321   */\n      0x00\n        /* \"#utility.yul\":11312:11318   */\n      dup3\n        /* \"#utility.yul\":11308:11322   */\n      add\n        /* \"#utility.yul\":11301:11358   */\n      mstore\n        /* \"#utility.yul\":11184:11365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11371:11737   */\n    tag_373:\n        /* \"#utility.yul\":11513:11516   */\n      0x00\n        /* \"#utility.yul\":11534:11601   */\n      tag_501\n        /* \"#utility.yul\":11598:11600   */\n      0x1f\n        /* \"#utility.yul\":11593:11596   */\n      dup4\n        /* \"#utility.yul\":11534:11601   */\n      tag_343\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11527:11601   */\n      swap2\n      pop\n        /* \"#utility.yul\":11610:11703   */\n      tag_502\n        /* \"#utility.yul\":11699:11702   */\n      dup3\n        /* \"#utility.yul\":11610:11703   */\n      tag_372\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11728:11730   */\n      0x20\n        /* \"#utility.yul\":11723:11726   */\n      dup3\n        /* \"#utility.yul\":11719:11731   */\n      add\n        /* \"#utility.yul\":11712:11731   */\n      swap1\n      pop\n        /* \"#utility.yul\":11371:11737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11743:12162   */\n    tag_265:\n        /* \"#utility.yul\":11909:11913   */\n      0x00\n        /* \"#utility.yul\":11947:11949   */\n      0x20\n        /* \"#utility.yul\":11936:11945   */\n      dup3\n        /* \"#utility.yul\":11932:11950   */\n      add\n        /* \"#utility.yul\":11924:11950   */\n      swap1\n      pop\n        /* \"#utility.yul\":11996:12005   */\n      dup2\n        /* \"#utility.yul\":11990:11994   */\n      dup2\n        /* \"#utility.yul\":11986:12006   */\n      sub\n        /* \"#utility.yul\":11982:11983   */\n      0x00\n        /* \"#utility.yul\":11971:11980   */\n      dup4\n        /* \"#utility.yul\":11967:11984   */\n      add\n        /* \"#utility.yul\":11960:12007   */\n      mstore\n        /* \"#utility.yul\":12024:12155   */\n      tag_504\n        /* \"#utility.yul\":12150:12154   */\n      dup2\n        /* \"#utility.yul\":12024:12155   */\n      tag_373\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":12016:12155   */\n      swap1\n      pop\n        /* \"#utility.yul\":11743:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12343   */\n    tag_374:\n        /* \"#utility.yul\":12308:12335   */\n      0x4369726375697420627265616b65722069732061637469766500000000000000\n        /* \"#utility.yul\":12304:12305   */\n      0x00\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12292:12306   */\n      add\n        /* \"#utility.yul\":12285:12336   */\n      mstore\n        /* \"#utility.yul\":12168:12343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12349:12715   */\n    tag_375:\n        /* \"#utility.yul\":12491:12494   */\n      0x00\n        /* \"#utility.yul\":12512:12579   */\n      tag_507\n        /* \"#utility.yul\":12576:12578   */\n      0x19\n        /* \"#utility.yul\":12571:12574   */\n      dup4\n        /* \"#utility.yul\":12512:12579   */\n      tag_343\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12505:12579   */\n      swap2\n      pop\n        /* \"#utility.yul\":12588:12681   */\n      tag_508\n        /* \"#utility.yul\":12677:12680   */\n      dup3\n        /* \"#utility.yul\":12588:12681   */\n      tag_374\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12706:12708   */\n      0x20\n        /* \"#utility.yul\":12701:12704   */\n      dup3\n        /* \"#utility.yul\":12697:12709   */\n      add\n        /* \"#utility.yul\":12690:12709   */\n      swap1\n      pop\n        /* \"#utility.yul\":12349:12715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:13140   */\n    tag_269:\n        /* \"#utility.yul\":12887:12891   */\n      0x00\n        /* \"#utility.yul\":12925:12927   */\n      0x20\n        /* \"#utility.yul\":12914:12923   */\n      dup3\n        /* \"#utility.yul\":12910:12928   */\n      add\n        /* \"#utility.yul\":12902:12928   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:12983   */\n      dup2\n        /* \"#utility.yul\":12968:12972   */\n      dup2\n        /* \"#utility.yul\":12964:12984   */\n      sub\n        /* \"#utility.yul\":12960:12961   */\n      0x00\n        /* \"#utility.yul\":12949:12958   */\n      dup4\n        /* \"#utility.yul\":12945:12962   */\n      add\n        /* \"#utility.yul\":12938:12985   */\n      mstore\n        /* \"#utility.yul\":13002:13133   */\n      tag_510\n        /* \"#utility.yul\":13128:13132   */\n      dup2\n        /* \"#utility.yul\":13002:13133   */\n      tag_375\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12994:13133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12721:13140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13314   */\n    tag_376:\n        /* \"#utility.yul\":13286:13306   */\n      0x4275726e2076616c756520696e76616c69640000000000000000000000000000\n        /* \"#utility.yul\":13282:13283   */\n      0x00\n        /* \"#utility.yul\":13274:13280   */\n      dup3\n        /* \"#utility.yul\":13270:13284   */\n      add\n        /* \"#utility.yul\":13263:13307   */\n      mstore\n        /* \"#utility.yul\":13146:13314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13320:13686   */\n    tag_377:\n        /* \"#utility.yul\":13462:13465   */\n      0x00\n        /* \"#utility.yul\":13483:13550   */\n      tag_513\n        /* \"#utility.yul\":13547:13549   */\n      0x12\n        /* \"#utility.yul\":13542:13545   */\n      dup4\n        /* \"#utility.yul\":13483:13550   */\n      tag_343\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13476:13550   */\n      swap2\n      pop\n        /* \"#utility.yul\":13559:13652   */\n      tag_514\n        /* \"#utility.yul\":13648:13651   */\n      dup3\n        /* \"#utility.yul\":13559:13652   */\n      tag_376\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":13677:13679   */\n      0x20\n        /* \"#utility.yul\":13672:13675   */\n      dup3\n        /* \"#utility.yul\":13668:13680   */\n      add\n        /* \"#utility.yul\":13661:13680   */\n      swap1\n      pop\n        /* \"#utility.yul\":13320:13686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13692:14111   */\n    tag_276:\n        /* \"#utility.yul\":13858:13862   */\n      0x00\n        /* \"#utility.yul\":13896:13898   */\n      0x20\n        /* \"#utility.yul\":13885:13894   */\n      dup3\n        /* \"#utility.yul\":13881:13899   */\n      add\n        /* \"#utility.yul\":13873:13899   */\n      swap1\n      pop\n        /* \"#utility.yul\":13945:13954   */\n      dup2\n        /* \"#utility.yul\":13939:13943   */\n      dup2\n        /* \"#utility.yul\":13935:13955   */\n      sub\n        /* \"#utility.yul\":13931:13932   */\n      0x00\n        /* \"#utility.yul\":13920:13929   */\n      dup4\n        /* \"#utility.yul\":13916:13933   */\n      add\n        /* \"#utility.yul\":13909:13956   */\n      mstore\n        /* \"#utility.yul\":13973:14104   */\n      tag_516\n        /* \"#utility.yul\":14099:14103   */\n      dup2\n        /* \"#utility.yul\":13973:14104   */\n      tag_377\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13965:14104   */\n      swap1\n      pop\n        /* \"#utility.yul\":13692:14111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14117:14559   */\n    tag_286:\n        /* \"#utility.yul\":14266:14270   */\n      0x00\n        /* \"#utility.yul\":14304:14306   */\n      0x60\n        /* \"#utility.yul\":14293:14302   */\n      dup3\n        /* \"#utility.yul\":14289:14307   */\n      add\n        /* \"#utility.yul\":14281:14307   */\n      swap1\n      pop\n        /* \"#utility.yul\":14317:14388   */\n      tag_518\n        /* \"#utility.yul\":14385:14386   */\n      0x00\n        /* \"#utility.yul\":14374:14383   */\n      dup4\n        /* \"#utility.yul\":14370:14387   */\n      add\n        /* \"#utility.yul\":14361:14367   */\n      dup7\n        /* \"#utility.yul\":14317:14388   */\n      tag_362\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14398:14470   */\n      tag_519\n        /* \"#utility.yul\":14466:14468   */\n      0x20\n        /* \"#utility.yul\":14455:14464   */\n      dup4\n        /* \"#utility.yul\":14451:14469   */\n      add\n        /* \"#utility.yul\":14442:14448   */\n      dup6\n        /* \"#utility.yul\":14398:14470   */\n      tag_359\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14480:14552   */\n      tag_520\n        /* \"#utility.yul\":14548:14550   */\n      0x40\n        /* \"#utility.yul\":14537:14546   */\n      dup4\n        /* \"#utility.yul\":14533:14551   */\n      add\n        /* \"#utility.yul\":14524:14530   */\n      dup5\n        /* \"#utility.yul\":14480:14552   */\n      tag_359\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14117:14559   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14565:14735   */\n    tag_378:\n        /* \"#utility.yul\":14705:14727   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":14701:14702   */\n      0x00\n        /* \"#utility.yul\":14693:14699   */\n      dup3\n        /* \"#utility.yul\":14689:14703   */\n      add\n        /* \"#utility.yul\":14682:14728   */\n      mstore\n        /* \"#utility.yul\":14565:14735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14741:15107   */\n    tag_379:\n        /* \"#utility.yul\":14883:14886   */\n      0x00\n        /* \"#utility.yul\":14904:14971   */\n      tag_523\n        /* \"#utility.yul\":14968:14970   */\n      0x14\n        /* \"#utility.yul\":14963:14966   */\n      dup4\n        /* \"#utility.yul\":14904:14971   */\n      tag_343\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14897:14971   */\n      swap2\n      pop\n        /* \"#utility.yul\":14980:15073   */\n      tag_524\n        /* \"#utility.yul\":15069:15072   */\n      dup3\n        /* \"#utility.yul\":14980:15073   */\n      tag_378\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15098:15100   */\n      0x20\n        /* \"#utility.yul\":15093:15096   */\n      dup3\n        /* \"#utility.yul\":15089:15101   */\n      add\n        /* \"#utility.yul\":15082:15101   */\n      swap1\n      pop\n        /* \"#utility.yul\":14741:15107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15113:15532   */\n    tag_327:\n        /* \"#utility.yul\":15279:15283   */\n      0x00\n        /* \"#utility.yul\":15317:15319   */\n      0x20\n        /* \"#utility.yul\":15306:15315   */\n      dup3\n        /* \"#utility.yul\":15302:15320   */\n      add\n        /* \"#utility.yul\":15294:15320   */\n      swap1\n      pop\n        /* \"#utility.yul\":15366:15375   */\n      dup2\n        /* \"#utility.yul\":15360:15364   */\n      dup2\n        /* \"#utility.yul\":15356:15376   */\n      sub\n        /* \"#utility.yul\":15352:15353   */\n      0x00\n        /* \"#utility.yul\":15341:15350   */\n      dup4\n        /* \"#utility.yul\":15337:15354   */\n      add\n        /* \"#utility.yul\":15330:15377   */\n      mstore\n        /* \"#utility.yul\":15394:15525   */\n      tag_526\n        /* \"#utility.yul\":15520:15524   */\n      dup2\n        /* \"#utility.yul\":15394:15525   */\n      tag_379\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15386:15525   */\n      swap1\n      pop\n        /* \"#utility.yul\":15113:15532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15538:15704   */\n    tag_380:\n        /* \"#utility.yul\":15678:15696   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":15674:15675   */\n      0x00\n        /* \"#utility.yul\":15666:15672   */\n      dup3\n        /* \"#utility.yul\":15662:15676   */\n      add\n        /* \"#utility.yul\":15655:15697   */\n      mstore\n        /* \"#utility.yul\":15538:15704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15710:16076   */\n    tag_381:\n        /* \"#utility.yul\":15852:15855   */\n      0x00\n        /* \"#utility.yul\":15873:15940   */\n      tag_529\n        /* \"#utility.yul\":15937:15939   */\n      0x10\n        /* \"#utility.yul\":15932:15935   */\n      dup4\n        /* \"#utility.yul\":15873:15940   */\n      tag_343\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15866:15940   */\n      swap2\n      pop\n        /* \"#utility.yul\":15949:16042   */\n      tag_530\n        /* \"#utility.yul\":16038:16041   */\n      dup3\n        /* \"#utility.yul\":15949:16042   */\n      tag_380\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16067:16069   */\n      0x20\n        /* \"#utility.yul\":16062:16065   */\n      dup3\n        /* \"#utility.yul\":16058:16070   */\n      add\n        /* \"#utility.yul\":16051:16070   */\n      swap1\n      pop\n        /* \"#utility.yul\":15710:16076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16501   */\n    tag_341:\n        /* \"#utility.yul\":16248:16252   */\n      0x00\n        /* \"#utility.yul\":16286:16288   */\n      0x20\n        /* \"#utility.yul\":16275:16284   */\n      dup3\n        /* \"#utility.yul\":16271:16289   */\n      add\n        /* \"#utility.yul\":16263:16289   */\n      swap1\n      pop\n        /* \"#utility.yul\":16335:16344   */\n      dup2\n        /* \"#utility.yul\":16329:16333   */\n      dup2\n        /* \"#utility.yul\":16325:16345   */\n      sub\n        /* \"#utility.yul\":16321:16322   */\n      0x00\n        /* \"#utility.yul\":16310:16319   */\n      dup4\n        /* \"#utility.yul\":16306:16323   */\n      add\n        /* \"#utility.yul\":16299:16346   */\n      mstore\n        /* \"#utility.yul\":16363:16494   */\n      tag_532\n        /* \"#utility.yul\":16489:16493   */\n      dup2\n        /* \"#utility.yul\":16363:16494   */\n      tag_381\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16355:16494   */\n      swap1\n      pop\n        /* \"#utility.yul\":16082:16501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220131d74e7aa5aab4ee72eb4ba501067501a7b4d8771f2af430097f28feff0924664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_474": {
									"entryPoint": null,
									"id": 474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_735": {
									"entryPoint": null,
									"id": 735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_932": {
									"entryPoint": null,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1235": {
									"entryPoint": 574,
									"id": 1235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_570": {
									"entryPoint": 377,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1202": {
									"entryPoint": 707,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:10",
										"nodeType": "YulBlock",
										"src": "0:7000:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nativeSrc": "5279:81:10",
													"nodeType": "YulBlock",
													"src": "5279:81:10",
													"statements": [
														{
															"nativeSrc": "5289:65:10",
															"nodeType": "YulAssignment",
															"src": "5289:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:10",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nativeSrc": "5300:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:10",
														"nodeType": "YulTypedName",
														"src": "5261:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:10",
														"nodeType": "YulTypedName",
														"src": "5271:7:10",
														"type": ""
													}
												],
												"src": "5234:126:10"
											},
											{
												"body": {
													"nativeSrc": "5411:51:10",
													"nodeType": "YulBlock",
													"src": "5411:51:10",
													"statements": [
														{
															"nativeSrc": "5421:35:10",
															"nodeType": "YulAssignment",
															"src": "5421:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:10"
																},
																"nativeSrc": "5432:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:10",
														"nodeType": "YulTypedName",
														"src": "5393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:10",
														"nodeType": "YulTypedName",
														"src": "5403:7:10",
														"type": ""
													}
												],
												"src": "5366:96:10"
											},
											{
												"body": {
													"nativeSrc": "5533:53:10",
													"nodeType": "YulBlock",
													"src": "5533:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:10"
																		},
																		"nativeSrc": "5555:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:10"
																},
																"nativeSrc": "5543:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:10"
															},
															"nativeSrc": "5543:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:10",
														"nodeType": "YulTypedName",
														"src": "5521:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:10",
														"nodeType": "YulTypedName",
														"src": "5528:3:10",
														"type": ""
													}
												],
												"src": "5468:118:10"
											},
											{
												"body": {
													"nativeSrc": "5690:124:10",
													"nodeType": "YulBlock",
													"src": "5690:124:10",
													"statements": [
														{
															"nativeSrc": "5700:26:10",
															"nodeType": "YulAssignment",
															"src": "5700:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:10"
																},
																"nativeSrc": "5708:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:10"
																		},
																		"nativeSrc": "5789:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:10"
																},
																"nativeSrc": "5736:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:10"
															},
															"nativeSrc": "5736:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:10",
														"nodeType": "YulTypedName",
														"src": "5662:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:10",
														"nodeType": "YulTypedName",
														"src": "5674:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:10",
														"nodeType": "YulTypedName",
														"src": "5685:4:10",
														"type": ""
													}
												],
												"src": "5592:222:10"
											},
											{
												"body": {
													"nativeSrc": "5848:152:10",
													"nodeType": "YulBlock",
													"src": "5848:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:10"
																},
																"nativeSrc": "5858:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:10"
															},
															"nativeSrc": "5858:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:10"
																},
																"nativeSrc": "5955:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:10"
															},
															"nativeSrc": "5955:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:10"
																},
																"nativeSrc": "5979:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:10"
															},
															"nativeSrc": "5979:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:10"
											},
											{
												"body": {
													"nativeSrc": "6050:147:10",
													"nodeType": "YulBlock",
													"src": "6050:147:10",
													"statements": [
														{
															"nativeSrc": "6060:25:10",
															"nodeType": "YulAssignment",
															"src": "6060:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:10"
																},
																"nativeSrc": "6065:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:10"
																}
															]
														},
														{
															"nativeSrc": "6094:25:10",
															"nodeType": "YulAssignment",
															"src": "6094:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:10"
																},
																"nativeSrc": "6099:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:10"
																}
															]
														},
														{
															"nativeSrc": "6128:16:10",
															"nodeType": "YulAssignment",
															"src": "6128:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:10"
																},
																"nativeSrc": "6135:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:10",
																"nodeType": "YulBlock",
																"src": "6168:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:10"
																			},
																			"nativeSrc": "6170:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:10"
																		},
																		"nativeSrc": "6170:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:10"
																},
																"nativeSrc": "6157:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:10"
															},
															"nativeSrc": "6154:36:10",
															"nodeType": "YulIf",
															"src": "6154:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:10",
														"nodeType": "YulTypedName",
														"src": "6037:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:10",
														"nodeType": "YulTypedName",
														"src": "6040:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:10",
														"nodeType": "YulTypedName",
														"src": "6046:3:10",
														"type": ""
													}
												],
												"src": "6006:191:10"
											},
											{
												"body": {
													"nativeSrc": "6268:53:10",
													"nodeType": "YulBlock",
													"src": "6268:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:10"
																		},
																		"nativeSrc": "6290:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:10"
																},
																"nativeSrc": "6278:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:10"
															},
															"nativeSrc": "6278:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:10",
														"nodeType": "YulTypedName",
														"src": "6256:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:10",
														"nodeType": "YulTypedName",
														"src": "6263:3:10",
														"type": ""
													}
												],
												"src": "6203:118:10"
											},
											{
												"body": {
													"nativeSrc": "6481:288:10",
													"nodeType": "YulBlock",
													"src": "6481:288:10",
													"statements": [
														{
															"nativeSrc": "6491:26:10",
															"nodeType": "YulAssignment",
															"src": "6491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:10"
																},
																"nativeSrc": "6499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:10"
																		},
																		"nativeSrc": "6580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:10"
																},
																"nativeSrc": "6527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:10"
															},
															"nativeSrc": "6527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:10"
																		},
																		"nativeSrc": "6661:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:10"
																},
																"nativeSrc": "6608:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:10"
															},
															"nativeSrc": "6608:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:10"
																		},
																		"nativeSrc": "6743:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:10"
																},
																"nativeSrc": "6690:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:10"
															},
															"nativeSrc": "6690:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:10",
														"nodeType": "YulTypedName",
														"src": "6437:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:10",
														"nodeType": "YulTypedName",
														"src": "6449:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:10",
														"nodeType": "YulTypedName",
														"src": "6457:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:10",
														"nodeType": "YulTypedName",
														"src": "6465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:10",
														"nodeType": "YulTypedName",
														"src": "6476:4:10",
														"type": ""
													}
												],
												"src": "6327:442:10"
											},
											{
												"body": {
													"nativeSrc": "6873:124:10",
													"nodeType": "YulBlock",
													"src": "6873:124:10",
													"statements": [
														{
															"nativeSrc": "6883:26:10",
															"nodeType": "YulAssignment",
															"src": "6883:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:10"
																},
																"nativeSrc": "6891:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:10"
																		},
																		"nativeSrc": "6972:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:10"
																},
																"nativeSrc": "6919:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:10"
															},
															"nativeSrc": "6919:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:10",
														"nodeType": "YulTypedName",
														"src": "6845:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:10",
														"nodeType": "YulTypedName",
														"src": "6857:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:10",
														"nodeType": "YulTypedName",
														"src": "6868:4:10",
														"type": ""
													}
												],
												"src": "6775:222:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60095f6101000a81548160ff021916908315150217905550348015610028575f80fd5b50336040518060400160405280600d81526020017f5477656574204f6e2042617365000000000000000000000000000000000000008152506040518060400160405280600681526020017f547765657473000000000000000000000000000000000000000000000000000081525081600390816100a59190610716565b5080600490816100b59190610716565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610141575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101389190610824565b60405180910390fd5b6101508161017960201b60201c565b506001600681905550610174336a52b7d2dcc80cd2e400000061023e60201b60201c565b6108fa565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102a59190610824565b60405180910390fd5b6102bf5f83836102c360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610313578060025f828254610307919061086a565b925050819055506103e1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561039c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610393939291906108ac565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610428578060025f8282540392505081905550610472565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104cf91906108e1565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061055757607f821691505b60208210810361056a57610569610513565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105cc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610591565b6105d68683610591565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61061a610615610610846105ee565b6105f7565b6105ee565b9050919050565b5f819050919050565b61063383610600565b61064761063f82610621565b84845461059d565b825550505050565b5f90565b61065b61064f565b61066681848461062a565b505050565b5b818110156106895761067e5f82610653565b60018101905061066c565b5050565b601f8211156106ce5761069f81610570565b6106a884610582565b810160208510156106b7578190505b6106cb6106c385610582565b83018261066b565b50505b505050565b5f82821c905092915050565b5f6106ee5f19846008026106d3565b1980831691505092915050565b5f61070683836106df565b9150826002028217905092915050565b61071f826104dc565b67ffffffffffffffff811115610738576107376104e6565b5b6107428254610540565b61074d82828561068d565b5f60209050601f83116001811461077e575f841561076c578287015190505b61077685826106fb565b8655506107dd565b601f19841661078c86610570565b5f5b828110156107b35784890151825560018201915060208501945060208101905061078e565b868310156107d057848901516107cc601f8916826106df565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61080e826107e5565b9050919050565b61081e81610804565b82525050565b5f6020820190506108375f830184610815565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610874826105ee565b915061087f836105ee565b92508282019050808211156108975761089661083d565b5b92915050565b6108a6816105ee565b82525050565b5f6060820190506108bf5f830186610815565b6108cc602083018561089d565b6108d9604083018461089d565b949350505050565b5f6020820190506108f45f83018461089d565b92915050565b6121e8806109075f395ff3fe608060405234801561000f575f80fd5b506004361061018c575f3560e01c806370a08231116100dc578063a64254c311610095578063c80521071161006f578063c8052107146103fe578063d82e39621461041a578063dd62ed3e1461044a578063f2fde38b1461047a5761018c565b8063a64254c3146103a8578063a9059cbb146103b2578063afe8289a146103e25761018c565b806370a082311461030c578063715018a61461033c57806379cc6790146103465780638456cb59146103625780638da5cb5b1461036c57806395d89b411461038a5761018c565b80632ff2e9dc116101495780633f4ba83a116101235780633f4ba83a146102ac57806342966c68146102b657806351c6590a146102d25780635c975abb146102ee5761018c565b80632ff2e9dc14610252578063313ce5671461027057806332cb6b0c1461028e5761018c565b806306fdde0314610190578063095ea7b3146101ae57806318160ddd146101de57806321208fa2146101fc5780632254b79c1461020657806323b872dd14610222575b5f80fd5b610198610496565b6040516101a591906119d9565b60405180910390f35b6101c860048036038101906101c39190611a8a565b610526565b6040516101d59190611ae2565b60405180910390f35b6101e6610548565b6040516101f39190611b0a565b60405180910390f35b610204610551565b005b610220600480360381019061021b9190611b23565b610574565b005b61023c60048036038101906102379190611b4e565b610717565b6040516102499190611ae2565b60405180910390f35b61025a610745565b6040516102679190611b0a565b60405180910390f35b610278610754565b6040516102859190611bb9565b60405180910390f35b61029661075c565b6040516102a39190611b0a565b60405180910390f35b6102b461076c565b005b6102d060048036038101906102cb9190611b23565b61077e565b005b6102ec60048036038101906102e79190611b23565b610792565b005b6102f6610835565b6040516103039190611ae2565b60405180910390f35b61032660048036038101906103219190611bd2565b61084a565b6040516103339190611b0a565b60405180910390f35b61034461088f565b005b610360600480360381019061035b9190611a8a565b6108a2565b005b61036a6108c2565b005b6103746108d4565b6040516103819190611c0c565b60405180910390f35b6103926108fd565b60405161039f91906119d9565b60405180910390f35b6103b061098d565b005b6103cc60048036038101906103c79190611a8a565b6109b1565b6040516103d99190611ae2565b60405180910390f35b6103fc60048036038101906103f79190611b23565b6109d3565b005b61041860048036038101906104139190611b23565b610a8b565b005b610434600480360381019061042f9190611bd2565b610d50565b6040516104419190611b0a565b60405180910390f35b610464600480360381019061045f9190611c25565b610e0e565b6040516104719190611b0a565b60405180910390f35b610494600480360381019061048f9190611bd2565b610e90565b005b6060600380546104a590611c90565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190611c90565b801561051c5780601f106104f35761010080835404028352916020019161051c565b820191905f5260205f20905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b5f80610530610f14565b905061053d818585610f1b565b600191505092915050565b5f600254905090565b610559610f2d565b5f60095f6101000a81548160ff021916908315150217905550565b61057c610f2d565b610584610fb4565b60075f61058f6108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290611d0a565b60405180910390fd5b8060075f6106176108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461065e9190611d55565b925050819055505f60075f6106716108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036106fa575f60085f6106bc6108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61070c306107066108d4565b83611003565b6107146110dc565b50565b5f80610721610f14565b905061072e8582856110e6565b610739858585611003565b60019150509392505050565b6a52b7d2dcc80cd2e400000081565b5f6012905090565b6b1027e72f1f1281308800000081565b610774610f2d565b61077c611178565b565b61078f610789610f14565b826111d9565b50565b61079d333083611003565b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e99190611d88565b925050819055504260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610897610f2d565b6108a05f611258565b565b6108b4826108ae610f14565b836110e6565b6108be82826111d9565b5050565b6108ca610f2d565b6108d261131d565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461090c90611c90565b80601f016020809104026020016040519081016040528092919081815260200182805461093890611c90565b80156109835780601f1061095a57610100808354040283529160200191610983565b820191905f5260205f20905b81548152906001019060200180831161096657829003601f168201915b5050505050905090565b610995610f2d565b600160095f6101000a81548160ff021916908315150217905550565b5f806109bb610f14565b90506109c8818585611003565b600191505092915050565b6109db610f2d565b8060075f6109e76108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a2e9190611d88565b925050819055504260085f610a416108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a88308261137f565b50565b610a93610fb4565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611d0a565b60405180910390fd5b62278d0060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5f9190611d88565b421015610ba1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9890611e51565b60405180910390fd5b5f610bab33610d50565b90506b1027e72f1f1281308800000081610bc3610548565b610bcd9190611d88565b1115610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611eb9565b60405180910390fd5b610c18338261137f565b610c23303384611003565b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c6f9190611d55565b925050819055505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610d01575f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610d44565b4260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50610d4d6110dc565b50565b5f62278d0060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d9d9190611d88565b4210610e05575f6064600560075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df09190611ed7565b610dfa9190611f45565b905080915050610e09565b5f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e98610f2d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f08575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610eff9190611c0c565b60405180910390fd5b610f1181611258565b50565b5f33905090565b610f2883838360016113fe565b505050565b610f35610f14565b73ffffffffffffffffffffffffffffffffffffffff16610f536108d4565b73ffffffffffffffffffffffffffffffffffffffff1614610fb257610f76610f14565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fa99190611c0c565b60405180910390fd5b565b600260065403610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090611fbf565b60405180910390fd5b6002600681905550565b60095f9054906101000a900460ff1615611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990612027565b60405180910390fd5b5f620186a0826110629190611f45565b90505f81836110719190611d55565b9050818161107f9190611d88565b83146110c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b79061208f565b60405180910390fd5b6110cb8585836115cd565b6110d585836111d9565b5050505050565b6001600681905550565b5f6110f18484610e0e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111725781811015611163578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161115a939291906120ad565b60405180910390fd5b61117184848484035f6113fe565b5b50505050565b6111806116bd565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111c2610f14565b6040516111cf9190611c0c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611249575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112409190611c0c565b60405180910390fd5b611254825f83611706565b5050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61132561191f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611368610f14565b6040516113759190611c0c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113ef575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e69190611c0c565b60405180910390fd5b6113fa5f8383611706565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361146e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114659190611c0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114de575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d59190611c0c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115c7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115be9190611b0a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361163d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116349190611c0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ad575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116a49190611c0c565b60405180910390fd5b6116b8838383611706565b505050565b6116c5610835565b611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fb9061212c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611756578060025f82825461174a9190611d88565b92505081905550611824565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156117df578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117d6939291906120ad565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186b578060025f82825403925050819055506118b5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119129190611b0a565b60405180910390a3505050565b611927610835565b15611967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195e90612194565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119ab82611969565b6119b58185611973565b93506119c5818560208601611983565b6119ce81611991565b840191505092915050565b5f6020820190508181035f8301526119f181846119a1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a26826119fd565b9050919050565b611a3681611a1c565b8114611a40575f80fd5b50565b5f81359050611a5181611a2d565b92915050565b5f819050919050565b611a6981611a57565b8114611a73575f80fd5b50565b5f81359050611a8481611a60565b92915050565b5f8060408385031215611aa057611a9f6119f9565b5b5f611aad85828601611a43565b9250506020611abe85828601611a76565b9150509250929050565b5f8115159050919050565b611adc81611ac8565b82525050565b5f602082019050611af55f830184611ad3565b92915050565b611b0481611a57565b82525050565b5f602082019050611b1d5f830184611afb565b92915050565b5f60208284031215611b3857611b376119f9565b5b5f611b4584828501611a76565b91505092915050565b5f805f60608486031215611b6557611b646119f9565b5b5f611b7286828701611a43565b9350506020611b8386828701611a43565b9250506040611b9486828701611a76565b9150509250925092565b5f60ff82169050919050565b611bb381611b9e565b82525050565b5f602082019050611bcc5f830184611baa565b92915050565b5f60208284031215611be757611be66119f9565b5b5f611bf484828501611a43565b91505092915050565b611c0681611a1c565b82525050565b5f602082019050611c1f5f830184611bfd565b92915050565b5f8060408385031215611c3b57611c3a6119f9565b5b5f611c4885828601611a43565b9250506020611c5985828601611a43565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca757607f821691505b602082108103611cba57611cb9611c63565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611cf4601483611973565b9150611cff82611cc0565b602082019050919050565b5f6020820190508181035f830152611d2181611ce8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d5f82611a57565b9150611d6a83611a57565b9250828203905081811115611d8257611d81611d28565b5b92915050565b5f611d9282611a57565b9150611d9d83611a57565b9250828201905080821115611db557611db4611d28565b5b92915050565b7f4c6971756964697479206d7573742062652070726f766964656420666f7220615f8201527f74206c65617374203330206461797320746f207175616c69667920666f72207260208201527f6577617264730000000000000000000000000000000000000000000000000000604082015250565b5f611e3b604683611973565b9150611e4682611dbb565b606082019050919050565b5f6020820190508181035f830152611e6881611e2f565b9050919050565b7f5265776172642065786365656473206d617820737570706c79000000000000005f82015250565b5f611ea3601983611973565b9150611eae82611e6f565b602082019050919050565b5f6020820190508181035f830152611ed081611e97565b9050919050565b5f611ee182611a57565b9150611eec83611a57565b9250828202611efa81611a57565b91508282048414831517611f1157611f10611d28565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f4f82611a57565b9150611f5a83611a57565b925082611f6a57611f69611f18565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611fa9601f83611973565b9150611fb482611f75565b602082019050919050565b5f6020820190508181035f830152611fd681611f9d565b9050919050565b7f4369726375697420627265616b657220697320616374697665000000000000005f82015250565b5f612011601983611973565b915061201c82611fdd565b602082019050919050565b5f6020820190508181035f83015261203e81612005565b9050919050565b7f4275726e2076616c756520696e76616c696400000000000000000000000000005f82015250565b5f612079601283611973565b915061208482612045565b602082019050919050565b5f6020820190508181035f8301526120a68161206d565b9050919050565b5f6060820190506120c05f830186611bfd565b6120cd6020830185611afb565b6120da6040830184611afb565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612116601483611973565b9150612121826120e2565b602082019050919050565b5f6020820190508181035f8301526121438161210a565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61217e601083611973565b91506121898261214a565b602082019050919050565b5f6020820190508181035f8301526121ab81612172565b905091905056fea2646970667358221220131d74e7aa5aab4ee72eb4ba501067501a7b4d8771f2af430097f28feff0924664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5477656574204F6E204261736500000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5477656574730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x141 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x150 DUP2 PUSH2 0x179 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x174 CALLER PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x23E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2BF PUSH0 DUP4 DUP4 PUSH2 0x2C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x313 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x86A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x39C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x428 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x472 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x557 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x56A JUMPI PUSH2 0x569 PUSH2 0x513 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5CC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x5D6 DUP7 DUP4 PUSH2 0x591 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x61A PUSH2 0x615 PUSH2 0x610 DUP5 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x633 DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH2 0x647 PUSH2 0x63F DUP3 PUSH2 0x621 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x59D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x64F JUMP JUMPDEST PUSH2 0x666 DUP2 DUP5 DUP5 PUSH2 0x62A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x689 JUMPI PUSH2 0x67E PUSH0 DUP3 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x66C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6CE JUMPI PUSH2 0x69F DUP2 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x6A8 DUP5 PUSH2 0x582 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6B7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6CB PUSH2 0x6C3 DUP6 PUSH2 0x582 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x66B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6EE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6D3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x706 DUP4 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71F DUP3 PUSH2 0x4DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x738 JUMPI PUSH2 0x737 PUSH2 0x4E6 JUMP JUMPDEST JUMPDEST PUSH2 0x742 DUP3 SLOAD PUSH2 0x540 JUMP JUMPDEST PUSH2 0x74D DUP3 DUP3 DUP6 PUSH2 0x68D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x77E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x76C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x776 DUP6 DUP3 PUSH2 0x6FB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x78C DUP7 PUSH2 0x570 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x78E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7D0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7CC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6DF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x80E DUP3 PUSH2 0x7E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x804 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x837 PUSH0 DUP4 ADD DUP5 PUSH2 0x815 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x874 DUP3 PUSH2 0x5EE JUMP JUMPDEST SWAP2 POP PUSH2 0x87F DUP4 PUSH2 0x5EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x897 JUMPI PUSH2 0x896 PUSH2 0x83D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A6 DUP2 PUSH2 0x5EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8BF PUSH0 DUP4 ADD DUP7 PUSH2 0x815 JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x89D JUMP JUMPDEST PUSH2 0x8D9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x89D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x89D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E8 DUP1 PUSH2 0x907 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA64254C3 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC8052107 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA64254C3 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x3E2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EE JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x28E JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x21208FA2 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x76C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x530 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP2 DUP6 DUP6 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0xF2D JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x584 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH2 0x58F PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x617 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x671 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x6FA JUMPI PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x6BC PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x70C ADDRESS PUSH2 0x706 PUSH2 0x8D4 JUMP JUMPDEST DUP4 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x10DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x721 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x72E DUP6 DUP3 DUP6 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x739 DUP6 DUP6 DUP6 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x1027E72F1F12813088000000 DUP2 JUMP JUMPDEST PUSH2 0x774 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1178 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x78F PUSH2 0x789 PUSH2 0xF14 JUMP JUMPDEST DUP3 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x79D CALLER ADDRESS DUP4 PUSH2 0x1003 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x897 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x8A0 PUSH0 PUSH2 0x1258 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B4 DUP3 PUSH2 0x8AE PUSH2 0xF14 JUMP JUMPDEST DUP4 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x8BE DUP3 DUP3 PUSH2 0x11D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x8D2 PUSH2 0x131D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x90C SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x938 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x983 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x983 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x966 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x995 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9BB PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C8 DUP2 DUP6 DUP6 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0xF2D JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x9E7 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 PUSH2 0xA41 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA88 ADDRESS DUP3 PUSH2 0x137F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA93 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBAB CALLER PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP PUSH12 0x1027E72F1F12813088000000 DUP2 PUSH2 0xBC3 PUSH2 0x548 JUMP JUMPDEST PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC18 CALLER DUP3 PUSH2 0x137F JUMP JUMPDEST PUSH2 0xC23 ADDRESS CALLER DUP5 PUSH2 0x1003 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xD01 JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD44 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xD4D PUSH2 0x10DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xE05 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0xE09 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 PUSH2 0xF2D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0x1258 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF35 PUSH2 0xF14 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF53 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB2 JUMPI PUSH2 0xF76 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF0 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST DUP4 EQ PUSH2 0x10C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B7 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CB DUP6 DUP6 DUP4 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x10D5 DUP6 DUP4 PUSH2 0x11D9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10F1 DUP5 DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1172 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1163 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1180 PUSH2 0x16BD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11C2 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1249 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1254 DUP3 PUSH0 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1368 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13FA PUSH0 DUP4 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x146E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15C7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15BE SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x163D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B8 DUP4 DUP4 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16C5 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x1704 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FB SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1756 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1824 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18B5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1927 PUSH2 0x835 JUMP JUMPDEST ISZERO PUSH2 0x1967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195E SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AB DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x19B5 DUP2 DUP6 PUSH2 0x1973 JUMP JUMPDEST SWAP4 POP PUSH2 0x19C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x1991 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F1 DUP2 DUP5 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A26 DUP3 PUSH2 0x19FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A1C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A51 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A69 DUP2 PUSH2 0x1A57 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A84 DUP2 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAD DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABE DUP6 DUP3 DUP7 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADC DUP2 PUSH2 0x1AC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B04 DUP2 PUSH2 0x1A57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH2 0x1B37 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B45 DUP5 DUP3 DUP6 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B72 DUP7 DUP3 DUP8 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP7 DUP3 DUP8 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B94 DUP7 DUP3 DUP8 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP2 PUSH2 0x1B9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C06 DUP2 PUSH2 0x1A1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1F PUSH0 DUP4 ADD DUP5 PUSH2 0x1BFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C48 DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C59 DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1C63 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF4 PUSH1 0x14 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFF DUP3 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D21 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D5F DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D82 JUMPI PUSH2 0x1D81 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D92 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB4 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3B PUSH1 0x46 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E68 DUP2 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA3 PUSH1 0x19 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAE DUP3 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE1 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEC DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1EFA DUP2 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F4F DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA9 PUSH1 0x1F DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB4 DUP3 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FD6 DUP2 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2011 PUSH1 0x19 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x201C DUP3 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203E DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2079 PUSH1 0x12 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20A6 DUP2 PUSH2 0x206D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x20DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2116 PUSH1 0x14 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2121 DUP3 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x217E PUSH1 0x10 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21AB DUP2 PUSH2 0x2172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SAR PUSH21 0xE7AA5AAB4EE72EB4BA501067501A7B4D8771F2AF43 STOP SWAP8 CALLCODE DUP16 0xEF CREATE SWAP3 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "344:4537:0:-:0;;;753:5;715:43;;;;;;;;;;;;;;;;;;;;767:119;;;;;;;;;;822:10;844:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:5;910;:13;;;;;;:::i;:::-;;943:7;933;:17;;;;;;:::i;:::-;;844:113;;1006:5:3;996:7;;:15;;;;;;;;;;;;;;;;;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;845:33:0::2;851:10;476:24;845:5;;;:33;;:::i;:::-;344:4537:::0;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6677:217:5:-;6775:1;6756:21;;:7;:21;;;6752:91;;6829:1;6800:32;;;;;;;;;;;:::i;:::-;;;;;;;;6752:91;6852:35;6868:1;6872:7;6881:5;6852:7;;;:35;;:::i;:::-;6677:217;;:::o;5227:1107::-;5332:1;5316:18;;:4;:18;;;5312:540;;5468:5;5452:12;;:21;;;;;;;:::i;:::-;;;;;;;;5312:540;;;5504:19;5526:9;:15;5536:4;5526:15;;;;;;;;;;;;;;;;5504:37;;5573:5;5559:11;:19;5555:115;;;5630:4;5636:11;5649:5;5605:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5555:115;5822:5;5808:11;:19;5790:9;:15;5800:4;5790:15;;;;;;;;;;;;;;;:37;;;;5490:362;5312:540;5880:1;5866:16;;:2;:16;;;5862:425;;6045:5;6029:12;;:21;;;;;;;;;;;5862:425;;;6257:5;6240:9;:13;6250:2;6240:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;5862:425;6317:2;6302:25;;6311:4;6302:25;;;6321:5;6302:25;;;;;;:::i;:::-;;;;;;;;5227:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;344:4537:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INITIAL_SUPPLY_25": {
									"entryPoint": 1861,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_33": {
									"entryPoint": 1884,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1296": {
									"entryPoint": 3867,
									"id": 1296,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1356": {
									"entryPoint": 5118,
									"id": 1356,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1268": {
									"entryPoint": 4569,
									"id": 1268,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_508": {
									"entryPoint": 3885,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1235": {
									"entryPoint": 4991,
									"id": 1235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1567": {
									"entryPoint": 3860,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_869": {
									"entryPoint": 4316,
									"id": 869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_861": {
									"entryPoint": 4020,
									"id": 861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_799": {
									"entryPoint": 4893,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_772": {
									"entryPoint": 6431,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_783": {
									"entryPoint": 5821,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1404": {
									"entryPoint": 4326,
									"id": 1404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_570": {
									"entryPoint": 4696,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1125": {
									"entryPoint": 5581,
									"id": 1125,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_157": {
									"entryPoint": 4099,
									"id": 157,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_815": {
									"entryPoint": 4472,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1202": {
									"entryPoint": 5894,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_211": {
									"entryPoint": 1938,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_1022": {
									"entryPoint": 3598,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1046": {
									"entryPoint": 1318,
									"id": 1046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_981": {
									"entryPoint": 2122,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1528": {
									"entryPoint": 2210,
									"id": 1528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1507": {
									"entryPoint": 1918,
									"id": 1507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_339": {
									"entryPoint": 3408,
									"id": 339,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_959": {
									"entryPoint": 1876,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableCircuitBreaker_110": {
									"entryPoint": 1361,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableCircuitBreaker_100": {
									"entryPoint": 2445,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_941": {
									"entryPoint": 1174,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerAddLiquidity_370": {
									"entryPoint": 2515,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ownerRemoveLiquidity_422": {
									"entryPoint": 1396,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_491": {
									"entryPoint": 2260,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_71": {
									"entryPoint": 2242,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_760": {
									"entryPoint": 2101,
									"id": 760,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidityAndClaimRewards_306": {
									"entryPoint": 2699,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_522": {
									"entryPoint": 2191,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_950": {
									"entryPoint": 2301,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_968": {
									"entryPoint": 1352,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1078": {
									"entryPoint": 1815,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_550": {
									"entryPoint": 3728,
									"id": 550,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1005": {
									"entryPoint": 2481,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_80": {
									"entryPoint": 1900,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772": {
									"entryPoint": 7791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12": {
									"entryPoint": 8261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16504:10",
										"nodeType": "YulBlock",
										"src": "0:16504:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3757:263:10",
													"nodeType": "YulBlock",
													"src": "3757:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:10",
																"nodeType": "YulBlock",
																"src": "3803:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:10"
																			},
																			"nativeSrc": "3805:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:10"
																		},
																		"nativeSrc": "3805:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:10"
																		},
																		"nativeSrc": "3774:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:10"
																},
																"nativeSrc": "3770:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:10"
															},
															"nativeSrc": "3767:119:10",
															"nodeType": "YulIf",
															"src": "3767:119:10"
														},
														{
															"nativeSrc": "3896:117:10",
															"nodeType": "YulBlock",
															"src": "3896:117:10",
															"statements": [
																{
																	"nativeSrc": "3911:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:10"
																				},
																				"nativeSrc": "3971:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:10"
																		},
																		"nativeSrc": "3950:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:10",
														"nodeType": "YulTypedName",
														"src": "3727:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:10",
														"nodeType": "YulTypedName",
														"src": "3738:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:10",
														"nodeType": "YulTypedName",
														"src": "3750:6:10",
														"type": ""
													}
												],
												"src": "3691:329:10"
											},
											{
												"body": {
													"nativeSrc": "4126:519:10",
													"nodeType": "YulBlock",
													"src": "4126:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:10",
																"nodeType": "YulBlock",
																"src": "4172:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:10"
																			},
																			"nativeSrc": "4174:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:10"
																		},
																		"nativeSrc": "4174:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:10"
																		},
																		"nativeSrc": "4143:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:10"
																},
																"nativeSrc": "4139:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:10"
															},
															"nativeSrc": "4136:119:10",
															"nodeType": "YulIf",
															"src": "4136:119:10"
														},
														{
															"nativeSrc": "4265:117:10",
															"nodeType": "YulBlock",
															"src": "4265:117:10",
															"statements": [
																{
																	"nativeSrc": "4280:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:10"
																				},
																				"nativeSrc": "4340:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:10"
																		},
																		"nativeSrc": "4319:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:10",
															"nodeType": "YulBlock",
															"src": "4392:118:10",
															"statements": [
																{
																	"nativeSrc": "4407:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:10"
																				},
																				"nativeSrc": "4468:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:10"
																		},
																		"nativeSrc": "4447:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:10",
															"nodeType": "YulBlock",
															"src": "4520:118:10",
															"statements": [
																{
																	"nativeSrc": "4535:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:10"
																				},
																				"nativeSrc": "4596:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:10"
																		},
																		"nativeSrc": "4575:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:10",
														"nodeType": "YulTypedName",
														"src": "4080:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:10",
														"nodeType": "YulTypedName",
														"src": "4091:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:10",
														"nodeType": "YulTypedName",
														"src": "4103:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:10",
														"nodeType": "YulTypedName",
														"src": "4111:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:10",
														"nodeType": "YulTypedName",
														"src": "4119:6:10",
														"type": ""
													}
												],
												"src": "4026:619:10"
											},
											{
												"body": {
													"nativeSrc": "4694:43:10",
													"nodeType": "YulBlock",
													"src": "4694:43:10",
													"statements": [
														{
															"nativeSrc": "4704:27:10",
															"nodeType": "YulAssignment",
															"src": "4704:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:10"
																},
																"nativeSrc": "4715:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:10",
														"nodeType": "YulTypedName",
														"src": "4676:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:10",
														"nodeType": "YulTypedName",
														"src": "4686:7:10",
														"type": ""
													}
												],
												"src": "4651:86:10"
											},
											{
												"body": {
													"nativeSrc": "4804:51:10",
													"nodeType": "YulBlock",
													"src": "4804:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:10"
																		},
																		"nativeSrc": "4826:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:10"
																},
																"nativeSrc": "4814:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:10"
															},
															"nativeSrc": "4814:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:10",
														"nodeType": "YulTypedName",
														"src": "4792:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:10",
														"nodeType": "YulTypedName",
														"src": "4799:3:10",
														"type": ""
													}
												],
												"src": "4743:112:10"
											},
											{
												"body": {
													"nativeSrc": "4955:120:10",
													"nodeType": "YulBlock",
													"src": "4955:120:10",
													"statements": [
														{
															"nativeSrc": "4965:26:10",
															"nodeType": "YulAssignment",
															"src": "4965:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:10"
																},
																"nativeSrc": "4973:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:10"
																		},
																		"nativeSrc": "5050:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:10"
																},
																"nativeSrc": "5001:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:10"
															},
															"nativeSrc": "5001:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:10",
														"nodeType": "YulTypedName",
														"src": "4927:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:10",
														"nodeType": "YulTypedName",
														"src": "4939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:10",
														"nodeType": "YulTypedName",
														"src": "4950:4:10",
														"type": ""
													}
												],
												"src": "4861:214:10"
											},
											{
												"body": {
													"nativeSrc": "5147:263:10",
													"nodeType": "YulBlock",
													"src": "5147:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:10",
																"nodeType": "YulBlock",
																"src": "5193:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:10"
																			},
																			"nativeSrc": "5195:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:10"
																		},
																		"nativeSrc": "5195:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:10"
																		},
																		"nativeSrc": "5164:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:10"
																},
																"nativeSrc": "5160:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:10"
															},
															"nativeSrc": "5157:119:10",
															"nodeType": "YulIf",
															"src": "5157:119:10"
														},
														{
															"nativeSrc": "5286:117:10",
															"nodeType": "YulBlock",
															"src": "5286:117:10",
															"statements": [
																{
																	"nativeSrc": "5301:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:10"
																				},
																				"nativeSrc": "5361:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:10"
																		},
																		"nativeSrc": "5340:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:10",
														"nodeType": "YulTypedName",
														"src": "5117:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:10",
														"nodeType": "YulTypedName",
														"src": "5128:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:10",
														"nodeType": "YulTypedName",
														"src": "5140:6:10",
														"type": ""
													}
												],
												"src": "5081:329:10"
											},
											{
												"body": {
													"nativeSrc": "5481:53:10",
													"nodeType": "YulBlock",
													"src": "5481:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:10"
																		},
																		"nativeSrc": "5503:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:10"
																},
																"nativeSrc": "5491:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:10"
															},
															"nativeSrc": "5491:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:10",
														"nodeType": "YulTypedName",
														"src": "5469:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:10",
														"nodeType": "YulTypedName",
														"src": "5476:3:10",
														"type": ""
													}
												],
												"src": "5416:118:10"
											},
											{
												"body": {
													"nativeSrc": "5638:124:10",
													"nodeType": "YulBlock",
													"src": "5638:124:10",
													"statements": [
														{
															"nativeSrc": "5648:26:10",
															"nodeType": "YulAssignment",
															"src": "5648:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:10"
																},
																"nativeSrc": "5656:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:10"
																		},
																		"nativeSrc": "5737:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:10"
																},
																"nativeSrc": "5684:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:10"
															},
															"nativeSrc": "5684:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:10",
														"nodeType": "YulTypedName",
														"src": "5610:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:10",
														"nodeType": "YulTypedName",
														"src": "5622:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:10",
														"nodeType": "YulTypedName",
														"src": "5633:4:10",
														"type": ""
													}
												],
												"src": "5540:222:10"
											},
											{
												"body": {
													"nativeSrc": "5851:391:10",
													"nodeType": "YulBlock",
													"src": "5851:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:10",
																"nodeType": "YulBlock",
																"src": "5897:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:10"
																			},
																			"nativeSrc": "5899:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:10"
																		},
																		"nativeSrc": "5899:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:10"
																		},
																		"nativeSrc": "5868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:10"
																},
																"nativeSrc": "5864:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:10"
															},
															"nativeSrc": "5861:119:10",
															"nodeType": "YulIf",
															"src": "5861:119:10"
														},
														{
															"nativeSrc": "5990:117:10",
															"nodeType": "YulBlock",
															"src": "5990:117:10",
															"statements": [
																{
																	"nativeSrc": "6005:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:10"
																				},
																				"nativeSrc": "6065:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:10"
																		},
																		"nativeSrc": "6044:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:10",
															"nodeType": "YulBlock",
															"src": "6117:118:10",
															"statements": [
																{
																	"nativeSrc": "6132:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:10"
																				},
																				"nativeSrc": "6193:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:10"
																		},
																		"nativeSrc": "6172:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:10",
														"nodeType": "YulTypedName",
														"src": "5813:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:10",
														"nodeType": "YulTypedName",
														"src": "5824:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:10",
														"nodeType": "YulTypedName",
														"src": "5836:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:10",
														"nodeType": "YulTypedName",
														"src": "5844:6:10",
														"type": ""
													}
												],
												"src": "5768:474:10"
											},
											{
												"body": {
													"nativeSrc": "6276:152:10",
													"nodeType": "YulBlock",
													"src": "6276:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:10"
																},
																"nativeSrc": "6286:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:10"
															},
															"nativeSrc": "6286:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:10"
																},
																"nativeSrc": "6383:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:10"
															},
															"nativeSrc": "6383:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:10"
																},
																"nativeSrc": "6407:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:10"
															},
															"nativeSrc": "6407:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:10"
											},
											{
												"body": {
													"nativeSrc": "6485:269:10",
													"nodeType": "YulBlock",
													"src": "6485:269:10",
													"statements": [
														{
															"nativeSrc": "6495:22:10",
															"nodeType": "YulAssignment",
															"src": "6495:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:10"
																},
																"nativeSrc": "6505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:10"
																}
															]
														},
														{
															"nativeSrc": "6526:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:10"
																},
																"nativeSrc": "6552:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:10",
																"nodeType": "YulBlock",
																"src": "6603:51:10",
																"statements": [
																	{
																		"nativeSrc": "6617:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:10"
																			},
																			"nativeSrc": "6627:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:10"
																},
																"nativeSrc": "6576:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:10"
															},
															"nativeSrc": "6573:81:10",
															"nodeType": "YulIf",
															"src": "6573:81:10"
														},
														{
															"body": {
																"nativeSrc": "6706:42:10",
																"nodeType": "YulBlock",
																"src": "6706:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:10"
																			},
																			"nativeSrc": "6720:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:10"
																		},
																		"nativeSrc": "6720:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:10"
																		},
																		"nativeSrc": "6690:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:10"
																},
																"nativeSrc": "6667:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:10"
															},
															"nativeSrc": "6664:84:10",
															"nodeType": "YulIf",
															"src": "6664:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:10",
														"nodeType": "YulTypedName",
														"src": "6469:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:10",
														"nodeType": "YulTypedName",
														"src": "6478:6:10",
														"type": ""
													}
												],
												"src": "6434:320:10"
											},
											{
												"body": {
													"nativeSrc": "6866:64:10",
													"nodeType": "YulBlock",
													"src": "6866:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:10"
																		},
																		"nativeSrc": "6884:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "6900:22:10",
																		"nodeType": "YulLiteral",
																		"src": "6900:22:10",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:10"
																},
																"nativeSrc": "6877:46:10",
																"nodeType": "YulFunctionCall",
																"src": "6877:46:10"
															},
															"nativeSrc": "6877:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "6877:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "6760:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:10",
														"nodeType": "YulTypedName",
														"src": "6858:6:10",
														"type": ""
													}
												],
												"src": "6760:170:10"
											},
											{
												"body": {
													"nativeSrc": "7082:220:10",
													"nodeType": "YulBlock",
													"src": "7082:220:10",
													"statements": [
														{
															"nativeSrc": "7092:74:10",
															"nodeType": "YulAssignment",
															"src": "7092:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7158:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7099:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7099:58:10"
																},
																"nativeSrc": "7099:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7099:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7264:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7264:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "7175:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7175:88:10"
																},
																"nativeSrc": "7175:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7175:93:10"
															},
															"nativeSrc": "7175:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7175:93:10"
														},
														{
															"nativeSrc": "7277:19:10",
															"nodeType": "YulAssignment",
															"src": "7277:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7288:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7288:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:10"
																},
																"nativeSrc": "7284:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7284:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7277:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6936:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7070:3:10",
														"nodeType": "YulTypedName",
														"src": "7070:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7078:3:10",
														"nodeType": "YulTypedName",
														"src": "7078:3:10",
														"type": ""
													}
												],
												"src": "6936:366:10"
											},
											{
												"body": {
													"nativeSrc": "7479:248:10",
													"nodeType": "YulBlock",
													"src": "7479:248:10",
													"statements": [
														{
															"nativeSrc": "7489:26:10",
															"nodeType": "YulAssignment",
															"src": "7489:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7501:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7501:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7512:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7512:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7497:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:10"
																},
																"nativeSrc": "7497:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7497:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7489:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7489:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7536:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7547:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:10"
																		},
																		"nativeSrc": "7532:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7555:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7555:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7561:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7551:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:10"
																		},
																		"nativeSrc": "7551:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7525:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7525:6:10"
																},
																"nativeSrc": "7525:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7525:47:10"
															},
															"nativeSrc": "7525:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7525:47:10"
														},
														{
															"nativeSrc": "7581:139:10",
															"nodeType": "YulAssignment",
															"src": "7581:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7715:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7715:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7589:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7589:124:10"
																},
																"nativeSrc": "7589:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7589:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7581:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7581:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7308:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7459:9:10",
														"nodeType": "YulTypedName",
														"src": "7459:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7474:4:10",
														"nodeType": "YulTypedName",
														"src": "7474:4:10",
														"type": ""
													}
												],
												"src": "7308:419:10"
											},
											{
												"body": {
													"nativeSrc": "7761:152:10",
													"nodeType": "YulBlock",
													"src": "7761:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7778:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7778:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7781:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7781:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:10"
																},
																"nativeSrc": "7771:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7771:88:10"
															},
															"nativeSrc": "7771:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7771:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7875:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7875:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7878:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:10"
																},
																"nativeSrc": "7868:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7868:15:10"
															},
															"nativeSrc": "7868:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7868:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7899:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7899:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7902:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:10"
																},
																"nativeSrc": "7892:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7892:15:10"
															},
															"nativeSrc": "7892:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7892:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7733:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7733:180:10"
											},
											{
												"body": {
													"nativeSrc": "7964:149:10",
													"nodeType": "YulBlock",
													"src": "7964:149:10",
													"statements": [
														{
															"nativeSrc": "7974:25:10",
															"nodeType": "YulAssignment",
															"src": "7974:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7997:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7997:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7979:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7979:17:10"
																},
																"nativeSrc": "7979:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7979:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7974:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7974:1:10"
																}
															]
														},
														{
															"nativeSrc": "8008:25:10",
															"nodeType": "YulAssignment",
															"src": "8008:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8031:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8013:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8013:17:10"
																},
																"nativeSrc": "8013:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8013:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8008:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8008:1:10"
																}
															]
														},
														{
															"nativeSrc": "8042:17:10",
															"nodeType": "YulAssignment",
															"src": "8042:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8054:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8054:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8057:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8050:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:10"
																},
																"nativeSrc": "8050:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8050:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8042:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8084:22:10",
																"nodeType": "YulBlock",
																"src": "8084:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8086:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8086:16:10"
																			},
																			"nativeSrc": "8086:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8086:18:10"
																		},
																		"nativeSrc": "8086:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8086:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8075:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8081:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8081:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8072:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8072:2:10"
																},
																"nativeSrc": "8072:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8072:11:10"
															},
															"nativeSrc": "8069:37:10",
															"nodeType": "YulIf",
															"src": "8069:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7919:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7950:1:10",
														"nodeType": "YulTypedName",
														"src": "7950:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7953:1:10",
														"nodeType": "YulTypedName",
														"src": "7953:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7959:4:10",
														"nodeType": "YulTypedName",
														"src": "7959:4:10",
														"type": ""
													}
												],
												"src": "7919:194:10"
											},
											{
												"body": {
													"nativeSrc": "8163:147:10",
													"nodeType": "YulBlock",
													"src": "8163:147:10",
													"statements": [
														{
															"nativeSrc": "8173:25:10",
															"nodeType": "YulAssignment",
															"src": "8173:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8196:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8178:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8178:17:10"
																},
																"nativeSrc": "8178:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8178:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8173:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8173:1:10"
																}
															]
														},
														{
															"nativeSrc": "8207:25:10",
															"nodeType": "YulAssignment",
															"src": "8207:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8230:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8230:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8212:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8212:17:10"
																},
																"nativeSrc": "8212:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8212:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8207:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8207:1:10"
																}
															]
														},
														{
															"nativeSrc": "8241:16:10",
															"nodeType": "YulAssignment",
															"src": "8241:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8252:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8252:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8255:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8255:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8248:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:10"
																},
																"nativeSrc": "8248:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8248:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8241:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8241:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8281:22:10",
																"nodeType": "YulBlock",
																"src": "8281:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8283:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8283:16:10"
																			},
																			"nativeSrc": "8283:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8283:18:10"
																		},
																		"nativeSrc": "8283:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8283:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8273:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8273:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8276:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8270:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8270:2:10"
																},
																"nativeSrc": "8270:10:10",
																"nodeType": "YulFunctionCall",
																"src": "8270:10:10"
															},
															"nativeSrc": "8267:36:10",
															"nodeType": "YulIf",
															"src": "8267:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8119:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8150:1:10",
														"nodeType": "YulTypedName",
														"src": "8150:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8153:1:10",
														"nodeType": "YulTypedName",
														"src": "8153:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8159:3:10",
														"nodeType": "YulTypedName",
														"src": "8159:3:10",
														"type": ""
													}
												],
												"src": "8119:191:10"
											},
											{
												"body": {
													"nativeSrc": "8422:188:10",
													"nodeType": "YulBlock",
													"src": "8422:188:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8444:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8444:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8452:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8452:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8440:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:10"
																		},
																		"nativeSrc": "8440:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:14:10"
																	},
																	{
																		"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f722061",
																		"kind": "string",
																		"nativeSrc": "8456:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8456:34:10",
																		"type": "",
																		"value": "Liquidity must be provided for a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:10"
																},
																"nativeSrc": "8433:58:10",
																"nodeType": "YulFunctionCall",
																"src": "8433:58:10"
															},
															"nativeSrc": "8433:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "8433:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8512:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8512:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8520:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:10"
																		},
																		"nativeSrc": "8508:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:15:10"
																	},
																	{
																		"hexValue": "74206c65617374203330206461797320746f207175616c69667920666f722072",
																		"kind": "string",
																		"nativeSrc": "8525:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8525:34:10",
																		"type": "",
																		"value": "t least 30 days to qualify for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:10"
																},
																"nativeSrc": "8501:59:10",
																"nodeType": "YulFunctionCall",
																"src": "8501:59:10"
															},
															"nativeSrc": "8501:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "8501:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8581:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8581:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8589:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:10"
																		},
																		"nativeSrc": "8577:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:15:10"
																	},
																	{
																		"hexValue": "657761726473",
																		"kind": "string",
																		"nativeSrc": "8594:8:10",
																		"nodeType": "YulLiteral",
																		"src": "8594:8:10",
																		"type": "",
																		"value": "ewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:10"
																},
																"nativeSrc": "8570:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8570:33:10"
															},
															"nativeSrc": "8570:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "8570:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
												"nativeSrc": "8316:294:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8414:6:10",
														"nodeType": "YulTypedName",
														"src": "8414:6:10",
														"type": ""
													}
												],
												"src": "8316:294:10"
											},
											{
												"body": {
													"nativeSrc": "8762:220:10",
													"nodeType": "YulBlock",
													"src": "8762:220:10",
													"statements": [
														{
															"nativeSrc": "8772:74:10",
															"nodeType": "YulAssignment",
															"src": "8772:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8838:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8838:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8843:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8843:2:10",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8779:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8779:58:10"
																},
																"nativeSrc": "8779:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8779:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8944:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8944:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																	"nativeSrc": "8855:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8855:88:10"
																},
																"nativeSrc": "8855:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8855:93:10"
															},
															"nativeSrc": "8855:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8855:93:10"
														},
														{
															"nativeSrc": "8957:19:10",
															"nodeType": "YulAssignment",
															"src": "8957:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8968:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8968:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8973:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8973:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8964:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:10"
																},
																"nativeSrc": "8964:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8964:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8957:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8616:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8750:3:10",
														"nodeType": "YulTypedName",
														"src": "8750:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8758:3:10",
														"nodeType": "YulTypedName",
														"src": "8758:3:10",
														"type": ""
													}
												],
												"src": "8616:366:10"
											},
											{
												"body": {
													"nativeSrc": "9159:248:10",
													"nodeType": "YulBlock",
													"src": "9159:248:10",
													"statements": [
														{
															"nativeSrc": "9169:26:10",
															"nodeType": "YulAssignment",
															"src": "9169:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9181:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:10"
																},
																"nativeSrc": "9177:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9177:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9169:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9169:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9216:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9227:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:10"
																		},
																		"nativeSrc": "9212:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9235:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9235:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9241:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9231:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:10"
																		},
																		"nativeSrc": "9231:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9231:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9205:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:10"
																},
																"nativeSrc": "9205:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9205:47:10"
															},
															"nativeSrc": "9205:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9205:47:10"
														},
														{
															"nativeSrc": "9261:139:10",
															"nodeType": "YulAssignment",
															"src": "9261:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9395:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9395:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9269:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9269:124:10"
																},
																"nativeSrc": "9269:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9269:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9261:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9261:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8988:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9139:9:10",
														"nodeType": "YulTypedName",
														"src": "9139:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9154:4:10",
														"nodeType": "YulTypedName",
														"src": "9154:4:10",
														"type": ""
													}
												],
												"src": "8988:419:10"
											},
											{
												"body": {
													"nativeSrc": "9519:69:10",
													"nodeType": "YulBlock",
													"src": "9519:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9541:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9541:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9549:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9549:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:10"
																		},
																		"nativeSrc": "9537:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:14:10"
																	},
																	{
																		"hexValue": "5265776172642065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "9553:27:10",
																		"nodeType": "YulLiteral",
																		"src": "9553:27:10",
																		"type": "",
																		"value": "Reward exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9530:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:10"
																},
																"nativeSrc": "9530:51:10",
																"nodeType": "YulFunctionCall",
																"src": "9530:51:10"
															},
															"nativeSrc": "9530:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "9530:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
												"nativeSrc": "9413:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9511:6:10",
														"nodeType": "YulTypedName",
														"src": "9511:6:10",
														"type": ""
													}
												],
												"src": "9413:175:10"
											},
											{
												"body": {
													"nativeSrc": "9740:220:10",
													"nodeType": "YulBlock",
													"src": "9740:220:10",
													"statements": [
														{
															"nativeSrc": "9750:74:10",
															"nodeType": "YulAssignment",
															"src": "9750:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9816:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9816:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9821:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9757:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9757:58:10"
																},
																"nativeSrc": "9757:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9757:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9750:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9922:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9922:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																	"nativeSrc": "9833:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9833:88:10"
																},
																"nativeSrc": "9833:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9833:93:10"
															},
															"nativeSrc": "9833:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9833:93:10"
														},
														{
															"nativeSrc": "9935:19:10",
															"nodeType": "YulAssignment",
															"src": "9935:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9946:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9946:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9951:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9942:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:10"
																},
																"nativeSrc": "9942:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9942:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9935:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9594:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9728:3:10",
														"nodeType": "YulTypedName",
														"src": "9728:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9736:3:10",
														"nodeType": "YulTypedName",
														"src": "9736:3:10",
														"type": ""
													}
												],
												"src": "9594:366:10"
											},
											{
												"body": {
													"nativeSrc": "10137:248:10",
													"nodeType": "YulBlock",
													"src": "10137:248:10",
													"statements": [
														{
															"nativeSrc": "10147:26:10",
															"nodeType": "YulAssignment",
															"src": "10147:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10159:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10159:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10155:3:10"
																},
																"nativeSrc": "10155:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10155:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10147:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10147:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10194:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10194:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10205:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10205:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10190:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10190:3:10"
																		},
																		"nativeSrc": "10190:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10190:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10213:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10213:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:10"
																		},
																		"nativeSrc": "10209:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:10"
																},
																"nativeSrc": "10183:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10183:47:10"
															},
															"nativeSrc": "10183:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10183:47:10"
														},
														{
															"nativeSrc": "10239:139:10",
															"nodeType": "YulAssignment",
															"src": "10239:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10373:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10373:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10247:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10247:124:10"
																},
																"nativeSrc": "10247:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10247:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10239:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10239:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9966:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10117:9:10",
														"nodeType": "YulTypedName",
														"src": "10117:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10132:4:10",
														"nodeType": "YulTypedName",
														"src": "10132:4:10",
														"type": ""
													}
												],
												"src": "9966:419:10"
											},
											{
												"body": {
													"nativeSrc": "10439:362:10",
													"nodeType": "YulBlock",
													"src": "10439:362:10",
													"statements": [
														{
															"nativeSrc": "10449:25:10",
															"nodeType": "YulAssignment",
															"src": "10449:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10472:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10454:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10454:17:10"
																},
																"nativeSrc": "10454:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10454:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10449:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10449:1:10"
																}
															]
														},
														{
															"nativeSrc": "10483:25:10",
															"nodeType": "YulAssignment",
															"src": "10483:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10506:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10506:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10488:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10488:17:10"
																},
																"nativeSrc": "10488:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10488:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10483:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10483:1:10"
																}
															]
														},
														{
															"nativeSrc": "10517:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10517:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10540:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10540:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10543:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10543:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10536:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:10"
																},
																"nativeSrc": "10536:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10536:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10521:11:10",
																	"nodeType": "YulTypedName",
																	"src": "10521:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10554:41:10",
															"nodeType": "YulAssignment",
															"src": "10554:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10583:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "10583:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10565:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10565:17:10"
																},
																"nativeSrc": "10565:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10565:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10554:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10554:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10772:22:10",
																"nodeType": "YulBlock",
																"src": "10772:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10774:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10774:16:10"
																			},
																			"nativeSrc": "10774:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10774:18:10"
																		},
																		"nativeSrc": "10774:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10774:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10705:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10705:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10698:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10698:6:10"
																				},
																				"nativeSrc": "10698:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10698:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10728:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10728:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10735:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "10735:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10744:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "10744:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10731:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10731:3:10"
																						},
																						"nativeSrc": "10731:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10731:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10725:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10725:2:10"
																				},
																				"nativeSrc": "10725:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10725:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10678:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10678:2:10"
																		},
																		"nativeSrc": "10678:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10678:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10658:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:10"
																},
																"nativeSrc": "10658:113:10",
																"nodeType": "YulFunctionCall",
																"src": "10658:113:10"
															},
															"nativeSrc": "10655:139:10",
															"nodeType": "YulIf",
															"src": "10655:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10391:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10422:1:10",
														"nodeType": "YulTypedName",
														"src": "10422:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10425:1:10",
														"nodeType": "YulTypedName",
														"src": "10425:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10431:7:10",
														"nodeType": "YulTypedName",
														"src": "10431:7:10",
														"type": ""
													}
												],
												"src": "10391:410:10"
											},
											{
												"body": {
													"nativeSrc": "10835:152:10",
													"nodeType": "YulBlock",
													"src": "10835:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10852:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10852:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10855:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10855:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10845:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10845:6:10"
																},
																"nativeSrc": "10845:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10845:88:10"
															},
															"nativeSrc": "10845:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10845:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10949:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10949:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10952:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10952:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10942:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:10"
																},
																"nativeSrc": "10942:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10942:15:10"
															},
															"nativeSrc": "10942:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10942:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10973:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10973:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10976:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10976:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:10"
																},
																"nativeSrc": "10966:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10966:15:10"
															},
															"nativeSrc": "10966:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10966:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10807:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10807:180:10"
											},
											{
												"body": {
													"nativeSrc": "11035:143:10",
													"nodeType": "YulBlock",
													"src": "11035:143:10",
													"statements": [
														{
															"nativeSrc": "11045:25:10",
															"nodeType": "YulAssignment",
															"src": "11045:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11068:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11068:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11050:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11050:17:10"
																},
																"nativeSrc": "11050:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11050:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11045:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11045:1:10"
																}
															]
														},
														{
															"nativeSrc": "11079:25:10",
															"nodeType": "YulAssignment",
															"src": "11079:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11102:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11102:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11084:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11084:17:10"
																},
																"nativeSrc": "11084:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11084:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11079:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11079:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11126:22:10",
																"nodeType": "YulBlock",
																"src": "11126:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11128:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11128:16:10"
																			},
																			"nativeSrc": "11128:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11128:18:10"
																		},
																		"nativeSrc": "11128:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11128:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11123:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11123:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11116:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:10"
																},
																"nativeSrc": "11116:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11116:9:10"
															},
															"nativeSrc": "11113:35:10",
															"nodeType": "YulIf",
															"src": "11113:35:10"
														},
														{
															"nativeSrc": "11158:14:10",
															"nodeType": "YulAssignment",
															"src": "11158:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11167:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11167:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11170:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11163:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:10"
																},
																"nativeSrc": "11163:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11163:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11158:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11158:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10993:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11024:1:10",
														"nodeType": "YulTypedName",
														"src": "11024:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11027:1:10",
														"nodeType": "YulTypedName",
														"src": "11027:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11033:1:10",
														"nodeType": "YulTypedName",
														"src": "11033:1:10",
														"type": ""
													}
												],
												"src": "10993:185:10"
											},
											{
												"body": {
													"nativeSrc": "11290:75:10",
													"nodeType": "YulBlock",
													"src": "11290:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11312:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11312:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11320:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11320:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:10"
																		},
																		"nativeSrc": "11308:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11308:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11324:33:10",
																		"nodeType": "YulLiteral",
																		"src": "11324:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11301:6:10"
																},
																"nativeSrc": "11301:57:10",
																"nodeType": "YulFunctionCall",
																"src": "11301:57:10"
															},
															"nativeSrc": "11301:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "11301:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11184:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11282:6:10",
														"nodeType": "YulTypedName",
														"src": "11282:6:10",
														"type": ""
													}
												],
												"src": "11184:181:10"
											},
											{
												"body": {
													"nativeSrc": "11517:220:10",
													"nodeType": "YulBlock",
													"src": "11517:220:10",
													"statements": [
														{
															"nativeSrc": "11527:74:10",
															"nodeType": "YulAssignment",
															"src": "11527:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11593:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11593:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11598:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11534:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11534:58:10"
																},
																"nativeSrc": "11534:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11534:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11527:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11527:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11699:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11699:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11610:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11610:88:10"
																},
																"nativeSrc": "11610:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11610:93:10"
															},
															"nativeSrc": "11610:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11610:93:10"
														},
														{
															"nativeSrc": "11712:19:10",
															"nodeType": "YulAssignment",
															"src": "11712:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11723:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11723:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11728:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11728:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11719:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:10"
																},
																"nativeSrc": "11719:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11719:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11712:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11371:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11505:3:10",
														"nodeType": "YulTypedName",
														"src": "11505:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11513:3:10",
														"nodeType": "YulTypedName",
														"src": "11513:3:10",
														"type": ""
													}
												],
												"src": "11371:366:10"
											},
											{
												"body": {
													"nativeSrc": "11914:248:10",
													"nodeType": "YulBlock",
													"src": "11914:248:10",
													"statements": [
														{
															"nativeSrc": "11924:26:10",
															"nodeType": "YulAssignment",
															"src": "11924:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11936:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11936:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11947:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11947:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11932:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:10"
																},
																"nativeSrc": "11932:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11932:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11924:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11924:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11971:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11971:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11982:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11982:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:10"
																		},
																		"nativeSrc": "11967:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11990:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11990:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11996:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11986:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:10"
																		},
																		"nativeSrc": "11986:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11986:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11960:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:10"
																},
																"nativeSrc": "11960:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11960:47:10"
															},
															"nativeSrc": "11960:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11960:47:10"
														},
														{
															"nativeSrc": "12016:139:10",
															"nodeType": "YulAssignment",
															"src": "12016:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12150:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12150:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12024:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12024:124:10"
																},
																"nativeSrc": "12024:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12024:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12016:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12016:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11743:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11894:9:10",
														"nodeType": "YulTypedName",
														"src": "11894:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11909:4:10",
														"nodeType": "YulTypedName",
														"src": "11909:4:10",
														"type": ""
													}
												],
												"src": "11743:419:10"
											},
											{
												"body": {
													"nativeSrc": "12274:69:10",
													"nodeType": "YulBlock",
													"src": "12274:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12296:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12296:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12304:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12304:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12292:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:10"
																		},
																		"nativeSrc": "12292:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12292:14:10"
																	},
																	{
																		"hexValue": "4369726375697420627265616b657220697320616374697665",
																		"kind": "string",
																		"nativeSrc": "12308:27:10",
																		"nodeType": "YulLiteral",
																		"src": "12308:27:10",
																		"type": "",
																		"value": "Circuit breaker is active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12285:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:10"
																},
																"nativeSrc": "12285:51:10",
																"nodeType": "YulFunctionCall",
																"src": "12285:51:10"
															},
															"nativeSrc": "12285:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "12285:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
												"nativeSrc": "12168:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12266:6:10",
														"nodeType": "YulTypedName",
														"src": "12266:6:10",
														"type": ""
													}
												],
												"src": "12168:175:10"
											},
											{
												"body": {
													"nativeSrc": "12495:220:10",
													"nodeType": "YulBlock",
													"src": "12495:220:10",
													"statements": [
														{
															"nativeSrc": "12505:74:10",
															"nodeType": "YulAssignment",
															"src": "12505:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12571:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12571:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12576:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12576:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12512:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12512:58:10"
																},
																"nativeSrc": "12512:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12512:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12677:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12677:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																	"nativeSrc": "12588:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12588:88:10"
																},
																"nativeSrc": "12588:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12588:93:10"
															},
															"nativeSrc": "12588:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12588:93:10"
														},
														{
															"nativeSrc": "12690:19:10",
															"nodeType": "YulAssignment",
															"src": "12690:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12701:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12701:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12706:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12706:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12697:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:10"
																},
																"nativeSrc": "12697:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12697:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12690:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12690:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12349:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12483:3:10",
														"nodeType": "YulTypedName",
														"src": "12483:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12491:3:10",
														"nodeType": "YulTypedName",
														"src": "12491:3:10",
														"type": ""
													}
												],
												"src": "12349:366:10"
											},
											{
												"body": {
													"nativeSrc": "12892:248:10",
													"nodeType": "YulBlock",
													"src": "12892:248:10",
													"statements": [
														{
															"nativeSrc": "12902:26:10",
															"nodeType": "YulAssignment",
															"src": "12902:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12914:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12914:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12925:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12925:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12910:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12910:3:10"
																},
																"nativeSrc": "12910:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12910:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12902:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12902:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12949:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12960:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12960:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12945:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12945:3:10"
																		},
																		"nativeSrc": "12945:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12945:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12968:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12968:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12974:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12964:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:10"
																		},
																		"nativeSrc": "12964:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12938:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12938:6:10"
																},
																"nativeSrc": "12938:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12938:47:10"
															},
															"nativeSrc": "12938:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12938:47:10"
														},
														{
															"nativeSrc": "12994:139:10",
															"nodeType": "YulAssignment",
															"src": "12994:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13128:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13128:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13002:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13002:124:10"
																},
																"nativeSrc": "13002:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13002:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12994:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12994:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12721:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12872:9:10",
														"nodeType": "YulTypedName",
														"src": "12872:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12887:4:10",
														"nodeType": "YulTypedName",
														"src": "12887:4:10",
														"type": ""
													}
												],
												"src": "12721:419:10"
											},
											{
												"body": {
													"nativeSrc": "13252:62:10",
													"nodeType": "YulBlock",
													"src": "13252:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13274:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13274:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13282:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13282:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13270:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13270:3:10"
																		},
																		"nativeSrc": "13270:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13270:14:10"
																	},
																	{
																		"hexValue": "4275726e2076616c756520696e76616c6964",
																		"kind": "string",
																		"nativeSrc": "13286:20:10",
																		"nodeType": "YulLiteral",
																		"src": "13286:20:10",
																		"type": "",
																		"value": "Burn value invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13263:6:10"
																},
																"nativeSrc": "13263:44:10",
																"nodeType": "YulFunctionCall",
																"src": "13263:44:10"
															},
															"nativeSrc": "13263:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "13263:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
												"nativeSrc": "13146:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13244:6:10",
														"nodeType": "YulTypedName",
														"src": "13244:6:10",
														"type": ""
													}
												],
												"src": "13146:168:10"
											},
											{
												"body": {
													"nativeSrc": "13466:220:10",
													"nodeType": "YulBlock",
													"src": "13466:220:10",
													"statements": [
														{
															"nativeSrc": "13476:74:10",
															"nodeType": "YulAssignment",
															"src": "13476:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13547:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13547:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13483:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13483:58:10"
																},
																"nativeSrc": "13483:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13483:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13476:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13648:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13648:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																	"nativeSrc": "13559:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13559:88:10"
																},
																"nativeSrc": "13559:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13559:93:10"
															},
															"nativeSrc": "13559:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13559:93:10"
														},
														{
															"nativeSrc": "13661:19:10",
															"nodeType": "YulAssignment",
															"src": "13661:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13672:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13672:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13677:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:10"
																},
																"nativeSrc": "13668:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13668:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13661:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13661:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13320:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13454:3:10",
														"nodeType": "YulTypedName",
														"src": "13454:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13462:3:10",
														"nodeType": "YulTypedName",
														"src": "13462:3:10",
														"type": ""
													}
												],
												"src": "13320:366:10"
											},
											{
												"body": {
													"nativeSrc": "13863:248:10",
													"nodeType": "YulBlock",
													"src": "13863:248:10",
													"statements": [
														{
															"nativeSrc": "13873:26:10",
															"nodeType": "YulAssignment",
															"src": "13873:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13885:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13885:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13896:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13896:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13881:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13881:3:10"
																},
																"nativeSrc": "13881:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13881:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13873:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13873:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13920:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13931:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13931:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13916:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13916:3:10"
																		},
																		"nativeSrc": "13916:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13916:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13939:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13939:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13945:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13945:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13935:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:10"
																		},
																		"nativeSrc": "13935:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13935:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13909:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:10"
																},
																"nativeSrc": "13909:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13909:47:10"
															},
															"nativeSrc": "13909:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13909:47:10"
														},
														{
															"nativeSrc": "13965:139:10",
															"nodeType": "YulAssignment",
															"src": "13965:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14099:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14099:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13973:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13973:124:10"
																},
																"nativeSrc": "13973:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13973:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13965:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13965:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13692:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13843:9:10",
														"nodeType": "YulTypedName",
														"src": "13843:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13858:4:10",
														"nodeType": "YulTypedName",
														"src": "13858:4:10",
														"type": ""
													}
												],
												"src": "13692:419:10"
											},
											{
												"body": {
													"nativeSrc": "14271:288:10",
													"nodeType": "YulBlock",
													"src": "14271:288:10",
													"statements": [
														{
															"nativeSrc": "14281:26:10",
															"nodeType": "YulAssignment",
															"src": "14281:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14293:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14293:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14304:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14304:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14289:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14289:3:10"
																},
																"nativeSrc": "14289:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14289:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14281:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14281:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14361:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14361:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14374:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14374:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14385:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14385:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14370:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14370:3:10"
																		},
																		"nativeSrc": "14370:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14370:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14317:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14317:43:10"
																},
																"nativeSrc": "14317:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14317:71:10"
															},
															"nativeSrc": "14317:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14317:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14442:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14442:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14455:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14455:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14466:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14466:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14451:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14451:3:10"
																		},
																		"nativeSrc": "14451:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14451:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14398:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14398:43:10"
																},
																"nativeSrc": "14398:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14398:72:10"
															},
															"nativeSrc": "14398:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14398:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14524:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14524:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14548:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14548:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:10"
																		},
																		"nativeSrc": "14533:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14533:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14480:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14480:43:10"
																},
																"nativeSrc": "14480:72:10",
																"nodeType": "YulFunctionCall",
																"src": "14480:72:10"
															},
															"nativeSrc": "14480:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "14480:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14117:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14227:9:10",
														"nodeType": "YulTypedName",
														"src": "14227:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14239:6:10",
														"nodeType": "YulTypedName",
														"src": "14239:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14247:6:10",
														"nodeType": "YulTypedName",
														"src": "14247:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14255:6:10",
														"nodeType": "YulTypedName",
														"src": "14255:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14266:4:10",
														"nodeType": "YulTypedName",
														"src": "14266:4:10",
														"type": ""
													}
												],
												"src": "14117:442:10"
											},
											{
												"body": {
													"nativeSrc": "14671:64:10",
													"nodeType": "YulBlock",
													"src": "14671:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14701:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14701:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14689:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:10"
																		},
																		"nativeSrc": "14689:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14689:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "14705:22:10",
																		"nodeType": "YulLiteral",
																		"src": "14705:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14682:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14682:6:10"
																},
																"nativeSrc": "14682:46:10",
																"nodeType": "YulFunctionCall",
																"src": "14682:46:10"
															},
															"nativeSrc": "14682:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "14682:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "14565:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14663:6:10",
														"nodeType": "YulTypedName",
														"src": "14663:6:10",
														"type": ""
													}
												],
												"src": "14565:170:10"
											},
											{
												"body": {
													"nativeSrc": "14887:220:10",
													"nodeType": "YulBlock",
													"src": "14887:220:10",
													"statements": [
														{
															"nativeSrc": "14897:74:10",
															"nodeType": "YulAssignment",
															"src": "14897:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14963:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14963:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14968:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14968:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14904:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14904:58:10"
																},
																"nativeSrc": "14904:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14904:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14897:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15069:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15069:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "14980:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14980:88:10"
																},
																"nativeSrc": "14980:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14980:93:10"
															},
															"nativeSrc": "14980:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14980:93:10"
														},
														{
															"nativeSrc": "15082:19:10",
															"nodeType": "YulAssignment",
															"src": "15082:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15093:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15093:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15098:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15098:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15089:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15089:3:10"
																},
																"nativeSrc": "15089:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15089:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15082:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14741:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14875:3:10",
														"nodeType": "YulTypedName",
														"src": "14875:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14883:3:10",
														"nodeType": "YulTypedName",
														"src": "14883:3:10",
														"type": ""
													}
												],
												"src": "14741:366:10"
											},
											{
												"body": {
													"nativeSrc": "15284:248:10",
													"nodeType": "YulBlock",
													"src": "15284:248:10",
													"statements": [
														{
															"nativeSrc": "15294:26:10",
															"nodeType": "YulAssignment",
															"src": "15294:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15306:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15306:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15317:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15317:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15302:3:10"
																},
																"nativeSrc": "15302:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15302:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15294:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15341:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15352:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15352:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15337:3:10"
																		},
																		"nativeSrc": "15337:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15337:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15360:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15360:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15366:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15366:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15356:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15356:3:10"
																		},
																		"nativeSrc": "15356:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15356:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15330:6:10"
																},
																"nativeSrc": "15330:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15330:47:10"
															},
															"nativeSrc": "15330:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15330:47:10"
														},
														{
															"nativeSrc": "15386:139:10",
															"nodeType": "YulAssignment",
															"src": "15386:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15520:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15520:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15394:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15394:124:10"
																},
																"nativeSrc": "15394:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15394:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15386:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15386:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15113:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15264:9:10",
														"nodeType": "YulTypedName",
														"src": "15264:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15279:4:10",
														"nodeType": "YulTypedName",
														"src": "15279:4:10",
														"type": ""
													}
												],
												"src": "15113:419:10"
											},
											{
												"body": {
													"nativeSrc": "15644:60:10",
													"nodeType": "YulBlock",
													"src": "15644:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15666:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15666:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15674:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15674:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15662:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15662:3:10"
																		},
																		"nativeSrc": "15662:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15662:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15678:18:10",
																		"nodeType": "YulLiteral",
																		"src": "15678:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15655:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15655:6:10"
																},
																"nativeSrc": "15655:42:10",
																"nodeType": "YulFunctionCall",
																"src": "15655:42:10"
															},
															"nativeSrc": "15655:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "15655:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "15538:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15636:6:10",
														"nodeType": "YulTypedName",
														"src": "15636:6:10",
														"type": ""
													}
												],
												"src": "15538:166:10"
											},
											{
												"body": {
													"nativeSrc": "15856:220:10",
													"nodeType": "YulBlock",
													"src": "15856:220:10",
													"statements": [
														{
															"nativeSrc": "15866:74:10",
															"nodeType": "YulAssignment",
															"src": "15866:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15932:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15932:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15937:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15937:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15873:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15873:58:10"
																},
																"nativeSrc": "15873:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15873:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15866:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15866:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16038:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16038:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "15949:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15949:88:10"
																},
																"nativeSrc": "15949:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15949:93:10"
															},
															"nativeSrc": "15949:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15949:93:10"
														},
														{
															"nativeSrc": "16051:19:10",
															"nodeType": "YulAssignment",
															"src": "16051:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16062:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16062:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16067:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16067:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16058:3:10"
																},
																"nativeSrc": "16058:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16058:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16051:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16051:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15710:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15844:3:10",
														"nodeType": "YulTypedName",
														"src": "15844:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15852:3:10",
														"nodeType": "YulTypedName",
														"src": "15852:3:10",
														"type": ""
													}
												],
												"src": "15710:366:10"
											},
											{
												"body": {
													"nativeSrc": "16253:248:10",
													"nodeType": "YulBlock",
													"src": "16253:248:10",
													"statements": [
														{
															"nativeSrc": "16263:26:10",
															"nodeType": "YulAssignment",
															"src": "16263:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16275:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16275:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16286:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16286:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16271:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16271:3:10"
																},
																"nativeSrc": "16271:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16271:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16263:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16263:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16310:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16310:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16321:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16321:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16306:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16306:3:10"
																		},
																		"nativeSrc": "16306:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16306:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16329:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16329:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16335:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16325:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:10"
																		},
																		"nativeSrc": "16325:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16325:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16299:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16299:6:10"
																},
																"nativeSrc": "16299:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16299:47:10"
															},
															"nativeSrc": "16299:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16299:47:10"
														},
														{
															"nativeSrc": "16355:139:10",
															"nodeType": "YulAssignment",
															"src": "16355:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16489:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16489:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16363:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16363:124:10"
																},
																"nativeSrc": "16363:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16363:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16355:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16355:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16082:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16233:9:10",
														"nodeType": "YulTypedName",
														"src": "16233:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16248:4:10",
														"nodeType": "YulTypedName",
														"src": "16248:4:10",
														"type": ""
													}
												],
												"src": "16082:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity must be provided for a\")\n\n        mstore(add(memPtr, 32), \"t least 30 days to qualify for r\")\n\n        mstore(add(memPtr, 64), \"ewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 70)\n        store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Circuit breaker is active\")\n\n    }\n\n    function abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn value invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061018c575f3560e01c806370a08231116100dc578063a64254c311610095578063c80521071161006f578063c8052107146103fe578063d82e39621461041a578063dd62ed3e1461044a578063f2fde38b1461047a5761018c565b8063a64254c3146103a8578063a9059cbb146103b2578063afe8289a146103e25761018c565b806370a082311461030c578063715018a61461033c57806379cc6790146103465780638456cb59146103625780638da5cb5b1461036c57806395d89b411461038a5761018c565b80632ff2e9dc116101495780633f4ba83a116101235780633f4ba83a146102ac57806342966c68146102b657806351c6590a146102d25780635c975abb146102ee5761018c565b80632ff2e9dc14610252578063313ce5671461027057806332cb6b0c1461028e5761018c565b806306fdde0314610190578063095ea7b3146101ae57806318160ddd146101de57806321208fa2146101fc5780632254b79c1461020657806323b872dd14610222575b5f80fd5b610198610496565b6040516101a591906119d9565b60405180910390f35b6101c860048036038101906101c39190611a8a565b610526565b6040516101d59190611ae2565b60405180910390f35b6101e6610548565b6040516101f39190611b0a565b60405180910390f35b610204610551565b005b610220600480360381019061021b9190611b23565b610574565b005b61023c60048036038101906102379190611b4e565b610717565b6040516102499190611ae2565b60405180910390f35b61025a610745565b6040516102679190611b0a565b60405180910390f35b610278610754565b6040516102859190611bb9565b60405180910390f35b61029661075c565b6040516102a39190611b0a565b60405180910390f35b6102b461076c565b005b6102d060048036038101906102cb9190611b23565b61077e565b005b6102ec60048036038101906102e79190611b23565b610792565b005b6102f6610835565b6040516103039190611ae2565b60405180910390f35b61032660048036038101906103219190611bd2565b61084a565b6040516103339190611b0a565b60405180910390f35b61034461088f565b005b610360600480360381019061035b9190611a8a565b6108a2565b005b61036a6108c2565b005b6103746108d4565b6040516103819190611c0c565b60405180910390f35b6103926108fd565b60405161039f91906119d9565b60405180910390f35b6103b061098d565b005b6103cc60048036038101906103c79190611a8a565b6109b1565b6040516103d99190611ae2565b60405180910390f35b6103fc60048036038101906103f79190611b23565b6109d3565b005b61041860048036038101906104139190611b23565b610a8b565b005b610434600480360381019061042f9190611bd2565b610d50565b6040516104419190611b0a565b60405180910390f35b610464600480360381019061045f9190611c25565b610e0e565b6040516104719190611b0a565b60405180910390f35b610494600480360381019061048f9190611bd2565b610e90565b005b6060600380546104a590611c90565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190611c90565b801561051c5780601f106104f35761010080835404028352916020019161051c565b820191905f5260205f20905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b5f80610530610f14565b905061053d818585610f1b565b600191505092915050565b5f600254905090565b610559610f2d565b5f60095f6101000a81548160ff021916908315150217905550565b61057c610f2d565b610584610fb4565b60075f61058f6108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111561060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060290611d0a565b60405180910390fd5b8060075f6106176108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461065e9190611d55565b925050819055505f60075f6106716108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036106fa575f60085f6106bc6108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61070c306107066108d4565b83611003565b6107146110dc565b50565b5f80610721610f14565b905061072e8582856110e6565b610739858585611003565b60019150509392505050565b6a52b7d2dcc80cd2e400000081565b5f6012905090565b6b1027e72f1f1281308800000081565b610774610f2d565b61077c611178565b565b61078f610789610f14565b826111d9565b50565b61079d333083611003565b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e99190611d88565b925050819055504260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610897610f2d565b6108a05f611258565b565b6108b4826108ae610f14565b836110e6565b6108be82826111d9565b5050565b6108ca610f2d565b6108d261131d565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461090c90611c90565b80601f016020809104026020016040519081016040528092919081815260200182805461093890611c90565b80156109835780601f1061095a57610100808354040283529160200191610983565b820191905f5260205f20905b81548152906001019060200180831161096657829003601f168201915b5050505050905090565b610995610f2d565b600160095f6101000a81548160ff021916908315150217905550565b5f806109bb610f14565b90506109c8818585611003565b600191505092915050565b6109db610f2d565b8060075f6109e76108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a2e9190611d88565b925050819055504260085f610a416108d4565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610a88308261137f565b50565b610a93610fb4565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611d0a565b60405180910390fd5b62278d0060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5f9190611d88565b421015610ba1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9890611e51565b60405180910390fd5b5f610bab33610d50565b90506b1027e72f1f1281308800000081610bc3610548565b610bcd9190611d88565b1115610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611eb9565b60405180910390fd5b610c18338261137f565b610c23303384611003565b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c6f9190611d55565b925050819055505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610d01575f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610d44565b4260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50610d4d6110dc565b50565b5f62278d0060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d9d9190611d88565b4210610e05575f6064600560075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df09190611ed7565b610dfa9190611f45565b905080915050610e09565b5f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e98610f2d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f08575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610eff9190611c0c565b60405180910390fd5b610f1181611258565b50565b5f33905090565b610f2883838360016113fe565b505050565b610f35610f14565b73ffffffffffffffffffffffffffffffffffffffff16610f536108d4565b73ffffffffffffffffffffffffffffffffffffffff1614610fb257610f76610f14565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fa99190611c0c565b60405180910390fd5b565b600260065403610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090611fbf565b60405180910390fd5b6002600681905550565b60095f9054906101000a900460ff1615611052576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104990612027565b60405180910390fd5b5f620186a0826110629190611f45565b90505f81836110719190611d55565b9050818161107f9190611d88565b83146110c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b79061208f565b60405180910390fd5b6110cb8585836115cd565b6110d585836111d9565b5050505050565b6001600681905550565b5f6110f18484610e0e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111725781811015611163578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161115a939291906120ad565b60405180910390fd5b61117184848484035f6113fe565b5b50505050565b6111806116bd565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111c2610f14565b6040516111cf9190611c0c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611249575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112409190611c0c565b60405180910390fd5b611254825f83611706565b5050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61132561191f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611368610f14565b6040516113759190611c0c565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113ef575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113e69190611c0c565b60405180910390fd5b6113fa5f8383611706565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361146e575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114659190611c0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114de575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d59190611c0c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115c7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115be9190611b0a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361163d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116349190611c0c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116ad575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116a49190611c0c565b60405180910390fd5b6116b8838383611706565b505050565b6116c5610835565b611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116fb9061212c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611756578060025f82825461174a9190611d88565b92505081905550611824565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156117df578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117d6939291906120ad565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186b578060025f82825403925050819055506118b5565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119129190611b0a565b60405180910390a3505050565b611927610835565b15611967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195e90612194565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119ab82611969565b6119b58185611973565b93506119c5818560208601611983565b6119ce81611991565b840191505092915050565b5f6020820190508181035f8301526119f181846119a1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a26826119fd565b9050919050565b611a3681611a1c565b8114611a40575f80fd5b50565b5f81359050611a5181611a2d565b92915050565b5f819050919050565b611a6981611a57565b8114611a73575f80fd5b50565b5f81359050611a8481611a60565b92915050565b5f8060408385031215611aa057611a9f6119f9565b5b5f611aad85828601611a43565b9250506020611abe85828601611a76565b9150509250929050565b5f8115159050919050565b611adc81611ac8565b82525050565b5f602082019050611af55f830184611ad3565b92915050565b611b0481611a57565b82525050565b5f602082019050611b1d5f830184611afb565b92915050565b5f60208284031215611b3857611b376119f9565b5b5f611b4584828501611a76565b91505092915050565b5f805f60608486031215611b6557611b646119f9565b5b5f611b7286828701611a43565b9350506020611b8386828701611a43565b9250506040611b9486828701611a76565b9150509250925092565b5f60ff82169050919050565b611bb381611b9e565b82525050565b5f602082019050611bcc5f830184611baa565b92915050565b5f60208284031215611be757611be66119f9565b5b5f611bf484828501611a43565b91505092915050565b611c0681611a1c565b82525050565b5f602082019050611c1f5f830184611bfd565b92915050565b5f8060408385031215611c3b57611c3a6119f9565b5b5f611c4885828601611a43565b9250506020611c5985828601611a43565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ca757607f821691505b602082108103611cba57611cb9611c63565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611cf4601483611973565b9150611cff82611cc0565b602082019050919050565b5f6020820190508181035f830152611d2181611ce8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d5f82611a57565b9150611d6a83611a57565b9250828203905081811115611d8257611d81611d28565b5b92915050565b5f611d9282611a57565b9150611d9d83611a57565b9250828201905080821115611db557611db4611d28565b5b92915050565b7f4c6971756964697479206d7573742062652070726f766964656420666f7220615f8201527f74206c65617374203330206461797320746f207175616c69667920666f72207260208201527f6577617264730000000000000000000000000000000000000000000000000000604082015250565b5f611e3b604683611973565b9150611e4682611dbb565b606082019050919050565b5f6020820190508181035f830152611e6881611e2f565b9050919050565b7f5265776172642065786365656473206d617820737570706c79000000000000005f82015250565b5f611ea3601983611973565b9150611eae82611e6f565b602082019050919050565b5f6020820190508181035f830152611ed081611e97565b9050919050565b5f611ee182611a57565b9150611eec83611a57565b9250828202611efa81611a57565b91508282048414831517611f1157611f10611d28565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f4f82611a57565b9150611f5a83611a57565b925082611f6a57611f69611f18565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611fa9601f83611973565b9150611fb482611f75565b602082019050919050565b5f6020820190508181035f830152611fd681611f9d565b9050919050565b7f4369726375697420627265616b657220697320616374697665000000000000005f82015250565b5f612011601983611973565b915061201c82611fdd565b602082019050919050565b5f6020820190508181035f83015261203e81612005565b9050919050565b7f4275726e2076616c756520696e76616c696400000000000000000000000000005f82015250565b5f612079601283611973565b915061208482612045565b602082019050919050565b5f6020820190508181035f8301526120a68161206d565b9050919050565b5f6060820190506120c05f830186611bfd565b6120cd6020830185611afb565b6120da6040830184611afb565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f612116601483611973565b9150612121826120e2565b602082019050919050565b5f6020820190508181035f8301526121438161210a565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f61217e601083611973565b91506121898261214a565b602082019050919050565b5f6020820190508181035f8301526121ab81612172565b905091905056fea2646970667358221220131d74e7aa5aab4ee72eb4ba501067501a7b4d8771f2af430097f28feff0924664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA64254C3 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC8052107 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x47A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA64254C3 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x3E2 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38A JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EE JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x28E JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x21208FA2 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1B4E JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x76C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x374 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH2 0xE90 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x530 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP2 DUP6 DUP6 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0xF2D JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x57C PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x584 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH2 0x58F PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x617 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x671 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x6FA JUMPI PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x6BC PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x70C ADDRESS PUSH2 0x706 PUSH2 0x8D4 JUMP JUMPDEST DUP4 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x10DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x721 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x72E DUP6 DUP3 DUP6 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x739 DUP6 DUP6 DUP6 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH12 0x1027E72F1F12813088000000 DUP2 JUMP JUMPDEST PUSH2 0x774 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1178 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x78F PUSH2 0x789 PUSH2 0xF14 JUMP JUMPDEST DUP3 PUSH2 0x11D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x79D CALLER ADDRESS DUP4 PUSH2 0x1003 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x897 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x8A0 PUSH0 PUSH2 0x1258 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8B4 DUP3 PUSH2 0x8AE PUSH2 0xF14 JUMP JUMPDEST DUP4 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x8BE DUP3 DUP3 PUSH2 0x11D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8CA PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x8D2 PUSH2 0x131D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x90C SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x938 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x983 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x983 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x966 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x995 PUSH2 0xF2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9BB PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C8 DUP2 DUP6 DUP6 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DB PUSH2 0xF2D JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x9E7 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 PUSH2 0xA41 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA88 ADDRESS DUP3 PUSH2 0x137F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA93 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBAB CALLER PUSH2 0xD50 JUMP JUMPDEST SWAP1 POP PUSH12 0x1027E72F1F12813088000000 DUP2 PUSH2 0xBC3 PUSH2 0x548 JUMP JUMPDEST PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST GT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC05 SWAP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC18 CALLER DUP3 PUSH2 0x137F JUMP JUMPDEST PUSH2 0xC23 ADDRESS CALLER DUP5 PUSH2 0x1003 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xD01 JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD44 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xD4D PUSH2 0x10DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xE05 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0xDFA SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0xE09 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 PUSH2 0xF2D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0x1258 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF28 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF35 PUSH2 0xF14 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF53 PUSH2 0x8D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB2 JUMPI PUSH2 0xF76 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF0 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x107F SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST DUP4 EQ PUSH2 0x10C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B7 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CB DUP6 DUP6 DUP4 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x10D5 DUP6 DUP4 PUSH2 0x11D9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10F1 DUP5 DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1172 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1163 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1180 PUSH2 0x16BD JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11C2 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1249 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1254 DUP3 PUSH0 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1368 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1375 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13FA PUSH0 DUP4 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x146E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15C7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15BE SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x163D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B8 DUP4 DUP4 DUP4 PUSH2 0x1706 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x16C5 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x1704 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FB SWAP1 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1756 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1824 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18B5 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1927 PUSH2 0x835 JUMP JUMPDEST ISZERO PUSH2 0x1967 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195E SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AB DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x19B5 DUP2 DUP6 PUSH2 0x1973 JUMP JUMPDEST SWAP4 POP PUSH2 0x19C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x1991 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F1 DUP2 DUP5 PUSH2 0x19A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A26 DUP3 PUSH2 0x19FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A1C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A51 DUP2 PUSH2 0x1A2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A69 DUP2 PUSH2 0x1A57 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A84 DUP2 PUSH2 0x1A60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAD DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABE DUP6 DUP3 DUP7 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADC DUP2 PUSH2 0x1AC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B04 DUP2 PUSH2 0x1A57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B1D PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B38 JUMPI PUSH2 0x1B37 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B45 DUP5 DUP3 DUP6 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B72 DUP7 DUP3 DUP8 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B83 DUP7 DUP3 DUP8 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B94 DUP7 DUP3 DUP8 ADD PUSH2 0x1A76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB3 DUP2 PUSH2 0x1B9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCC PUSH0 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C06 DUP2 PUSH2 0x1A1C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1F PUSH0 DUP4 ADD DUP5 PUSH2 0x1BFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C48 DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C59 DUP6 DUP3 DUP7 ADD PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CA7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1C63 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF4 PUSH1 0x14 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFF DUP3 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D21 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D5F DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D82 JUMPI PUSH2 0x1D81 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D92 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9D DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB4 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3B PUSH1 0x46 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E68 DUP2 PUSH2 0x1E2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA3 PUSH1 0x19 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAE DUP3 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE1 DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEC DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1EFA DUP2 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1D28 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F4F DUP3 PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5A DUP4 PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA9 PUSH1 0x1F DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB4 DUP3 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FD6 DUP2 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2011 PUSH1 0x19 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x201C DUP3 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203E DUP2 PUSH2 0x2005 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2079 PUSH1 0x12 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20A6 DUP2 PUSH2 0x206D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20C0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x20DA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2116 PUSH1 0x14 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2121 DUP3 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 PUSH2 0x210A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x217E PUSH1 0x10 DUP4 PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21AB DUP2 PUSH2 0x2172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SAR PUSH21 0xE7AA5AAB4EE72EB4BA501067501A7B4D8771F2AF43 STOP SWAP8 CALLCODE DUP16 0xEF CREATE SWAP3 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "344:4537:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2092:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1408:99:0;;;:::i;:::-;;4450:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:244:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:65:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1950:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:63:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;963:65;;;:::i;:::-;;618:87:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2445:227:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2247:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1021:158:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;894:61:0;;;:::i;:::-;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255:97:0;;;:::i;:::-;;2558:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4093:264:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2678:1022;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2794:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1022:89:5;1067:13;1099:5;1092:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:89;:::o;3241:186::-;3314:4;3330:13;3346:12;:10;:12::i;:::-;3330:28;;3368:31;3377:5;3384:7;3393:5;3368:8;:31::i;:::-;3416:4;3409:11;;;3241:186;;;;:::o;2092:97::-;2144:7;2170:12;;2163:19;;2092:97;:::o;1408:99:0:-;1531:13:1;:11;:13::i;:::-;1494:5:0::1;1469:22;;:30;;;;;;;;;;;;;;;;;;1408:99::o:0;4450:424::-;1531:13:1;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;4555:18:0::2;:27;4574:7;:5;:7::i;:::-;4555:27;;;;;;;;;;;;;;;;4545:6;:37;;4537:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4649:6;4618:18;:27;4637:7;:5;:7::i;:::-;4618:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4701:1;4670:18;:27;4689:7;:5;:7::i;:::-;4670:27;;;;;;;;;;;;;;;;:32:::0;4666:105:::2;;4758:1;4719:27;:36;4747:7;:5;:7::i;:::-;4719:36;;;;;;;;;;;;;;;:40;;;;4666:105;4781:41;4799:4;4806:7;:5;:7::i;:::-;4815:6;4781:9;:41::i;:::-;2303:20:4::1;:18;:20::i;:::-;4450:424:0::0;:::o;3987:244:5:-;4074:4;4090:15;4108:12;:10;:12::i;:::-;4090:30;;4130:37;4146:4;4152:7;4161:5;4130:15;:37::i;:::-;4177:26;4187:4;4193:2;4197:5;4177:9;:26::i;:::-;4220:4;4213:11;;;3987:244;;;;;:::o;435:65:0:-;476:24;435:65;:::o;1950:82:5:-;1999:5;2023:2;2016:9;;1950:82;:::o;507:63:0:-;544:26;507:63;:::o;963:65::-;1531:13:1;:11;:13::i;:::-;1010:10:0::1;:8;:10::i;:::-;963:65::o:0;618:87:7:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2445:227:0:-;2501:44;2511:10;2531:4;2538:6;2501:9;:44::i;:::-;2590:6;2556:18;:30;2575:10;2556:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;2649:15;2607:27;:39;2635:10;2607:39;;;;;;;;;;;;;;;:57;;;;2445:227;:::o;1615:84:3:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2247:116:5:-;2312:7;2338:9;:18;2348:7;2338:18;;;;;;;;;;;;;;;;2331:25;;2247:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:7:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;894:61:0:-;1531:13:1;:11;:13::i;:::-;939:8:0::1;:6;:8::i;:::-;894:61::o:0;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1224:93:5:-;1271:13;1303:7;1296:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:93;:::o;1255:97:0:-;1531:13:1;:11;:13::i;:::-;1340:4:0::1;1315:22;;:29;;;;;;;;;;;;;;;;;;1255:97::o:0;2558:178:5:-;2627:4;2643:13;2659:12;:10;:12::i;:::-;2643:28;;2681:27;2691:5;2698:2;2702:5;2681:9;:27::i;:::-;2725:4;2718:11;;;2558:178;;;;:::o;4093:264:0:-;1531:13:1;:11;:13::i;:::-;4195:6:0::1;4164:18;:27;4183:7;:5;:7::i;:::-;4164:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4251:15;4212:27;:36;4240:7;:5;:7::i;:::-;4212:36;;;;;;;;;;;;;;;:54;;;;4277:28;4291:4;4298:6;4277:5;:28::i;:::-;4093:264:::0;:::o;2678:1022::-;2261:21:4;:19;:21::i;:::-;2783:18:0::1;:30;2802:10;2783:30;;;;;;;;;;;;;;;;2773:6;:40;;2765:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2918:7;2876:27;:39;2904:10;2876:39;;;;;;;;;;;;;;;;:49;;;;:::i;:::-;2857:15;:68;;2849:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;3013:14;3030:27;3046:10;3030:15;:27::i;:::-;3013:44;;544:26;3092:6;3076:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;3068:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;3155:25;3161:10;3173:6;3155:5;:25::i;:::-;3236:44;3254:4;3261:10;3273:6;3236:9;:44::i;:::-;3372:6;3338:18;:30;3357:10;3338:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;3427:1;3393:18;:30;3412:10;3393:30;;;;;;;;;;;;;;;;:35:::0;3389:304:::1;;3487:1;3445:27;:39;3473:10;3445:39;;;;;;;;;;;;;;;:43;;;;3389:304;;;3614:15;3572:27;:39;3600:10;3572:39;;;;;;;;;;;;;;;:57;;;;3389:304;2754:946;2303:20:4::0;:18;:20::i;:::-;2678:1022:0;:::o;3708:295::-;3768:7;3847;3811:27;:33;3839:4;3811:33;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;3792:15;:62;3788:189;;3871:14;3921:3;3916:1;3889:18;:24;3908:4;3889:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;3888:36;;;;:::i;:::-;3871:53;;3959:6;3952:13;;;;;3788:189;3994:1;3987:8;;3708:295;;;;:::o;2794:140:5:-;2874:7;2900:11;:18;2912:5;2900:18;;;;;;;;;;;;;;;:27;2919:7;2900:27;;;;;;;;;;;;;;;;2893:34;;2794:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8090:128:5:-;8174:37;8183:5;8190:7;8199:5;8206:4;8174:8;:37::i;:::-;8090:128;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1600:447:0:-;1130:22;;;;;;;;;;;1129:23;1121:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:18:::1;1753:6;1744;:15;;;;:::i;:::-;1723:36;;1799:18;1829:10;1820:6;:19;;;;:::i;:::-;1799:40;;1911:10;1898;:23;;;;:::i;:::-;1888:6;:33;1880:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1957:46;1973:6;1981:9;1992:10;1957:15;:46::i;:::-;2014:25;2020:6;2028:10;2014:5;:25::i;:::-;1712:335;;1600:447:::0;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;9764:477:5:-;9863:24;9890:25;9900:5;9907:7;9890:9;:25::i;:::-;9863:52;;9949:17;9929:16;:37;9925:310;;10005:5;9986:16;:24;9982:130;;;10064:7;10073:16;10091:5;10037:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;9982:130;10153:57;10162:5;10169:7;10197:5;10178:16;:24;10204:5;10153:8;:57::i;:::-;9925:310;9853:388;9764:477;;;:::o;2433:117:3:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;7212:206:5:-;7301:1;7282:21;;:7;:21;;;7278:89;;7353:1;7326:30;;;;;;;;;;;:::i;:::-;;;;;;;;7278:89;7376:35;7384:7;7401:1;7405:5;7376:7;:35::i;:::-;7212:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;6677:217:5:-;6775:1;6756:21;;:7;:21;;;6752:91;;6829:1;6800:32;;;;;;;;;;;:::i;:::-;;;;;;;;6752:91;6852:35;6868:1;6872:7;6881:5;6852:7;:35::i;:::-;6677:217;;:::o;9050:432::-;9179:1;9162:19;;:5;:19;;;9158:89;;9233:1;9204:32;;;;;;;;;;;:::i;:::-;;;;;;;;9158:89;9279:1;9260:21;;:7;:21;;;9256:90;;9332:1;9304:31;;;;;;;;;;;:::i;:::-;;;;;;;;9256:90;9385:5;9355:11;:18;9367:5;9355:18;;;;;;;;;;;;;;;:27;9374:7;9355:27;;;;;;;;;;;;;;;:35;;;;9404:9;9400:76;;;9450:7;9434:31;;9443:5;9434:31;;;9459:5;9434:31;;;;;;:::i;:::-;;;;;;;;9400:76;9050:432;;;;:::o;4604:308::-;4711:1;4695:18;;:4;:18;;;4691:86;;4763:1;4736:30;;;;;;;;;;;:::i;:::-;;;;;;;;4691:86;4804:1;4790:16;;:2;:16;;;4786:86;;4858:1;4829:32;;;;;;;;;;;:::i;:::-;;;;;;;;4786:86;4881:24;4889:4;4895:2;4899:5;4881:7;:24::i;:::-;4604:308;;;:::o;1945:106:3:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;5227:1107:5:-;5332:1;5316:18;;:4;:18;;;5312:540;;5468:5;5452:12;;:21;;;;;;;:::i;:::-;;;;;;;;5312:540;;;5504:19;5526:9;:15;5536:4;5526:15;;;;;;;;;;;;;;;;5504:37;;5573:5;5559:11;:19;5555:115;;;5630:4;5636:11;5649:5;5605:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5555:115;5822:5;5808:11;:19;5790:9;:15;5800:4;5790:15;;;;;;;;;;;;;;;:37;;;;5490:362;5312:540;5880:1;5866:16;;:2;:16;;;5862:425;;6045:5;6029:12;;:21;;;;;;;;;;;5862:425;;;6257:5;6240:9;:13;6250:2;6240:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;5862:425;6317:2;6302:25;;6311:4;6302:25;;;6321:5;6302:25;;;;;;:::i;:::-;;;;;;;;5227:1107;;;:::o;1767:106:3:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:170::-;6900:22;6896:1;6888:6;6884:14;6877:46;6760:170;:::o;6936:366::-;7078:3;7099:67;7163:2;7158:3;7099:67;:::i;:::-;7092:74;;7175:93;7264:3;7175:93;:::i;:::-;7293:2;7288:3;7284:12;7277:19;;6936:366;;;:::o;7308:419::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7561:9;7555:4;7551:20;7547:1;7536:9;7532:17;7525:47;7589:131;7715:4;7589:131;:::i;:::-;7581:139;;7308:419;;;:::o;7733:180::-;7781:77;7778:1;7771:88;7878:4;7875:1;7868:15;7902:4;7899:1;7892:15;7919:194;7959:4;7979:20;7997:1;7979:20;:::i;:::-;7974:25;;8013:20;8031:1;8013:20;:::i;:::-;8008:25;;8057:1;8054;8050:9;8042:17;;8081:1;8075:4;8072:11;8069:37;;;8086:18;;:::i;:::-;8069:37;7919:194;;;;:::o;8119:191::-;8159:3;8178:20;8196:1;8178:20;:::i;:::-;8173:25;;8212:20;8230:1;8212:20;:::i;:::-;8207:25;;8255:1;8252;8248:9;8241:16;;8276:3;8273:1;8270:10;8267:36;;;8283:18;;:::i;:::-;8267:36;8119:191;;;;:::o;8316:294::-;8456:34;8452:1;8444:6;8440:14;8433:58;8525:34;8520:2;8512:6;8508:15;8501:59;8594:8;8589:2;8581:6;8577:15;8570:33;8316:294;:::o;8616:366::-;8758:3;8779:67;8843:2;8838:3;8779:67;:::i;:::-;8772:74;;8855:93;8944:3;8855:93;:::i;:::-;8973:2;8968:3;8964:12;8957:19;;8616:366;;;:::o;8988:419::-;9154:4;9192:2;9181:9;9177:18;9169:26;;9241:9;9235:4;9231:20;9227:1;9216:9;9212:17;9205:47;9269:131;9395:4;9269:131;:::i;:::-;9261:139;;8988:419;;;:::o;9413:175::-;9553:27;9549:1;9541:6;9537:14;9530:51;9413:175;:::o;9594:366::-;9736:3;9757:67;9821:2;9816:3;9757:67;:::i;:::-;9750:74;;9833:93;9922:3;9833:93;:::i;:::-;9951:2;9946:3;9942:12;9935:19;;9594:366;;;:::o;9966:419::-;10132:4;10170:2;10159:9;10155:18;10147:26;;10219:9;10213:4;10209:20;10205:1;10194:9;10190:17;10183:47;10247:131;10373:4;10247:131;:::i;:::-;10239:139;;9966:419;;;:::o;10391:410::-;10431:7;10454:20;10472:1;10454:20;:::i;:::-;10449:25;;10488:20;10506:1;10488:20;:::i;:::-;10483:25;;10543:1;10540;10536:9;10565:30;10583:11;10565:30;:::i;:::-;10554:41;;10744:1;10735:7;10731:15;10728:1;10725:22;10705:1;10698:9;10678:83;10655:139;;10774:18;;:::i;:::-;10655:139;10439:362;10391:410;;;;:::o;10807:180::-;10855:77;10852:1;10845:88;10952:4;10949:1;10942:15;10976:4;10973:1;10966:15;10993:185;11033:1;11050:20;11068:1;11050:20;:::i;:::-;11045:25;;11084:20;11102:1;11084:20;:::i;:::-;11079:25;;11123:1;11113:35;;11128:18;;:::i;:::-;11113:35;11170:1;11167;11163:9;11158:14;;10993:185;;;;:::o;11184:181::-;11324:33;11320:1;11312:6;11308:14;11301:57;11184:181;:::o;11371:366::-;11513:3;11534:67;11598:2;11593:3;11534:67;:::i;:::-;11527:74;;11610:93;11699:3;11610:93;:::i;:::-;11728:2;11723:3;11719:12;11712:19;;11371:366;;;:::o;11743:419::-;11909:4;11947:2;11936:9;11932:18;11924:26;;11996:9;11990:4;11986:20;11982:1;11971:9;11967:17;11960:47;12024:131;12150:4;12024:131;:::i;:::-;12016:139;;11743:419;;;:::o;12168:175::-;12308:27;12304:1;12296:6;12292:14;12285:51;12168:175;:::o;12349:366::-;12491:3;12512:67;12576:2;12571:3;12512:67;:::i;:::-;12505:74;;12588:93;12677:3;12588:93;:::i;:::-;12706:2;12701:3;12697:12;12690:19;;12349:366;;;:::o;12721:419::-;12887:4;12925:2;12914:9;12910:18;12902:26;;12974:9;12968:4;12964:20;12960:1;12949:9;12945:17;12938:47;13002:131;13128:4;13002:131;:::i;:::-;12994:139;;12721:419;;;:::o;13146:168::-;13286:20;13282:1;13274:6;13270:14;13263:44;13146:168;:::o;13320:366::-;13462:3;13483:67;13547:2;13542:3;13483:67;:::i;:::-;13476:74;;13559:93;13648:3;13559:93;:::i;:::-;13677:2;13672:3;13668:12;13661:19;;13320:366;;;:::o;13692:419::-;13858:4;13896:2;13885:9;13881:18;13873:26;;13945:9;13939:4;13935:20;13931:1;13920:9;13916:17;13909:47;13973:131;14099:4;13973:131;:::i;:::-;13965:139;;13692:419;;;:::o;14117:442::-;14266:4;14304:2;14293:9;14289:18;14281:26;;14317:71;14385:1;14374:9;14370:17;14361:6;14317:71;:::i;:::-;14398:72;14466:2;14455:9;14451:18;14442:6;14398:72;:::i;:::-;14480;14548:2;14537:9;14533:18;14524:6;14480:72;:::i;:::-;14117:442;;;;;;:::o;14565:170::-;14705:22;14701:1;14693:6;14689:14;14682:46;14565:170;:::o;14741:366::-;14883:3;14904:67;14968:2;14963:3;14904:67;:::i;:::-;14897:74;;14980:93;15069:3;14980:93;:::i;:::-;15098:2;15093:3;15089:12;15082:19;;14741:366;;;:::o;15113:419::-;15279:4;15317:2;15306:9;15302:18;15294:26;;15366:9;15360:4;15356:20;15352:1;15341:9;15337:17;15330:47;15394:131;15520:4;15394:131;:::i;:::-;15386:139;;15113:419;;;:::o;15538:166::-;15678:18;15674:1;15666:6;15662:14;15655:42;15538:166;:::o;15710:366::-;15852:3;15873:67;15937:2;15932:3;15873:67;:::i;:::-;15866:74;;15949:93;16038:3;15949:93;:::i;:::-;16067:2;16062:3;16058:12;16051:19;;15710:366;;;:::o;16082:419::-;16248:4;16286:2;16275:9;16271:18;16263:26;;16335:9;16329:4;16325:20;16321:1;16310:9;16306:17;16299:47;16363:131;16489:4;16363:131;:::i;:::-;16355:139;;16082:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1736000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "371",
								"MAX_SUPPLY()": "415",
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"calculateReward(address)": "infinite",
								"decimals()": "406",
								"disableCircuitBreaker()": "infinite",
								"enableCircuitBreaker()": "infinite",
								"name()": "infinite",
								"owner()": "2677",
								"ownerAddLiquidity(uint256)": "infinite",
								"ownerRemoveLiquidity(uint256)": "infinite",
								"pause()": "infinite",
								"paused()": "2584",
								"removeLiquidityAndClaimRewards(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 715,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 715,
									"end": 758,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 715,
									"end": 758,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 715,
									"end": 758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 767,
									"end": 886,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 767,
									"end": 886,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 767,
									"end": 886,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 767,
									"end": 886,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 822,
									"end": 832,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "5477656574204F6E204261736500000000000000000000000000000000000000"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "PUSH",
									"source": 5,
									"value": "5477656574730000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 844,
									"end": 957,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 910,
									"end": 915,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 910,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 933,
									"end": 940,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 933,
									"end": 950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 933,
									"end": 950,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 878,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 861,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 476,
									"end": 500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 845,
									"end": 850,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 845,
									"end": 850,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 845,
									"end": 850,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 845,
									"end": 878,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 845,
									"end": 878,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 845,
									"end": 878,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 845,
									"end": 878,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 845,
									"end": 878,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6776,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6756,
									"end": 6763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6829,
									"end": 6830,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 5,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 6800,
									"end": 6832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 6868,
									"end": 6869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6872,
									"end": 6879,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6881,
									"end": 6886,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6677,
									"end": 6894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5332,
									"end": 5333,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5316,
									"end": 5320,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5468,
									"end": 5473,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5464,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5452,
									"end": 5464,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 5452,
									"end": 5473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5504,
									"end": 5523,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5535,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5536,
									"end": 5540,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 5504,
									"end": 5541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5504,
									"end": 5541,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5559,
									"end": 5570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5559,
									"end": 5578,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5630,
									"end": 5634,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5636,
									"end": 5647,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5649,
									"end": 5654,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 5,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 5605,
									"end": 5655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5822,
									"end": 5827,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5808,
									"end": 5819,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5808,
									"end": 5827,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5799,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5800,
									"end": 5804,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5490,
									"end": 5852,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5880,
									"end": 5881,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5866,
									"end": 5868,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6045,
									"end": 6050,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6041,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6029,
									"end": 6041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6257,
									"end": 6262,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6249,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6250,
									"end": 6252,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6317,
									"end": 6319,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6311,
									"end": 6315,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 6321,
									"end": 6326,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6302,
									"end": 6327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5227,
									"end": 6334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 4881,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220131d74e7aa5aab4ee72eb4ba501067501a7b4d8771f2af430097f28feff0924664736f6c634300081a0033",
									".code": [
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "A64254C3"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "C8052107"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "C8052107"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "D82E3962"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "A64254C3"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "AFE8289A"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "51C6590A"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "21208FA2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "2254B79C"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 344,
											"end": 4881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1408,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4450,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4450,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 435,
											"end": 500,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 435,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 435,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1950,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1950,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 507,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 507,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 507,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 963,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2445,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2445,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 894,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 894,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 894,
											"end": 955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 894,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 955,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1255,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4093,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4093,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2678,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2678,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3708,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3708,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3708,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1067,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1092,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1092,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3346,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3368,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3420,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1408,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1469,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1499,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4574,
											"end": 4579,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4574,
											"end": 4581,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4574,
											"end": 4581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4582,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4551,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4582,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4582,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4537,
											"end": 4607,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4537,
											"end": 4607,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4649,
											"end": 4655,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4636,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4644,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4637,
											"end": 4642,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4637,
											"end": 4644,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4644,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4637,
											"end": 4644,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4645,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4618,
											"end": 4655,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4655,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4702,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4696,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4689,
											"end": 4694,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4689,
											"end": 4696,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4696,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4689,
											"end": 4696,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4697,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4771,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4666,
											"end": 4771,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4758,
											"end": 4759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4754,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4747,
											"end": 4752,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4747,
											"end": 4754,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4754,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4747,
											"end": 4754,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4755,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4759,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4759,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4759,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4719,
											"end": 4759,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4771,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4666,
											"end": 4771,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4822,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4799,
											"end": 4803,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4813,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4806,
											"end": 4811,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4806,
											"end": 4813,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4806,
											"end": 4813,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4806,
											"end": 4813,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4821,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4790,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4781,
											"end": 4822,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4822,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4781,
											"end": 4822,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4105,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4108,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4108,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4090,
											"end": 4120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4090,
											"end": 4120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 4130,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4177,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 500,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 476,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 435,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 435,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 507,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "1027E72F1F12813088000000"
										},
										{
											"begin": 507,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 963,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1010,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1010,
											"end": 1020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1010,
											"end": 1020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 963,
											"end": 1028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2535,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2501,
											"end": 2545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2501,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2556,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2645,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2664,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2445,
											"end": 2672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 955,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 894,
											"end": 955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 939,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 939,
											"end": 947,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 939,
											"end": 947,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 939,
											"end": 947,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1296,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1296,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1255,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1340,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1315,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2659,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2659,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2691,
											"end": 2696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2681,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2725,
											"end": 2729,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4183,
											"end": 4188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4183,
											"end": 4190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4183,
											"end": 4190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4164,
											"end": 4201,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4266,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4240,
											"end": 4245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4240,
											"end": 4247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4240,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4248,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4266,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4291,
											"end": 4295,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4304,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4277,
											"end": 4305,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4277,
											"end": 4305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2812,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2813,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2765,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2765,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2918,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 2876,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2914,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2915,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2876,
											"end": 2925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2876,
											"end": 2925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2872,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2925,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2925,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2849,
											"end": 3000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2849,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3046,
											"end": 3056,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3030,
											"end": 3057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3030,
											"end": 3057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3030,
											"end": 3057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1027E72F1F12813088000000"
										},
										{
											"begin": 3092,
											"end": 3098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3076,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3076,
											"end": 3089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3076,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3076,
											"end": 3098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3076,
											"end": 3098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3112,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3112,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3068,
											"end": 3142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3068,
											"end": 3142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3161,
											"end": 3171,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3155,
											"end": 3180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3155,
											"end": 3180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3254,
											"end": 3258,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3271,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3236,
											"end": 3280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3236,
											"end": 3280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3236,
											"end": 3280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3372,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3367,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3338,
											"end": 3378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3378,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3422,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3483,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3488,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3629,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3610,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3611,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3389,
											"end": 3693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 3700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 3700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3854,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 3811,
											"end": 3838,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3811,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3811,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3807,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3854,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3788,
											"end": 3977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3924,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3889,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3888,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3888,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3952,
											"end": 3965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3788,
											"end": 3977,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3788,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 3995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8183,
											"end": 8188,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8190,
											"end": 8197,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8204,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8174,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8174,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1600,
											"end": 2047,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1600,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1130,
											"end": 1152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1121,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1121,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 1744,
											"end": 1750,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1744,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1744,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1820,
											"end": 1839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1820,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1898,
											"end": 1921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1898,
											"end": 1921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1921,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1880,
											"end": 1944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1880,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1973,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2002,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1957,
											"end": 2003,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2003,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1957,
											"end": 2003,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2020,
											"end": 2026,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2038,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2014,
											"end": 2039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2014,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 2047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 2047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 2047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 9900,
											"end": 9905,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9914,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9890,
											"end": 9915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9863,
											"end": 9915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 9966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9929,
											"end": 9945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 9966,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10005,
											"end": 10010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9986,
											"end": 10002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9986,
											"end": 10010,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10064,
											"end": 10071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10073,
											"end": 10089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 10037,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10162,
											"end": 10167,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10169,
											"end": 10176,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10197,
											"end": 10202,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10194,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10202,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10204,
											"end": 10209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 10153,
											"end": 10210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9764,
											"end": 10241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 7326,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7384,
											"end": 7391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7376,
											"end": 7411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6800,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6868,
											"end": 6869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 6852,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9167,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 9204,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9332,
											"end": 9333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 9304,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9385,
											"end": 9390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9366,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9372,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9443,
											"end": 9448,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9459,
											"end": 9464,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 9434,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4695,
											"end": 4699,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4736,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4829,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 4904,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 4881,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5452,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5559,
											"end": 5578,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5605,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5827,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5490,
											"end": 5852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6041,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6029,
											"end": 6041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6321,
											"end": 6326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6302,
											"end": 6327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6922,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6877,
											"end": 6923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7078,
											"end": 7081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7099,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7264,
											"end": 7267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 7175,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 7302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7532,
											"end": 7549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7572,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7589,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7858,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7906,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7907,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7979,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8013,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8083,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 8086,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8178,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 8212,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8252,
											"end": 8253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8280,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 8283,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8119,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8456,
											"end": 8490,
											"name": "PUSH",
											"source": 10,
											"value": "4C6971756964697479206D7573742062652070726F766964656420666F722061"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8440,
											"end": 8454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8491,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8559,
											"name": "PUSH",
											"source": 10,
											"value": "74206C65617374203330206461797320746F207175616C69667920666F722072"
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8602,
											"name": "PUSH",
											"source": 10,
											"value": "6577617264730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8843,
											"end": 8845,
											"name": "PUSH",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 8838,
											"end": 8841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8779,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8944,
											"end": 8947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 8855,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8968,
											"end": 8971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8964,
											"end": 8976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9235,
											"end": 9239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9227,
											"end": 9228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9212,
											"end": 9229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 9395,
											"end": 9399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9269,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9553,
											"end": 9580,
											"name": "PUSH",
											"source": 10,
											"value": "5265776172642065786365656473206D617820737570706C7900000000000000"
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9530,
											"end": 9581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 9757,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9833,
											"end": 9926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9946,
											"end": 9949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10219,
											"end": 10228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10190,
											"end": 10207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10183,
											"end": 10230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 10373,
											"end": 10377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10247,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 10385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10454,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10488,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10536,
											"end": 10545,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 10583,
											"end": 10594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10565,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10747,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10761,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10774,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10932,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10933,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10952,
											"end": 10956,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10942,
											"end": 10957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 10980,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10981,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 11050,
											"end": 11070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 11084,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11128,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11167,
											"end": 11168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10993,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11357,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11301,
											"end": 11358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11184,
											"end": 11365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 11598,
											"end": 11600,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11593,
											"end": 11596,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 11534,
											"end": 11601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11610,
											"end": 11703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11719,
											"end": 11731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11909,
											"end": 11913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11947,
											"end": 11949,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12006,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11967,
											"end": 11984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11960,
											"end": 12007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 12150,
											"end": 12154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12024,
											"end": 12155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "PUSH",
											"source": 10,
											"value": "4369726375697420627265616B65722069732061637469766500000000000000"
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12336,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 12576,
											"end": 12578,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 12571,
											"end": 12574,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12512,
											"end": 12579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12588,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12706,
											"end": 12708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12349,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12887,
											"end": 12891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12925,
											"end": 12927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12938,
											"end": 12985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 13128,
											"end": 13132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 13002,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12721,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13306,
											"name": "PUSH",
											"source": 10,
											"value": "4275726E2076616C756520696E76616C69640000000000000000000000000000"
										},
										{
											"begin": 13282,
											"end": 13283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13274,
											"end": 13280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13270,
											"end": 13284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13263,
											"end": 13307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 13547,
											"end": 13549,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 13483,
											"end": 13550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13476,
											"end": 13550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13476,
											"end": 13550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 13648,
											"end": 13651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 13559,
											"end": 13652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13677,
											"end": 13679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13668,
											"end": 13680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13661,
											"end": 13680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13661,
											"end": 13680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13858,
											"end": 13862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13881,
											"end": 13899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13873,
											"end": 13899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13945,
											"end": 13954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13931,
											"end": 13932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13909,
											"end": 13956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 14099,
											"end": 14103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 13973,
											"end": 14104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13965,
											"end": 14104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13965,
											"end": 14104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13692,
											"end": 14111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14266,
											"end": 14270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14304,
											"end": 14306,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14293,
											"end": 14302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14289,
											"end": 14307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 14385,
											"end": 14386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14374,
											"end": 14383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14370,
											"end": 14387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14367,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14317,
											"end": 14388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 14466,
											"end": 14468,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14455,
											"end": 14464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14451,
											"end": 14469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14448,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14398,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14548,
											"end": 14550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14524,
											"end": 14530,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 14480,
											"end": 14552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14565,
											"end": 14735,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 14565,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14705,
											"end": 14727,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 14701,
											"end": 14702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14693,
											"end": 14699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14689,
											"end": 14703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14682,
											"end": 14728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14565,
											"end": 14735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14565,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 15107,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 14741,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14904,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 14968,
											"end": 14970,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 14963,
											"end": 14966,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14904,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14904,
											"end": 14971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14904,
											"end": 14971,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 14904,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14980,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 15069,
											"end": 15072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14980,
											"end": 15073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 14980,
											"end": 15073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14980,
											"end": 15073,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 14980,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15093,
											"end": 15096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15089,
											"end": 15101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15082,
											"end": 15101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15082,
											"end": 15101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 15107,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 15107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 15107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 15107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15113,
											"end": 15532,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 15113,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15279,
											"end": 15283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15317,
											"end": 15319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15306,
											"end": 15315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15294,
											"end": 15320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15294,
											"end": 15320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15366,
											"end": 15375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15360,
											"end": 15364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15356,
											"end": 15376,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15341,
											"end": 15350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15337,
											"end": 15354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15330,
											"end": 15377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15394,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 15520,
											"end": 15524,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15394,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 15394,
											"end": 15525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15394,
											"end": 15525,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 15394,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15386,
											"end": 15525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15386,
											"end": 15525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15113,
											"end": 15532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15113,
											"end": 15532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15113,
											"end": 15532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15113,
											"end": 15532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15538,
											"end": 15704,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 15538,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15678,
											"end": 15696,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 15674,
											"end": 15675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15666,
											"end": 15672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15662,
											"end": 15676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15655,
											"end": 15697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15538,
											"end": 15704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15538,
											"end": 15704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 15855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 15937,
											"end": 15939,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 15932,
											"end": 15935,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 15873,
											"end": 15940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 16038,
											"end": 16041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 15949,
											"end": 16042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "tag",
											"source": 10,
											"value": "530"
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16067,
											"end": 16069,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16058,
											"end": 16070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15710,
											"end": 16076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16248,
											"end": 16252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16275,
											"end": 16284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16329,
											"end": 16333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16325,
											"end": 16345,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16310,
											"end": 16319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16306,
											"end": 16323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 16489,
											"end": 16493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16363,
											"end": 16494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16082,
											"end": 16501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"Tweet_On_Base.sol",
								"contracts/access/Ownable.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/security/Pausable.sol",
								"contracts/security/ReentrancyGuard.sol",
								"contracts/token/ERC20/ERC20.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_SUPPLY()": "32cb6b0c",
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"calculateReward(address)": "d82e3962",
							"decimals()": "313ce567",
							"disableCircuitBreaker()": "21208fa2",
							"enableCircuitBreaker()": "a64254c3",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerAddLiquidity(uint256)": "afe8289a",
							"ownerRemoveLiquidity(uint256)": "2254b79c",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeLiquidityAndClaimRewards(uint256)": "c8052107",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerRemoveLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityAndClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base.sol\":\"Tweet_On_Base\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base.sol\":{\"keccak256\":\"0x700b3ca0acd7f21239af854c3a169ab3fca3f4cea4a7cc1fa4a8a6ace4748ef5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32115569b5790fd9ed8a169287ae80d6c093c70d77d1555b3ec10976cfdedcf0\",\"dweb:/ipfs/QmXEifMmigADqnaJvehVXjQCZuKK5yWFJKVfQw1ZmJGjJG\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 903,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 909,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 911,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 913,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 915,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 726,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 432,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 827,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 37,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_liquidityProvided",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 41,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_liquidityProvidedTimestamp",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 44,
								"contract": "Tweet_On_Base.sol:Tweet_On_Base",
								"label": "_circuitBreakerEnabled",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 432,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 726,
								"contract": "contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 827,
								"contract": "contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 903,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 909,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 911,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 913,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 915,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 903,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 909,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 911,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 913,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 915,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Tweet_On_Base.sol": {
				"ast": {
					"absolutePath": "Tweet_On_Base.sol",
					"exportedSymbols": {
						"Context": [
							1585
						],
						"ERC20": [
							1405
						],
						"ERC20Burnable": [
							1529
						],
						"IERC20": [
							1483
						],
						"IERC20Errors": [
							613
						],
						"IERC20Metadata": [
							1555
						],
						"Ownable": [
							571
						],
						"Pausable": [
							816
						],
						"ReentrancyGuard": [
							881
						],
						"Tweet_On_Base": [
							423
						]
					},
					"id": 424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 1406,
							"src": "61:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 1530,
							"src": "104:60:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 572,
							"src": "166:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/Pausable.sol",
							"file": "contracts/security/Pausable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 817,
							"src": "206:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/Pausable.sol",
							"file": "contracts/security/Pausable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 817,
							"src": "249:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/ReentrancyGuard.sol",
							"file": "contracts/security/ReentrancyGuard.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 424,
							"sourceUnit": 882,
							"src": "292:48:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "ERC20",
										"nameLocations": [
											"370:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1405,
										"src": "370:5:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "370:5:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "ERC20Burnable",
										"nameLocations": [
											"377:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1529,
										"src": "377:13:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "377:13:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "Pausable",
										"nameLocations": [
											"392:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "392:8:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "392:8:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "Ownable",
										"nameLocations": [
											"402:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 571,
										"src": "402:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "402:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"411:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "411:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "411:15:0"
								}
							],
							"canonicalName": "Tweet_On_Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 423,
							"linearizedBaseContracts": [
								423,
								881,
								571,
								816,
								1529,
								1405,
								613,
								1555,
								1483,
								1585
							],
							"name": "Tweet_On_Base",
							"nameLocation": "353:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 25,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "459:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "435:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130305f3030305f303030",
											"id": 19,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "476:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "491:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "497:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "491:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 23,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "490:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "476:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 33,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "531:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "507:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000000000000"
										},
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "355f3030305f3030305f303030",
											"id": 27,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "544:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5000000000_by_1",
												"typeString": "int_const 5000000000"
											},
											"value": "5_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "561:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "567:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "561:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 31,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "560:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "544:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_liquidityProvided",
									"nameLocation": "616:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "580:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "588:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "580:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "599:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_liquidityProvidedTimestamp",
									"nameLocation": "677:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "641:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 40,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "649:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "641:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 39,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "660:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_circuitBreakerEnabled",
									"nameLocation": "728:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 423,
									"src": "715:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 42,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "715:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "753:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "834:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 56,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "851:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "855:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "851:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 58,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "863:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 55,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "845:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "845:33:0"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5477656574204f6e2042617365",
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "787:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_80e97846aca6685e871a95e37db15e3ab09d68cf470af5a7888fe77f3d85baef",
														"typeString": "literal_string \"Tweet On Base\""
													},
													"value": "Tweet On Base"
												},
												{
													"hexValue": "547765657473",
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "804:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1fef6b2cfc5e46242875939ee75f96a3db70e31e30eb247fe7cd29c042bf64d8",
														"typeString": "literal_string \"Tweets\""
													},
													"value": "Tweets"
												}
											],
											"id": 49,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 46,
												"name": "ERC20",
												"nameLocations": [
													"781:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1405,
												"src": "781:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:32:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 51,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "822:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "826:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "822:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 53,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 50,
												"name": "Ownable",
												"nameLocations": [
													"814:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 571,
												"src": "814:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "814:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:0:0"
									},
									"scope": 423,
									"src": "767:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "928:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 67,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "939:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "939:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "939:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "onlyOwner",
												"nameLocations": [
													"918:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "918:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "918:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "903:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 423,
									"src": "894:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "999:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1010:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1010:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"989:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "989:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "989:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "972:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:0"
									},
									"scope": 423,
									"src": "963:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1110:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1129:23:0",
															"subExpression": {
																"id": 83,
																"name": "_circuitBreakerEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "1130:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4369726375697420627265616b657220697320616374697665",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1154:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																"typeString": "literal_string \"Circuit breaker is active\""
															},
															"value": "Circuit breaker is active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																"typeString": "literal_string \"Circuit breaker is active\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1121:61:0"
											},
											{
												"id": 88,
												"nodeType": "PlaceholderStatement",
												"src": "1193:1:0"
											}
										]
									},
									"id": 90,
									"name": "circuitBreakerNotActive",
									"nameLocation": "1084:23:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:0"
									},
									"src": "1075:127:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1304:48:0",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "_circuitBreakerEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1315:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1340:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1315:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1315:29:0"
											}
										]
									},
									"functionSelector": "a64254c3",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "enableCircuitBreaker",
									"nameLocation": "1264:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 423,
									"src": "1255:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1458:49:0",
										"statements": [
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "_circuitBreakerEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1469:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1494:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1469:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1469:30:0"
											}
										]
									},
									"functionSelector": "21208fa2",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 102,
												"name": "onlyOwner",
												"nameLocations": [
													"1448:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "1448:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1448:9:0"
										}
									],
									"name": "disableCircuitBreaker",
									"nameLocation": "1417:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1458:0:0"
									},
									"scope": 423,
									"src": "1408:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1125
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1712:335:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1731:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "1723:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 124,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1744:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030303030",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1753:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "1744:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1723:36:0"
											},
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "1807:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "1799:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 130,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1820:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 131,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1829:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1820:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1799:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 136,
																	"name": "sendAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1898:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 137,
																	"name": "burnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1911:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1898:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1888:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e2076616c756520696e76616c6964",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															},
															"value": "Burn value invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1880:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1973:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1981:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 143,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1957:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Tweet_On_Base_$423_$",
																"typeString": "type(contract super Tweet_On_Base)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1963:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "1957:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1957:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2028:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 151,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "2014:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2014:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2014:25:0"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "circuitBreakerNotActive",
												"nameLocations": [
													"1688:23:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 90,
												"src": "1688:23:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1688:23:0"
										}
									],
									"name": "_transfer",
									"nameLocation": "1609:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1679:8:0"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1627:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1619:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1643:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1635:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1618:51:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1712:0:0"
									},
									"scope": 423,
									"src": "1600:447:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "2374:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2412:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 175,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2418:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2422:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 171,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Tweet_On_Base_$423_$",
																"typeString": "type(contract super Tweet_On_Base)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2391:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1278,
														"src": "2385:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2385:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "2385:44:0"
											}
										]
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 165,
												"name": "whenNotPaused",
												"nameLocations": [
													"2304:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "2304:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2304:13:0"
										},
										{
											"id": 168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 167,
												"name": "circuitBreakerNotActive",
												"nameLocations": [
													"2327:23:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 90,
												"src": "2327:23:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2327:23:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "2214:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2360:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2243:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2235:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:42:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:0"
									},
									"scope": 423,
									"src": "2205:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2490:182:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 186,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2511:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2515:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 190,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2523:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2523:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2538:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "2501:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2501:44:0"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 195,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2556:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 198,
														"indexExpression": {
															"expression": {
																"id": 196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2575:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2579:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2556:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 199,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2590:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2556:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2556:40:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 202,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2607:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 205,
														"indexExpression": {
															"expression": {
																"id": 203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2635:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2639:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2635:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2607:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 206,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2655:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2649:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2607:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2607:57:0"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2454:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "2467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:16:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:0:0"
									},
									"scope": 423,
									"src": "2445:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "2754:946:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "2773:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 220,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "2783:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 223,
																"indexExpression": {
																	"expression": {
																		"id": 221,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2802:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2806:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2802:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2783:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2773:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2815:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2765:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 229,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2857:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2863:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2857:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 231,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "2876:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 234,
																	"indexExpression": {
																		"expression": {
																			"id": 232,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2904:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2908:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2904:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2876:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2918:7:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "2876:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2857:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f72206174206c65617374203330206461797320746f207175616c69667920666f722072657761726473",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															},
															"value": "Liquidity must be provided for at least 30 days to qualify for rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2849:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2849:151:0"
											},
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3021:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 305,
														"src": "3013:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 247,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 244,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3046:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3050:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3046:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "3030:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3030:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3013:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 249,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "3076:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3076:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 251,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3092:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3076:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 253,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "3102:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3076:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642065786365656473206d617820737570706c79",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3114:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															},
															"value": "Reward exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3068:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 259,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3161:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3165:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3161:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 261,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "3155:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3155:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 267,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3254:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3246:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3246:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3246:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3261:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3265:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3261:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "3273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "3236:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "3236:44:0"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 274,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3338:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 277,
														"indexExpression": {
															"expression": {
																"id": 275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3357:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3361:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3357:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3338:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 278,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3338:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "3338:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 281,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3393:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 284,
														"indexExpression": {
															"expression": {
																"id": 282,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3412:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3416:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3412:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3393:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3393:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 303,
													"nodeType": "Block",
													"src": "3557:136:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 295,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "3572:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 298,
																	"indexExpression": {
																		"expression": {
																			"id": 296,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3600:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3604:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3600:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3572:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 299,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3614:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3620:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3614:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3572:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3572:57:0"
														}
													]
												},
												"id": 304,
												"nodeType": "IfStatement",
												"src": "3389:304:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "3430:121:0",
													"statements": [
														{
															"expression": {
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 287,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "3445:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 290,
																	"indexExpression": {
																		"expression": {
																			"id": 288,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3473:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3477:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3473:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3445:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3487:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3445:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "3445:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c8052107",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 215,
												"name": "nonReentrant",
												"nameLocations": [
													"2741:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "2741:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2741:12:0"
										}
									],
									"name": "removeLiquidityAndClaimRewards",
									"nameLocation": "2687:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "2718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:16:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:0"
									},
									"scope": 423,
									"src": "2678:1022:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "3777:226:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3798:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3792:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 315,
																"name": "_liquidityProvidedTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "3811:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 317,
															"indexExpression": {
																"id": 316,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "3839:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3811:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3330",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3847:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "3811:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3792:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"nodeType": "IfStatement",
												"src": "3788:189:0",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "3856:121:0",
													"statements": [
														{
															"assignments": [
																322
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 322,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "3879:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 334,
																	"src": "3871:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 321,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3871:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 331,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 323,
																					"name": "_liquidityProvided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 37,
																					"src": "3889:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 325,
																				"indexExpression": {
																					"id": 324,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "3908:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3889:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3916:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "3889:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 328,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3888:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3921:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3888:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3871:53:0"
														},
														{
															"expression": {
																"id": 332,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "3959:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 312,
															"id": 333,
															"nodeType": "Return",
															"src": "3952:13:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3994:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 312,
												"id": 337,
												"nodeType": "Return",
												"src": "3987:8:0"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3717:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3741:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3733:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:14:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3768:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3767:9:0"
									},
									"scope": 423,
									"src": "3708:295:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4153:204:0",
										"statements": [
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 346,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4164:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 349,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 347,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4183:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4183:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4164:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4195:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4164:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "4164:37:0"
											},
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 353,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "4212:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 356,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 354,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4240:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4240:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4212:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 357,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4257:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4251:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4212:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "4212:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 364,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4291:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4283:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4283:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4298:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 361,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "4277:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4277:28:0"
											}
										]
									},
									"functionSelector": "afe8289a",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "onlyOwner",
												"nameLocations": [
													"4143:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "4143:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4143:9:0"
										}
									],
									"name": "ownerAddLiquidity",
									"nameLocation": "4102:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4128:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4120:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4119:16:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:0:0"
									},
									"scope": 423,
									"src": "4093:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4526:348:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "4545:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 381,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "4555:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 384,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 382,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "4574:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4574:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4555:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4545:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4584:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4537:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "4537:70:0"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 389,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4618:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 392,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 390,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4637:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4637:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4618:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 393,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4649:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4618:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "4618:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 396,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4670:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 399,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 397,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4689:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4689:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4670:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4701:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4670:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 410,
												"nodeType": "IfStatement",
												"src": "4666:105:0",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "4704:67:0",
													"statements": [
														{
															"expression": {
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 402,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "4719:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 405,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 403,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "4747:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4747:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4719:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4758:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4719:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 408,
															"nodeType": "ExpressionStatement",
															"src": "4719:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$423",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4791:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 416,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "4806:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4806:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4815:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "4781:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4781:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "4781:41:0"
											}
										]
									},
									"functionSelector": "2254b79c",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 375,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 374,
												"name": "onlyOwner",
												"nameLocations": [
													"4503:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "4503:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4503:9:0"
										},
										{
											"id": 377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 376,
												"name": "nonReentrant",
												"nameLocations": [
													"4513:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "4513:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4513:12:0"
										}
									],
									"name": "ownerRemoveLiquidity",
									"nameLocation": "4459:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4488:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4480:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4479:16:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4526:0:0"
									},
									"scope": 423,
									"src": "4450:424:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 424,
							"src": "344:4537:0",
							"usedErrors": [
								437,
								442,
								583,
								588,
								593,
								602,
								607,
								612
							],
							"usedEvents": [
								448,
								719,
								724,
								1417,
								1426
							]
						}
					],
					"src": "33:4850:0"
				},
				"id": 0
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1585
						],
						"Ownable": [
							571
						]
					},
					"id": 572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 425,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 572,
							"sourceUnit": 1586,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 426,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1585,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 429,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "692:7:1"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 428,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 571,
							"linearizedBaseContracts": [
								571,
								1585
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 431,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 437,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 442,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 448,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 454,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 461,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 460,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 466,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 571,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 480,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 482,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 432,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 487,
												"id": 489,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 571,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 495,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 497,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 501,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 500,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 571,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 514,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 571,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 531,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 537,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 536,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 542,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 545,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 482,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 571,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 556,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"id": 558,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 432,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 561,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 565,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 564,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 571,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 572,
							"src": "663:2438:1",
							"usedErrors": [
								437,
								442
							],
							"usedEvents": [
								448
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							708
						],
						"IERC20Errors": [
							613
						],
						"IERC721Errors": [
							661
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 574,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 583,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 588,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 593,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 602,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 607,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 612,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 709,
							"src": "278:1764:2",
							"usedErrors": [
								583,
								588,
								593,
								602,
								607,
								612
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 614,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 661,
							"linearizedBaseContracts": [
								661
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 619,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 624,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 633,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 638,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 643,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 650,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 655,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 660,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 709,
							"src": "2186:2092:2",
							"usedErrors": [
								619,
								624,
								633,
								638,
								643,
								650,
								655,
								660
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 673,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 678,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 683,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 690,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 695,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 700,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 707,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 709,
							"src": "4424:2107:2",
							"usedErrors": [
								673,
								678,
								683,
								690,
								695,
								700,
								707
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1585
						],
						"Pausable": [
							816
						]
					},
					"id": 817,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 817,
							"sourceUnit": 1586,
							"src": "130:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 713,
										"name": "Context",
										"nameLocations": [
											"632:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "632:7:3"
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:3"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 712,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816,
								1585
							],
							"name": "Pausable",
							"nameLocation": "620:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 719,
									"name": "Paused",
									"nameLocation": "730:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "737:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:3"
									},
									"src": "724:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 724,
									"name": "Unpaused",
									"nameLocation": "841:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:3"
									},
									"src": "835:32:3"
								},
								{
									"constant": false,
									"id": 726,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 816,
									"src": "873:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 725,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "986:32:3",
										"statements": [
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "996:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "996:15:3"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 735,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:3"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:3"
									},
									"scope": 816,
									"src": "972:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "1229:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 738,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1239:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:3"
											},
											{
												"id": 741,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:3"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 743,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:3"
									},
									"src": "1204:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "1476:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 746,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1486:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:3"
											},
											{
												"id": 749,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 751,
									"name": "whenPaused",
									"nameLocation": "1463:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:3"
									},
									"src": "1454:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1668:31:3",
										"statements": [
											{
												"expression": {
													"id": 757,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "1685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 756,
												"id": 758,
												"nodeType": "Return",
												"src": "1678:14:3"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:3"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1662:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:3"
									},
									"scope": 816,
									"src": "1615:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "1818:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 765,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "1837:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:3"
									},
									"scope": 816,
									"src": "1767:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "1993:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 777,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "2011:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:3"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:3"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:3"
									},
									"scope": 816,
									"src": "1945:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "2235:66:3",
										"statements": [
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 789,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2245:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 794,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "2281:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 793,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2274:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "EmitStatement",
												"src": "2269:25:3"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 787,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 786,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 743,
												"src": "2221:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:3"
									},
									"scope": 816,
									"src": "2186:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2481:69:3",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 810,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "2530:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 809,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "EmitStatement",
												"src": "2516:27:3"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 802,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 751,
												"src": "2470:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:3"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:3"
									},
									"scope": 816,
									"src": "2433:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 817,
							"src": "602:1950:3",
							"usedErrors": [],
							"usedEvents": [
								719,
								724
							]
						}
					],
					"src": "105:2448:3"
				},
				"id": 3
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 818,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 819,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 822,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 821,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 825,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 831,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 881,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 841,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 842,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 846,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 850,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 851,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 856,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 857,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 881,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 864,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 865,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 881,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 876,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 874,
												"id": 878,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 881,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 882,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1585
						],
						"ERC20": [
							1405
						],
						"IERC20": [
							1483
						],
						"IERC20Errors": [
							613
						],
						"IERC20Metadata": [
							1555
						]
					},
					"id": 1406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1484,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 884,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1483,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1556,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 886,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1555,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1586,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 888,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1585,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 709,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 890,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 613,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 892,
										"name": "Context",
										"nameLocations": [
											"376:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "376:7:5"
									},
									"id": 893,
									"nodeType": "InheritanceSpecifier",
									"src": "376:7:5"
								},
								{
									"baseName": {
										"id": 894,
										"name": "IERC20",
										"nameLocations": [
											"385:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "385:6:5"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "385:6:5"
								},
								{
									"baseName": {
										"id": 896,
										"name": "IERC20Metadata",
										"nameLocations": [
											"393:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1555,
										"src": "393:14:5"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "393:14:5"
								},
								{
									"baseName": {
										"id": 898,
										"name": "IERC20Errors",
										"nameLocations": [
											"409:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "409:12:5"
									},
									"id": 899,
									"nodeType": "InheritanceSpecifier",
									"src": "409:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1405,
							"linearizedBaseContracts": [
								1405,
								613,
								1555,
								1483,
								1585
							],
							"name": "ERC20",
							"nameLocation": "367:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 903,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "472:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "428:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 902,
										"keyName": "account",
										"keyNameLocation": "444:7:5",
										"keyType": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "436:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "428:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 901,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "455:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 909,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "560:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "488:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 908,
										"keyName": "account",
										"keyNameLocation": "504:7:5",
										"keyType": {
											"id": 904,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "496:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "488:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 907,
											"keyName": "spender",
											"keyNameLocation": "531:7:5",
											"keyType": {
												"id": 905,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "523:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "515:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "542:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 911,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "594:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "578:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 913,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "628:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "613:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 912,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "613:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 915,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "654:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "639:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 914,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "639:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "900:57:5",
										"statements": [
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "910:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 924,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "918:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "910:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "910:13:5"
											},
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 927,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "933:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 928,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "943:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "933:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "933:17:5"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "668:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 932,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "870:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "856:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "891:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "877:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:44:5"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:5"
									},
									"scope": 1405,
									"src": "844:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1542
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "1082:29:5",
										"statements": [
											{
												"expression": {
													"id": 938,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "1099:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 937,
												"id": 939,
												"nodeType": "Return",
												"src": "1092:12:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "963:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1031:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "1067:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1067:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:15:5"
									},
									"scope": 1405,
									"src": "1022:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1548
									],
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "1286:31:5",
										"statements": [
											{
												"expression": {
													"id": 947,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 915,
													"src": "1303:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 946,
												"id": 948,
												"nodeType": "Return",
												"src": "1296:14:5"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "1117:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1233:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1271:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1271:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:15:5"
									},
									"scope": 1405,
									"src": "1224:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1554
									],
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "2006:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2023:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 955,
												"id": 957,
												"nodeType": "Return",
												"src": "2016:9:5"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1323:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1959:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:2:5"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "1999:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 953,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1999:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:7:5"
									},
									"scope": 1405,
									"src": "1950:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "2153:36:5",
										"statements": [
											{
												"expression": {
													"id": 965,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 911,
													"src": "2170:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 966,
												"nodeType": "Return",
												"src": "2163:19:5"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "2038:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2101:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:2:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2144:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:9:5"
									},
									"scope": 1405,
									"src": "2092:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1440
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "2321:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 976,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2338:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 978,
													"indexExpression": {
														"id": 977,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2348:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2338:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 975,
												"id": 979,
												"nodeType": "Return",
												"src": "2331:25:5"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "2195:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "2266:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:17:5"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "2312:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:9:5"
									},
									"scope": 1405,
									"src": "2247:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1450
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2633:103:5",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2651:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "2643:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2643:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2659:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2659:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2643:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2691:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2698:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2681:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2681:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2725:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 990,
												"id": 1003,
												"nodeType": "Return",
												"src": "2718:11:5"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "2369:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2567:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2584:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2576:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2588:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:27:5"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2627:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2627:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:6:5"
									},
									"scope": 1405,
									"src": "2558:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1460
									],
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "2883:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1015,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "2900:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1017,
														"indexExpression": {
															"id": 1016,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2912:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2900:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1019,
													"indexExpression": {
														"id": 1018,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2919:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2900:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1020,
												"nodeType": "Return",
												"src": "2893:34:5"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "2742:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2803:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2821:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2813:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2836:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2828:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:32:5"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "2874:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:9:5"
									},
									"scope": 1405,
									"src": "2794:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1470
									],
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "3320:107:5",
										"statements": [
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3338:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "3330:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1032,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3330:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1036,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1034,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "3346:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3346:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3330:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "3377:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3384:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3393:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1296,
															1356
														],
														"referencedDeclaration": 1296,
														"src": "3368:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "3368:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3416:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1031,
												"id": 1044,
												"nodeType": "Return",
												"src": "3409:11:5"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "2940:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3250:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3266:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3258:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3283:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3275:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3257:32:5"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "3314:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3314:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:6:5"
									},
									"scope": 1405,
									"src": "3241:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1482
									],
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "4080:151:5",
										"statements": [
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4098:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "4090:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1058,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4090:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1060,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "4108:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4090:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4146:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4152:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4161:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "4130:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4130:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "4130:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4187:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "4193:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "4177:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4177:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4220:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1057,
												"id": 1076,
												"nodeType": "Return",
												"src": "4213:11:5"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "3433:549:5",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3996:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4017:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "4009:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4031:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "4023:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4043:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "4035:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:41:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "4074:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4074:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4073:6:5"
									},
									"scope": 1405,
									"src": "3987:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "4681:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "4695:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4711:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4703:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1089,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4703:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4703:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4695:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "4691:86:5",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "4715:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4763:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4755:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1095,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4755:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4755:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1094,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "4736:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4736:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1100,
															"nodeType": "RevertStatement",
															"src": "4729:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "4790:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4804:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4796:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1104,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4796:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4796:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4790:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "4786:86:5",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "4808:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4858:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4850:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1110,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4850:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4850:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1109,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "4829:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4829:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1115,
															"nodeType": "RevertStatement",
															"src": "4822:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "4889:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "4895:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4899:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4881:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "4881:24:5"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "4237:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "4613:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "4623:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4645:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "4637:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4657:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "4649:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4622:41:5"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4681:0:5"
									},
									"scope": 1405,
									"src": "4604:308:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "5302:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5316:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5332:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5324:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1136,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5324:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5324:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5316:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "5490:362:5",
													"statements": [
														{
															"assignments": [
																1147
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1147,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "5512:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1172,
																	"src": "5504:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1146,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5504:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1151,
															"initialValue": {
																"baseExpression": {
																	"id": 1148,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "5526:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1150,
																"indexExpression": {
																	"id": 1149,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "5536:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5526:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5504:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "5559:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5573:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5559:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1162,
															"nodeType": "IfStatement",
															"src": "5555:115:5",
															"trueBody": {
																"id": 1161,
																"nodeType": "Block",
																"src": "5580:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1156,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "5630:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1157,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "5636:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "5649:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1155,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "5605:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5605:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1160,
																		"nodeType": "RevertStatement",
																		"src": "5598:57:5"
																	}
																]
															}
														},
														{
															"id": 1171,
															"nodeType": "UncheckedBlock",
															"src": "5683:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1163,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "5790:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1165,
																			"indexExpression": {
																				"id": 1164,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "5800:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5790:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1166,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "5808:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1167,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "5822:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5808:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5790:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1170,
																	"nodeType": "ExpressionStatement",
																	"src": "5790:37:5"
																}
															]
														}
													]
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "5312:540:5",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "5336:148:5",
													"statements": [
														{
															"expression": {
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1141,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "5452:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5468:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5452:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "5452:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1174,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "5866:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5880:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5872:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1175,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5872:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5872:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5866:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "6081:206:5",
													"statements": [
														{
															"id": 1192,
															"nodeType": "UncheckedBlock",
															"src": "6095:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1186,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "6240:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1188,
																			"indexExpression": {
																				"id": 1187,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "6250:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6240:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1189,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "6257:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6240:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1191,
																	"nodeType": "ExpressionStatement",
																	"src": "6240:22:5"
																}
															]
														}
													]
												},
												"id": 1194,
												"nodeType": "IfStatement",
												"src": "5862:425:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "5884:191:5",
													"statements": [
														{
															"id": 1184,
															"nodeType": "UncheckedBlock",
															"src": "5898:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "6029:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1181,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "6045:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6029:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "6029:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1196,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "6317:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "6321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1195,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "6302:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "EmitStatement",
												"src": "6297:30:5"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "4918:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5236:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5252:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5244:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5266:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5258:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5278:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5270:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:41:5"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5302:0:5"
									},
									"scope": 1405,
									"src": "5227:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "6742:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1210,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6756:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6775:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6767:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6767:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6756:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "6752:91:5",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "6779:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6829:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6821:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1217,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6821:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6821:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1216,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "6800:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6800:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "6793:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6868:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6860:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6860:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6860:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "6872:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6881:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "6852:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "6852:35:5"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "6340:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6686:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6700:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "6692:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6717:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "6709:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:32:5"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6742:0:5"
									},
									"scope": 1405,
									"src": "6677:217:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "7268:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1243,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "7282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7301:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7293:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7293:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7282:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1257,
												"nodeType": "IfStatement",
												"src": "7278:89:5",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "7305:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7353:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7345:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1250,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7345:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7345:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1249,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "7326:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7326:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1255,
															"nodeType": "RevertStatement",
															"src": "7319:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "7384:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7401:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7393:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7393:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7393:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "7405:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "7376:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7376:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "7376:35:5"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "6900:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7221:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7235:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "7227:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "7244:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7226:32:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:5"
									},
									"scope": 1405,
									"src": "7212:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "7512:41:5",
										"statements": []
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7433:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7462:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "7454:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7476:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "7468:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7488:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "7480:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:41:5"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7512:0:5"
									},
									"scope": 1405,
									"src": "7424:129:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "8164:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "8183:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "8190:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "8199:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8206:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1288,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1296,
															1356
														],
														"referencedDeclaration": 1356,
														"src": "8174:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "8174:37:5"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "7560:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8099:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "8108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "8123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8148:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "8140:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8107:47:5"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8164:0:5"
									},
									"scope": 1405,
									"src": "8090:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "9148:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "9162:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9179:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9171:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1309,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9171:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9171:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9162:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "9158:89:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "9183:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9233:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9225:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1315,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9225:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9225:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1314,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "9204:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9204:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1320,
															"nodeType": "RevertStatement",
															"src": "9197:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "9260:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9279:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9271:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9271:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9271:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9260:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "9256:90:5",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "9283:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9332:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9324:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1330,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9324:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9324:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1329,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "9304:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9304:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1335,
															"nodeType": "RevertStatement",
															"src": "9297:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1338,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "9355:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1341,
															"indexExpression": {
																"id": 1339,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "9367:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9355:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1342,
														"indexExpression": {
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "9374:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9355:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "9385:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9355:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "9355:35:5"
											},
											{
												"condition": {
													"id": 1346,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1305,
													"src": "9404:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "9400:76:5",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "9415:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1348,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "9443:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1349,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "9450:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1350,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "9459:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1347,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "9434:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9434:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "EmitStatement",
															"src": "9429:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "8224:821:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9059:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9076:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9068:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9068:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9091:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9083:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9083:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9108:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9100:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9100:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9120:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "9115:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9115:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9067:63:5"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9148:0:5"
									},
									"scope": 1405,
									"src": "9050:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "9853:388:5",
										"statements": [
											{
												"assignments": [
													1367
												],
												"declarations": [
													{
														"constant": false,
														"id": 1367,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9871:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1403,
														"src": "9863:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9863:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"arguments": [
														{
															"id": 1369,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "9900:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "9907:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1368,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "9890:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9890:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1373,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "9929:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9954:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1375,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9954:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1374,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9949:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9963:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9949:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9929:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "IfStatement",
												"src": "9925:310:5",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "9968:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "9986:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1381,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "10005:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9986:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1390,
															"nodeType": "IfStatement",
															"src": "9982:130:5",
															"trueBody": {
																"id": 1389,
																"nodeType": "Block",
																"src": "10012:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1384,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1361,
																					"src": "10064:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1385,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "10073:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1386,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1363,
																					"src": "10091:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1383,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 602,
																				"src": "10037:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10037:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1388,
																		"nodeType": "RevertStatement",
																		"src": "10030:67:5"
																	}
																]
															}
														},
														{
															"id": 1400,
															"nodeType": "UncheckedBlock",
															"src": "10125:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1392,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "10162:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1393,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1361,
																				"src": "10169:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1394,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "10178:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1395,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1363,
																					"src": "10197:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10178:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10204:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1391,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1296,
																				1356
																			],
																			"referencedDeclaration": 1356,
																			"src": "10153:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10153:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1399,
																	"nodeType": "ExpressionStatement",
																	"src": "10153:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "9488:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "9773:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9797:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "9789:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9789:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9812:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "9804:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9804:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9829:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "9821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9788:47:5"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9853:0:5"
									},
									"scope": 1405,
									"src": "9764:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1406,
							"src": "349:9894:5",
							"usedErrors": [
								583,
								588,
								593,
								602,
								607,
								612
							],
							"usedEvents": [
								1417,
								1426
							]
						}
					],
					"src": "105:10139:5"
				},
				"id": 5
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1483
						]
					},
					"id": 1484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1408,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1483,
							"linearizedBaseContracts": [
								1483
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1417,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1426,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 1483,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 1483,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 1483,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 1483,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1483,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 1483,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1484,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1417,
								1426
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1585
						],
						"ERC20": [
							1405
						],
						"ERC20Burnable": [
							1529
						]
					},
					"id": 1530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1485,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:7"
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1406,
							"src": "150:35:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1486,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1405,
										"src": "158:5:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1489,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1586,
							"src": "186:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1488,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1585,
										"src": "194:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1491,
										"name": "Context",
										"nameLocations": [
											"483:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "483:7:7"
									},
									"id": 1492,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:7"
								},
								{
									"baseName": {
										"id": 1493,
										"name": "ERC20",
										"nameLocations": [
											"492:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1405,
										"src": "492:5:7"
									},
									"id": 1494,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:7"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1490,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:7",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1529,
							"linearizedBaseContracts": [
								1529,
								1405,
								613,
								1555,
								1483,
								1585
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "662:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1501,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "678:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1503,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "692:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1500,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "672:26:7"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:7",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "632:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:7"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:7"
									},
									"scope": 1529,
									"src": "618:87:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "1086:93:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "1112:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1517,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "1121:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1519,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1135:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1515,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "1096:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1523,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "1157:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1524,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1166:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1522,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "1151:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:7"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:7",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1039:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1056:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:7"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:7"
									},
									"scope": 1529,
									"src": "1021:158:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1530,
							"src": "448:733:7",
							"usedErrors": [
								583,
								588,
								593,
								602,
								607,
								612
							],
							"usedEvents": [
								1417,
								1426
							]
						}
					],
					"src": "124:1058:7"
				},
				"id": 7
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1483
						],
						"IERC20Metadata": [
							1555
						]
					},
					"id": 1556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1556,
							"sourceUnit": 1484,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1532,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1483,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1535,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "305:6:8"
									},
									"id": 1536,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1534,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1555,
							"linearizedBaseContracts": [
								1555,
								1483
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 1555,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 1555,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1551,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 1555,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1556,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								1417,
								1426
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1585
						]
					},
					"id": 1586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1558,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1585,
							"linearizedBaseContracts": [
								1585
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1563,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1565,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1585,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1572,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1571,
												"id": 1574,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1585,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1580,
												"id": 1582,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1585,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1586,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			}
		}
	}
}