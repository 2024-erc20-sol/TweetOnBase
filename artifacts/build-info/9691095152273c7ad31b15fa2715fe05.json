{
	"id": "9691095152273c7ad31b15fa2715fe05",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"GenericLayout.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"contracts/token/ERC20/ERC20.sol\";\r\nimport \"contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"contracts/access/Ownable.sol\";\r\n//import \"contracts/security/Pausable.sol\";\r\nimport \"contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract GenericLayout is ERC20, ERC20Burnable, /*Pausable*/ Ownable, ReentrancyGuard {\r\n    uint256 public maxSupply; \r\n    \r\n    uint8 public decimalsPlaces;\r\n\r\n    mapping(address => uint256) private _liquidityProvided;\r\n    mapping(address => uint256) private _liquidityProvidedTimestamp;\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply,\r\n        uint256 _maxSupply,\r\n        uint8 _decimalsPlaces,\r\n        address deployerAddress\r\n    ) ERC20(name, symbol) Ownable(deployerAddress) {\r\n        require(initialSupply <= _maxSupply, \"Initial supply cannot be more than max supply.\");\r\n        _mint(deployerAddress, initialSupply);\r\n        maxSupply = _maxSupply;\r\n        decimalsPlaces = _decimalsPlaces;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return decimalsPlaces;\r\n    }\r\n/*\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n  */  \r\n    bool private _circuitBreakerEnabled = false;    \r\n    modifier circuitBreakerNotActive() {\r\n        require(!_circuitBreakerEnabled, \"Circuit breaker is active\");\r\n        _;\r\n    }\r\n    function enableCircuitBreaker() public onlyOwner {\r\n        _circuitBreakerEnabled = true;\r\n    }\r\n    function disableCircuitBreaker() public onlyOwner {\r\n        _circuitBreakerEnabled = false;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {\r\n        uint256 burnAmount = amount / 100000;\r\n        uint256 sendAmount = amount - burnAmount;\r\n        require(amount == sendAmount + burnAmount, \"Burn value invalid\");\r\n\r\n        super._transfer(sender, recipient, sendAmount);\r\n        _burn(sender, burnAmount);\r\n    }\r\n \r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        //whenNotPaused\r\n        circuitBreakerNotActive\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    function addLiquidity(uint256 amount) public {\r\n        _transfer(msg.sender, address(this), amount);\r\n        _liquidityProvided[msg.sender] += amount;\r\n        _liquidityProvidedTimestamp[msg.sender] = block.timestamp;\r\n    }\r\n\r\n    function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {\r\n        require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\");\r\n        require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\");\r\n\r\n        uint256 reward = calculateReward(msg.sender);\r\n        require(totalSupply() + reward <= maxSupply, \"Reward exceeds max supply\");\r\n\r\n    _mint(msg.sender, reward); \r\n    _transfer(address(this), msg.sender, amount); \r\n    _liquidityProvided[msg.sender] -= amount;\r\n        if (_liquidityProvided[msg.sender] == 0) {\r\n            _liquidityProvidedTimestamp[msg.sender] = 0; \r\n        } else {\r\n            _liquidityProvidedTimestamp[msg.sender] = block.timestamp; \r\n        }\r\n    }\r\n\r\n    function calculateReward(address user) public view returns (uint256) {\r\n    if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {\r\n        uint256 reward = (_liquidityProvided[user] * 5) / 100;        \r\n        if (totalSupply() + reward <= maxSupply) {\r\n            return reward;\r\n        }\r\n    }\r\n    return 0;\r\n    }\r\n\r\n    function ownerAddLiquidity(uint256 amount) public onlyOwner {\r\n        _liquidityProvided[owner()] += amount;\r\n        _liquidityProvidedTimestamp[owner()] = block.timestamp;\r\n        _mint(address(this), amount);\r\n    }\r\n\r\n    function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {\r\n        require(amount <= _liquidityProvided[owner()], \"Insufficient balance\");\r\n        _liquidityProvided[owner()] -= amount;\r\n        if (_liquidityProvided[owner()] == 0) {\r\n            _liquidityProvidedTimestamp[owner()] = 0;\r\n        }\r\n        _transfer(address(this), owner(), amount); \r\n    }\r\n\r\n}\r\n"
			},
			"contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal virtual  {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual {\n        // Hook logic (if needed)\n    }\n\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"GenericLayout.sol": {
				"GenericLayout": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_decimalsPlaces",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "deployerAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimalsPlaces",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableCircuitBreaker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableCircuitBreaker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerAddLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerRemoveLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityAndClaimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GenericLayout.sol\":301:4406  contract GenericLayout is ERC20, ERC20Burnable, /*Pausable*/ Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"GenericLayout.sol\":1388:1393  false */\n  0x00\n    /* \"GenericLayout.sol\":1350:1393  bool private _circuitBreakerEnabled = false */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"GenericLayout.sol\":601:1081  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GenericLayout.sol\":835:850  deployerAddress */\n  dup1\n    /* \"GenericLayout.sol\":813:817  name */\n  dup7\n    /* \"GenericLayout.sol\":819:825  symbol */\n  dup7\n    /* \"contracts/token/ERC20/ERC20.sol\":918:923  name_ */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":910:915  _name */\n  0x03\n    /* \"contracts/token/ERC20/ERC20.sol\":910:923  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":943:950  symbol_ */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":933:940  _symbol */\n  0x04\n    /* \"contracts/token/ERC20/ERC20.sol\":933:950  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":844:957  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GenericLayout.sol\":888:898  _maxSupply */\n  dup3\n    /* \"GenericLayout.sol\":871:884  initialSupply */\n  dup5\n    /* \"GenericLayout.sol\":871:898  initialSupply <= _maxSupply */\n  gt\n  iszero\n    /* \"GenericLayout.sol\":863:949  require(initialSupply <= _maxSupply, \"Initial supply cannot be more than max supply.\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"GenericLayout.sol\":960:997  _mint(deployerAddress, initialSupply) */\n  tag_23\n    /* \"GenericLayout.sol\":966:981  deployerAddress */\n  dup2\n    /* \"GenericLayout.sol\":983:996  initialSupply */\n  dup6\n    /* \"GenericLayout.sol\":960:965  _mint */\n  shl(0x20, tag_24)\n    /* \"GenericLayout.sol\":960:997  _mint(deployerAddress, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"GenericLayout.sol\":1020:1030  _maxSupply */\n  dup3\n    /* \"GenericLayout.sol\":1008:1017  maxSupply */\n  0x07\n    /* \"GenericLayout.sol\":1008:1030  maxSupply = _maxSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GenericLayout.sol\":1058:1073  _decimalsPlaces */\n  dup2\n    /* \"GenericLayout.sol\":1041:1055  decimalsPlaces */\n  0x08\n  0x00\n    /* \"GenericLayout.sol\":1041:1073  decimalsPlaces = _decimalsPlaces */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"GenericLayout.sol\":601:1081  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"GenericLayout.sol\":301:4406  contract GenericLayout is ERC20, ERC20Burnable, /*Pausable*/ Ownable, ReentrancyGuard {... */\n  jump(tag_25)\n    /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\ntag_24:\n    /* \"contracts/token/ERC20/ERC20.sol\":6775:6776  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6763  account */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6829:6830  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6800:6832  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\ntag_28:\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n  tag_30\n    /* \"contracts/token/ERC20/ERC20.sol\":6868:6869  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6872:6879  account */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6881:6886  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6859  _update */\n  shl(0x20, tag_31)\n    /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"contracts/token/ERC20/ERC20.sol\":5332:5333  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5320  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":5468:5473  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5452:5464  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5452:5473  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"contracts/token/ERC20/ERC20.sol\":5504:5523  uint256 fromBalance */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5535  _balances */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5536:5540  from */\n  dup6\n    /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/token/ERC20/ERC20.sol\":5504:5541  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5573:5578  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5559:5570  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5559:5578  fromBalance < value */\n  lt\n    /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":5630:5634  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5636:5647  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5649:5654  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":5605:5655  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\ntag_37:\n    /* \"contracts/token/ERC20/ERC20.sol\":5822:5827  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5808:5819  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":5808:5827  fromBalance - value */\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5799  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":5800:5804  from */\n  dup7\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/token/ERC20/ERC20.sol\":5790:5827  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5490:5852  {... */\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\ntag_36:\n    /* \"contracts/token/ERC20/ERC20.sol\":5880:5881  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5868  to */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6045:6050  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6029:6041  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6029:6050  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6249  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6250:6252  to */\n  dup5\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6240:6262  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\ntag_41:\n    /* \"contracts/token/ERC20/ERC20.sol\":6317:6319  to */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6311:6315  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/token/ERC20/ERC20.sol\":6321:6326  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_44:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_45:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_46:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_47:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_48:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_49:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_50:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_51:\n    /* \"#utility.yul\":957:984   */\n  tag_100\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_49\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_102\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1030:1118   */\ntag_101:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_52:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_104\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_105\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_53:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_108\n  tag_50\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1434:1490   */\ntag_107:\n    /* \"#utility.yul\":1508:1537   */\n  tag_109\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_49\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_54:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_55:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_112\n    /* \"#utility.yul\":1885:1934   */\n  tag_113\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_53\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1869:1935   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_115\n  tag_48\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2010:2122   */\ntag_114:\n    /* \"#utility.yul\":2131:2183   */\n  tag_116\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_54\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_56:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_119\n  tag_47\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2292:2414   */\ntag_118:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_120\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_55\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_57:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_58:\n    /* \"#utility.yul\":2726:2750   */\n  tag_123\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_57\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_124:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_59:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_126\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_58\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3016   */\ntag_60:\n    /* \"#utility.yul\":2965:2972   */\n  0x00\n    /* \"#utility.yul\":3005:3009   */\n  0xff\n    /* \"#utility.yul\":2998:3003   */\n  dup3\n    /* \"#utility.yul\":2994:3010   */\n  and\n    /* \"#utility.yul\":2983:3010   */\n  swap1\n  pop\n    /* \"#utility.yul\":2930:3016   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3022:3140   */\ntag_61:\n    /* \"#utility.yul\":3093:3115   */\n  tag_129\n    /* \"#utility.yul\":3109:3114   */\n  dup2\n    /* \"#utility.yul\":3093:3115   */\n  tag_60\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3086:3091   */\n  dup2\n    /* \"#utility.yul\":3083:3116   */\n  eq\n    /* \"#utility.yul\":3073:3134   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":3130:3131   */\n  0x00\n    /* \"#utility.yul\":3127:3128   */\n  dup1\n    /* \"#utility.yul\":3120:3132   */\n  revert\n    /* \"#utility.yul\":3073:3134   */\ntag_130:\n    /* \"#utility.yul\":3022:3140   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3146:3285   */\ntag_62:\n    /* \"#utility.yul\":3201:3206   */\n  0x00\n    /* \"#utility.yul\":3232:3238   */\n  dup2\n    /* \"#utility.yul\":3226:3239   */\n  mload\n    /* \"#utility.yul\":3217:3239   */\n  swap1\n  pop\n    /* \"#utility.yul\":3248:3279   */\n  tag_132\n    /* \"#utility.yul\":3273:3278   */\n  dup2\n    /* \"#utility.yul\":3248:3279   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3146:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:3417   */\ntag_63:\n    /* \"#utility.yul\":3328:3335   */\n  0x00\n    /* \"#utility.yul\":3368:3410   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3361:3366   */\n  dup3\n    /* \"#utility.yul\":3357:3411   */\n  and\n    /* \"#utility.yul\":3346:3411   */\n  swap1\n  pop\n    /* \"#utility.yul\":3291:3417   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3423:3519   */\ntag_64:\n    /* \"#utility.yul\":3460:3467   */\n  0x00\n    /* \"#utility.yul\":3489:3513   */\n  tag_135\n    /* \"#utility.yul\":3507:3512   */\n  dup3\n    /* \"#utility.yul\":3489:3513   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3478:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3423:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3647   */\ntag_65:\n    /* \"#utility.yul\":3598:3622   */\n  tag_137\n    /* \"#utility.yul\":3616:3621   */\n  dup2\n    /* \"#utility.yul\":3598:3622   */\n  tag_64\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3591:3596   */\n  dup2\n    /* \"#utility.yul\":3588:3623   */\n  eq\n    /* \"#utility.yul\":3578:3641   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":3637:3638   */\n  0x00\n    /* \"#utility.yul\":3634:3635   */\n  dup1\n    /* \"#utility.yul\":3627:3639   */\n  revert\n    /* \"#utility.yul\":3578:3641   */\ntag_138:\n    /* \"#utility.yul\":3525:3647   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3653:3796   */\ntag_66:\n    /* \"#utility.yul\":3710:3715   */\n  0x00\n    /* \"#utility.yul\":3741:3747   */\n  dup2\n    /* \"#utility.yul\":3735:3748   */\n  mload\n    /* \"#utility.yul\":3726:3748   */\n  swap1\n  pop\n    /* \"#utility.yul\":3757:3790   */\n  tag_140\n    /* \"#utility.yul\":3784:3789   */\n  dup2\n    /* \"#utility.yul\":3757:3790   */\n  tag_65\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3653:3796   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3802:5278   */\ntag_3:\n    /* \"#utility.yul\":3935:3941   */\n  0x00\n    /* \"#utility.yul\":3943:3949   */\n  dup1\n    /* \"#utility.yul\":3951:3957   */\n  0x00\n    /* \"#utility.yul\":3959:3965   */\n  dup1\n    /* \"#utility.yul\":3967:3973   */\n  0x00\n    /* \"#utility.yul\":3975:3981   */\n  dup1\n    /* \"#utility.yul\":4024:4027   */\n  0xc0\n    /* \"#utility.yul\":4012:4021   */\n  dup8\n    /* \"#utility.yul\":4003:4010   */\n  dup10\n    /* \"#utility.yul\":3999:4022   */\n  sub\n    /* \"#utility.yul\":3995:4028   */\n  slt\n    /* \"#utility.yul\":3992:4112   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4031:4110   */\n  tag_143\n  tag_45\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3992:4112   */\ntag_142:\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4161:4170   */\n  dup8\n    /* \"#utility.yul\":4157:4174   */\n  add\n    /* \"#utility.yul\":4151:4175   */\n  mload\n    /* \"#utility.yul\":4202:4220   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4194:4200   */\n  dup2\n    /* \"#utility.yul\":4191:4221   */\n  gt\n    /* \"#utility.yul\":4188:4305   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4224:4303   */\n  tag_145\n  tag_46\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":4188:4305   */\ntag_144:\n    /* \"#utility.yul\":4329:4403   */\n  tag_146\n    /* \"#utility.yul\":4395:4402   */\n  dup10\n    /* \"#utility.yul\":4386:4392   */\n  dup3\n    /* \"#utility.yul\":4375:4384   */\n  dup11\n    /* \"#utility.yul\":4371:4393   */\n  add\n    /* \"#utility.yul\":4329:4403   */\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4319:4403   */\n  swap7\n  pop\n    /* \"#utility.yul\":4122:4413   */\n  pop\n    /* \"#utility.yul\":4473:4475   */\n  0x20\n    /* \"#utility.yul\":4462:4471   */\n  dup8\n    /* \"#utility.yul\":4458:4476   */\n  add\n    /* \"#utility.yul\":4452:4477   */\n  mload\n    /* \"#utility.yul\":4504:4522   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4496:4502   */\n  dup2\n    /* \"#utility.yul\":4493:4523   */\n  gt\n    /* \"#utility.yul\":4490:4607   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":4526:4605   */\n  tag_148\n  tag_46\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4490:4607   */\ntag_147:\n    /* \"#utility.yul\":4631:4705   */\n  tag_149\n    /* \"#utility.yul\":4697:4704   */\n  dup10\n    /* \"#utility.yul\":4688:4694   */\n  dup3\n    /* \"#utility.yul\":4677:4686   */\n  dup11\n    /* \"#utility.yul\":4673:4695   */\n  add\n    /* \"#utility.yul\":4631:4705   */\n  tag_56\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4621:4705   */\n  swap6\n  pop\n    /* \"#utility.yul\":4423:4715   */\n  pop\n    /* \"#utility.yul\":4754:4756   */\n  0x40\n    /* \"#utility.yul\":4780:4844   */\n  tag_150\n    /* \"#utility.yul\":4836:4843   */\n  dup10\n    /* \"#utility.yul\":4827:4833   */\n  dup3\n    /* \"#utility.yul\":4816:4825   */\n  dup11\n    /* \"#utility.yul\":4812:4834   */\n  add\n    /* \"#utility.yul\":4780:4844   */\n  tag_59\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4770:4844   */\n  swap5\n  pop\n    /* \"#utility.yul\":4725:4854   */\n  pop\n    /* \"#utility.yul\":4893:4895   */\n  0x60\n    /* \"#utility.yul\":4919:4983   */\n  tag_151\n    /* \"#utility.yul\":4975:4982   */\n  dup10\n    /* \"#utility.yul\":4966:4972   */\n  dup3\n    /* \"#utility.yul\":4955:4964   */\n  dup11\n    /* \"#utility.yul\":4951:4973   */\n  add\n    /* \"#utility.yul\":4919:4983   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4909:4983   */\n  swap4\n  pop\n    /* \"#utility.yul\":4864:4993   */\n  pop\n    /* \"#utility.yul\":5032:5035   */\n  0x80\n    /* \"#utility.yul\":5059:5121   */\n  tag_152\n    /* \"#utility.yul\":5113:5120   */\n  dup10\n    /* \"#utility.yul\":5104:5110   */\n  dup3\n    /* \"#utility.yul\":5093:5102   */\n  dup11\n    /* \"#utility.yul\":5089:5111   */\n  add\n    /* \"#utility.yul\":5059:5121   */\n  tag_62\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5049:5121   */\n  swap3\n  pop\n    /* \"#utility.yul\":5003:5131   */\n  pop\n    /* \"#utility.yul\":5170:5173   */\n  0xa0\n    /* \"#utility.yul\":5197:5261   */\n  tag_153\n    /* \"#utility.yul\":5253:5260   */\n  dup10\n    /* \"#utility.yul\":5244:5250   */\n  dup3\n    /* \"#utility.yul\":5233:5242   */\n  dup11\n    /* \"#utility.yul\":5229:5251   */\n  add\n    /* \"#utility.yul\":5197:5261   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5187:5261   */\n  swap2\n  pop\n    /* \"#utility.yul\":5141:5271   */\n  pop\n    /* \"#utility.yul\":3802:5278   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":5284:5383   */\ntag_67:\n    /* \"#utility.yul\":5336:5342   */\n  0x00\n    /* \"#utility.yul\":5370:5375   */\n  dup2\n    /* \"#utility.yul\":5364:5376   */\n  mload\n    /* \"#utility.yul\":5354:5376   */\n  swap1\n  pop\n    /* \"#utility.yul\":5284:5383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5389:5569   */\ntag_68:\n    /* \"#utility.yul\":5437:5514   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5434:5435   */\n  0x00\n    /* \"#utility.yul\":5427:5515   */\n  mstore\n    /* \"#utility.yul\":5534:5538   */\n  0x22\n    /* \"#utility.yul\":5531:5532   */\n  0x04\n    /* \"#utility.yul\":5524:5539   */\n  mstore\n    /* \"#utility.yul\":5558:5562   */\n  0x24\n    /* \"#utility.yul\":5555:5556   */\n  0x00\n    /* \"#utility.yul\":5548:5563   */\n  revert\n    /* \"#utility.yul\":5575:5895   */\ntag_69:\n    /* \"#utility.yul\":5619:5625   */\n  0x00\n    /* \"#utility.yul\":5656:5657   */\n  0x02\n    /* \"#utility.yul\":5650:5654   */\n  dup3\n    /* \"#utility.yul\":5646:5658   */\n  div\n    /* \"#utility.yul\":5636:5658   */\n  swap1\n  pop\n    /* \"#utility.yul\":5703:5704   */\n  0x01\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5693:5705   */\n  and\n    /* \"#utility.yul\":5724:5742   */\n  dup1\n    /* \"#utility.yul\":5714:5795   */\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5780:5784   */\n  0x7f\n    /* \"#utility.yul\":5772:5778   */\n  dup3\n    /* \"#utility.yul\":5768:5785   */\n  and\n    /* \"#utility.yul\":5758:5785   */\n  swap2\n  pop\n    /* \"#utility.yul\":5714:5795   */\ntag_157:\n    /* \"#utility.yul\":5842:5844   */\n  0x20\n    /* \"#utility.yul\":5834:5840   */\n  dup3\n    /* \"#utility.yul\":5831:5845   */\n  lt\n    /* \"#utility.yul\":5811:5829   */\n  dup2\n    /* \"#utility.yul\":5808:5846   */\n  sub\n    /* \"#utility.yul\":5805:5889   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":5861:5879   */\n  tag_159\n  tag_68\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5805:5889   */\ntag_158:\n    /* \"#utility.yul\":5626:5895   */\n  pop\n    /* \"#utility.yul\":5575:5895   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5901:6042   */\ntag_70:\n    /* \"#utility.yul\":5950:5954   */\n  0x00\n    /* \"#utility.yul\":5973:5976   */\n  dup2\n    /* \"#utility.yul\":5965:5976   */\n  swap1\n  pop\n    /* \"#utility.yul\":5996:5999   */\n  dup2\n    /* \"#utility.yul\":5993:5994   */\n  0x00\n    /* \"#utility.yul\":5986:6000   */\n  mstore\n    /* \"#utility.yul\":6030:6034   */\n  0x20\n    /* \"#utility.yul\":6027:6028   */\n  0x00\n    /* \"#utility.yul\":6017:6035   */\n  keccak256\n    /* \"#utility.yul\":6009:6035   */\n  swap1\n  pop\n    /* \"#utility.yul\":5901:6042   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6048:6141   */\ntag_71:\n    /* \"#utility.yul\":6085:6091   */\n  0x00\n    /* \"#utility.yul\":6132:6134   */\n  0x20\n    /* \"#utility.yul\":6127:6129   */\n  0x1f\n    /* \"#utility.yul\":6120:6125   */\n  dup4\n    /* \"#utility.yul\":6116:6130   */\n  add\n    /* \"#utility.yul\":6112:6135   */\n  div\n    /* \"#utility.yul\":6102:6135   */\n  swap1\n  pop\n    /* \"#utility.yul\":6048:6141   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6147:6254   */\ntag_72:\n    /* \"#utility.yul\":6191:6199   */\n  0x00\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6235:6239   */\n  dup3\n    /* \"#utility.yul\":6231:6247   */\n  shl\n    /* \"#utility.yul\":6210:6247   */\n  swap1\n  pop\n    /* \"#utility.yul\":6147:6254   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6260:6653   */\ntag_73:\n    /* \"#utility.yul\":6329:6335   */\n  0x00\n    /* \"#utility.yul\":6379:6380   */\n  0x08\n    /* \"#utility.yul\":6367:6377   */\n  dup4\n    /* \"#utility.yul\":6363:6381   */\n  mul\n    /* \"#utility.yul\":6402:6499   */\n  tag_164\n    /* \"#utility.yul\":6432:6498   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6421:6430   */\n  dup3\n    /* \"#utility.yul\":6402:6499   */\n  tag_72\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6520:6559   */\n  tag_165\n    /* \"#utility.yul\":6550:6558   */\n  dup7\n    /* \"#utility.yul\":6539:6548   */\n  dup4\n    /* \"#utility.yul\":6520:6559   */\n  tag_72\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6508:6559   */\n  swap6\n  pop\n    /* \"#utility.yul\":6592:6596   */\n  dup1\n    /* \"#utility.yul\":6588:6597   */\n  not\n    /* \"#utility.yul\":6581:6586   */\n  dup5\n    /* \"#utility.yul\":6577:6598   */\n  and\n    /* \"#utility.yul\":6568:6598   */\n  swap4\n  pop\n    /* \"#utility.yul\":6641:6645   */\n  dup1\n    /* \"#utility.yul\":6631:6639   */\n  dup7\n    /* \"#utility.yul\":6627:6646   */\n  and\n    /* \"#utility.yul\":6620:6625   */\n  dup5\n    /* \"#utility.yul\":6617:6647   */\n  or\n    /* \"#utility.yul\":6607:6647   */\n  swap3\n  pop\n    /* \"#utility.yul\":6336:6653   */\n  pop\n  pop\n    /* \"#utility.yul\":6260:6653   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6659:6719   */\ntag_74:\n    /* \"#utility.yul\":6687:6690   */\n  0x00\n    /* \"#utility.yul\":6708:6713   */\n  dup2\n    /* \"#utility.yul\":6701:6713   */\n  swap1\n  pop\n    /* \"#utility.yul\":6659:6719   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6725:6867   */\ntag_75:\n    /* \"#utility.yul\":6775:6784   */\n  0x00\n    /* \"#utility.yul\":6808:6861   */\n  tag_168\n    /* \"#utility.yul\":6826:6860   */\n  tag_169\n    /* \"#utility.yul\":6835:6859   */\n  tag_170\n    /* \"#utility.yul\":6853:6858   */\n  dup5\n    /* \"#utility.yul\":6835:6859   */\n  tag_57\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6826:6860   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6808:6861   */\n  tag_57\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6795:6861   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6867   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6873:6948   */\ntag_76:\n    /* \"#utility.yul\":6916:6919   */\n  0x00\n    /* \"#utility.yul\":6937:6942   */\n  dup2\n    /* \"#utility.yul\":6930:6942   */\n  swap1\n  pop\n    /* \"#utility.yul\":6873:6948   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6954:7223   */\ntag_77:\n    /* \"#utility.yul\":7064:7103   */\n  tag_173\n    /* \"#utility.yul\":7095:7102   */\n  dup4\n    /* \"#utility.yul\":7064:7103   */\n  tag_75\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7125:7216   */\n  tag_174\n    /* \"#utility.yul\":7174:7215   */\n  tag_175\n    /* \"#utility.yul\":7198:7214   */\n  dup3\n    /* \"#utility.yul\":7174:7215   */\n  tag_76\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7166:7172   */\n  dup5\n    /* \"#utility.yul\":7159:7163   */\n  dup5\n    /* \"#utility.yul\":7153:7164   */\n  sload\n    /* \"#utility.yul\":7125:7216   */\n  tag_73\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7119:7123   */\n  dup3\n    /* \"#utility.yul\":7112:7217   */\n  sstore\n    /* \"#utility.yul\":7030:7223   */\n  pop\n    /* \"#utility.yul\":6954:7223   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7229:7302   */\ntag_78:\n    /* \"#utility.yul\":7274:7277   */\n  0x00\n    /* \"#utility.yul\":7229:7302   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7308:7497   */\ntag_79:\n    /* \"#utility.yul\":7385:7417   */\n  tag_178\n  tag_78\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7426:7491   */\n  tag_179\n    /* \"#utility.yul\":7484:7490   */\n  dup2\n    /* \"#utility.yul\":7476:7482   */\n  dup5\n    /* \"#utility.yul\":7470:7474   */\n  dup5\n    /* \"#utility.yul\":7426:7491   */\n  tag_77\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7361:7497   */\n  pop\n    /* \"#utility.yul\":7308:7497   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7503:7689   */\ntag_80:\n    /* \"#utility.yul\":7563:7683   */\ntag_181:\n    /* \"#utility.yul\":7580:7583   */\n  dup2\n    /* \"#utility.yul\":7573:7578   */\n  dup2\n    /* \"#utility.yul\":7570:7584   */\n  lt\n    /* \"#utility.yul\":7563:7683   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7634:7673   */\n  tag_184\n    /* \"#utility.yul\":7671:7672   */\n  0x00\n    /* \"#utility.yul\":7664:7669   */\n  dup3\n    /* \"#utility.yul\":7634:7673   */\n  tag_79\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7607:7608   */\n  0x01\n    /* \"#utility.yul\":7600:7605   */\n  dup2\n    /* \"#utility.yul\":7596:7609   */\n  add\n    /* \"#utility.yul\":7587:7609   */\n  swap1\n  pop\n    /* \"#utility.yul\":7563:7683   */\n  jump(tag_181)\ntag_183:\n    /* \"#utility.yul\":7503:7689   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7695:8238   */\ntag_81:\n    /* \"#utility.yul\":7796:7798   */\n  0x1f\n    /* \"#utility.yul\":7791:7794   */\n  dup3\n    /* \"#utility.yul\":7788:7799   */\n  gt\n    /* \"#utility.yul\":7785:8231   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7830:7868   */\n  tag_187\n    /* \"#utility.yul\":7862:7867   */\n  dup2\n    /* \"#utility.yul\":7830:7868   */\n  tag_70\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7914:7943   */\n  tag_188\n    /* \"#utility.yul\":7932:7942   */\n  dup5\n    /* \"#utility.yul\":7914:7943   */\n  tag_71\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7904:7912   */\n  dup2\n    /* \"#utility.yul\":7900:7944   */\n  add\n    /* \"#utility.yul\":8097:8099   */\n  0x20\n    /* \"#utility.yul\":8085:8095   */\n  dup6\n    /* \"#utility.yul\":8082:8100   */\n  lt\n    /* \"#utility.yul\":8079:8128   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8118:8126   */\n  dup2\n    /* \"#utility.yul\":8103:8126   */\n  swap1\n  pop\n    /* \"#utility.yul\":8079:8128   */\ntag_189:\n    /* \"#utility.yul\":8141:8221   */\n  tag_190\n    /* \"#utility.yul\":8197:8219   */\n  tag_191\n    /* \"#utility.yul\":8215:8218   */\n  dup6\n    /* \"#utility.yul\":8197:8219   */\n  tag_71\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8187:8195   */\n  dup4\n    /* \"#utility.yul\":8183:8220   */\n  add\n    /* \"#utility.yul\":8170:8181   */\n  dup3\n    /* \"#utility.yul\":8141:8221   */\n  tag_80\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7800:8231   */\n  pop\n  pop\n    /* \"#utility.yul\":7785:8231   */\ntag_186:\n    /* \"#utility.yul\":7695:8238   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8244:8361   */\ntag_82:\n    /* \"#utility.yul\":8298:8306   */\n  0x00\n    /* \"#utility.yul\":8348:8353   */\n  dup3\n    /* \"#utility.yul\":8342:8346   */\n  dup3\n    /* \"#utility.yul\":8338:8354   */\n  shr\n    /* \"#utility.yul\":8317:8354   */\n  swap1\n  pop\n    /* \"#utility.yul\":8244:8361   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8367:8536   */\ntag_83:\n    /* \"#utility.yul\":8411:8417   */\n  0x00\n    /* \"#utility.yul\":8444:8495   */\n  tag_194\n    /* \"#utility.yul\":8492:8493   */\n  0x00\n    /* \"#utility.yul\":8488:8494   */\n  not\n    /* \"#utility.yul\":8480:8485   */\n  dup5\n    /* \"#utility.yul\":8477:8478   */\n  0x08\n    /* \"#utility.yul\":8473:8486   */\n  mul\n    /* \"#utility.yul\":8444:8495   */\n  tag_82\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8440:8496   */\n  not\n    /* \"#utility.yul\":8525:8529   */\n  dup1\n    /* \"#utility.yul\":8519:8523   */\n  dup4\n    /* \"#utility.yul\":8515:8530   */\n  and\n    /* \"#utility.yul\":8505:8530   */\n  swap2\n  pop\n    /* \"#utility.yul\":8418:8536   */\n  pop\n    /* \"#utility.yul\":8367:8536   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8541:8836   */\ntag_84:\n    /* \"#utility.yul\":8617:8621   */\n  0x00\n    /* \"#utility.yul\":8763:8792   */\n  tag_196\n    /* \"#utility.yul\":8788:8791   */\n  dup4\n    /* \"#utility.yul\":8782:8786   */\n  dup4\n    /* \"#utility.yul\":8763:8792   */\n  tag_83\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8755:8792   */\n  swap2\n  pop\n    /* \"#utility.yul\":8825:8828   */\n  dup3\n    /* \"#utility.yul\":8822:8823   */\n  0x02\n    /* \"#utility.yul\":8818:8829   */\n  mul\n    /* \"#utility.yul\":8812:8816   */\n  dup3\n    /* \"#utility.yul\":8809:8830   */\n  or\n    /* \"#utility.yul\":8801:8830   */\n  swap1\n  pop\n    /* \"#utility.yul\":8541:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8841:10236   */\ntag_10:\n    /* \"#utility.yul\":8958:8995   */\n  tag_198\n    /* \"#utility.yul\":8991:8994   */\n  dup3\n    /* \"#utility.yul\":8958:8995   */\n  tag_67\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9060:9078   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":9052:9058   */\n  dup2\n    /* \"#utility.yul\":9049:9079   */\n  gt\n    /* \"#utility.yul\":9046:9102   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":9082:9100   */\n  tag_200\n  tag_50\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9046:9102   */\ntag_199:\n    /* \"#utility.yul\":9126:9164   */\n  tag_201\n    /* \"#utility.yul\":9158:9162   */\n  dup3\n    /* \"#utility.yul\":9152:9163   */\n  sload\n    /* \"#utility.yul\":9126:9164   */\n  tag_69\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9211:9278   */\n  tag_202\n    /* \"#utility.yul\":9271:9277   */\n  dup3\n    /* \"#utility.yul\":9263:9269   */\n  dup3\n    /* \"#utility.yul\":9257:9261   */\n  dup6\n    /* \"#utility.yul\":9211:9278   */\n  tag_81\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9305:9306   */\n  0x00\n    /* \"#utility.yul\":9329:9333   */\n  0x20\n    /* \"#utility.yul\":9316:9333   */\n  swap1\n  pop\n    /* \"#utility.yul\":9361:9363   */\n  0x1f\n    /* \"#utility.yul\":9353:9359   */\n  dup4\n    /* \"#utility.yul\":9350:9364   */\n  gt\n    /* \"#utility.yul\":9378:9379   */\n  0x01\n    /* \"#utility.yul\":9373:9991   */\n  dup2\n  eq\n  tag_204\n  jumpi\n    /* \"#utility.yul\":10035:10036   */\n  0x00\n    /* \"#utility.yul\":10052:10058   */\n  dup5\n    /* \"#utility.yul\":10049:10126   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10101:10110   */\n  dup3\n    /* \"#utility.yul\":10096:10099   */\n  dup8\n    /* \"#utility.yul\":10092:10111   */\n  add\n    /* \"#utility.yul\":10086:10112   */\n  mload\n    /* \"#utility.yul\":10077:10112   */\n  swap1\n  pop\n    /* \"#utility.yul\":10049:10126   */\ntag_205:\n    /* \"#utility.yul\":10152:10219   */\n  tag_206\n    /* \"#utility.yul\":10212:10218   */\n  dup6\n    /* \"#utility.yul\":10205:10210   */\n  dup3\n    /* \"#utility.yul\":10152:10219   */\n  tag_84\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10146:10150   */\n  dup7\n    /* \"#utility.yul\":10139:10220   */\n  sstore\n    /* \"#utility.yul\":10008:10230   */\n  pop\n    /* \"#utility.yul\":9343:10230   */\n  jump(tag_203)\n    /* \"#utility.yul\":9373:9991   */\ntag_204:\n    /* \"#utility.yul\":9425:9429   */\n  0x1f\n    /* \"#utility.yul\":9421:9430   */\n  not\n    /* \"#utility.yul\":9413:9419   */\n  dup5\n    /* \"#utility.yul\":9409:9431   */\n  and\n    /* \"#utility.yul\":9459:9496   */\n  tag_207\n    /* \"#utility.yul\":9491:9495   */\n  dup7\n    /* \"#utility.yul\":9459:9496   */\n  tag_70\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9518:9519   */\n  0x00\n    /* \"#utility.yul\":9532:9740   */\ntag_208:\n    /* \"#utility.yul\":9546:9553   */\n  dup3\n    /* \"#utility.yul\":9543:9544   */\n  dup2\n    /* \"#utility.yul\":9540:9554   */\n  lt\n    /* \"#utility.yul\":9532:9740   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":9625:9634   */\n  dup5\n    /* \"#utility.yul\":9620:9623   */\n  dup10\n    /* \"#utility.yul\":9616:9635   */\n  add\n    /* \"#utility.yul\":9610:9636   */\n  mload\n    /* \"#utility.yul\":9602:9608   */\n  dup3\n    /* \"#utility.yul\":9595:9637   */\n  sstore\n    /* \"#utility.yul\":9676:9677   */\n  0x01\n    /* \"#utility.yul\":9668:9674   */\n  dup3\n    /* \"#utility.yul\":9664:9678   */\n  add\n    /* \"#utility.yul\":9654:9678   */\n  swap2\n  pop\n    /* \"#utility.yul\":9723:9725   */\n  0x20\n    /* \"#utility.yul\":9712:9721   */\n  dup6\n    /* \"#utility.yul\":9708:9726   */\n  add\n    /* \"#utility.yul\":9695:9726   */\n  swap5\n  pop\n    /* \"#utility.yul\":9569:9573   */\n  0x20\n    /* \"#utility.yul\":9566:9567   */\n  dup2\n    /* \"#utility.yul\":9562:9574   */\n  add\n    /* \"#utility.yul\":9557:9574   */\n  swap1\n  pop\n    /* \"#utility.yul\":9532:9740   */\n  jump(tag_208)\ntag_210:\n    /* \"#utility.yul\":9768:9774   */\n  dup7\n    /* \"#utility.yul\":9759:9766   */\n  dup4\n    /* \"#utility.yul\":9756:9775   */\n  lt\n    /* \"#utility.yul\":9753:9932   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":9826:9835   */\n  dup5\n    /* \"#utility.yul\":9821:9824   */\n  dup10\n    /* \"#utility.yul\":9817:9836   */\n  add\n    /* \"#utility.yul\":9811:9837   */\n  mload\n    /* \"#utility.yul\":9869:9917   */\n  tag_212\n    /* \"#utility.yul\":9911:9915   */\n  0x1f\n    /* \"#utility.yul\":9903:9909   */\n  dup10\n    /* \"#utility.yul\":9899:9916   */\n  and\n    /* \"#utility.yul\":9888:9897   */\n  dup3\n    /* \"#utility.yul\":9869:9917   */\n  tag_83\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9861:9867   */\n  dup4\n    /* \"#utility.yul\":9854:9918   */\n  sstore\n    /* \"#utility.yul\":9776:9932   */\n  pop\n    /* \"#utility.yul\":9753:9932   */\ntag_211:\n    /* \"#utility.yul\":9978:9979   */\n  0x01\n    /* \"#utility.yul\":9974:9975   */\n  0x02\n    /* \"#utility.yul\":9966:9972   */\n  dup9\n    /* \"#utility.yul\":9962:9976   */\n  mul\n    /* \"#utility.yul\":9958:9980   */\n  add\n    /* \"#utility.yul\":9952:9956   */\n  dup9\n    /* \"#utility.yul\":9945:9981   */\n  sstore\n    /* \"#utility.yul\":9380:9991   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9343:10230   */\ntag_203:\n  pop\n    /* \"#utility.yul\":8933:10236   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8841:10236   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10242:10360   */\ntag_85:\n    /* \"#utility.yul\":10329:10353   */\n  tag_214\n    /* \"#utility.yul\":10347:10352   */\n  dup2\n    /* \"#utility.yul\":10329:10353   */\n  tag_64\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10324:10327   */\n  dup3\n    /* \"#utility.yul\":10317:10354   */\n  mstore\n    /* \"#utility.yul\":10242:10360   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10366:10588   */\ntag_15:\n    /* \"#utility.yul\":10459:10463   */\n  0x00\n    /* \"#utility.yul\":10497:10499   */\n  0x20\n    /* \"#utility.yul\":10486:10495   */\n  dup3\n    /* \"#utility.yul\":10482:10500   */\n  add\n    /* \"#utility.yul\":10474:10500   */\n  swap1\n  pop\n    /* \"#utility.yul\":10510:10581   */\n  tag_216\n    /* \"#utility.yul\":10578:10579   */\n  0x00\n    /* \"#utility.yul\":10567:10576   */\n  dup4\n    /* \"#utility.yul\":10563:10580   */\n  add\n    /* \"#utility.yul\":10554:10560   */\n  dup5\n    /* \"#utility.yul\":10510:10581   */\n  tag_85\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10366:10588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10594:10763   */\ntag_86:\n    /* \"#utility.yul\":10678:10689   */\n  0x00\n    /* \"#utility.yul\":10712:10718   */\n  dup3\n    /* \"#utility.yul\":10707:10710   */\n  dup3\n    /* \"#utility.yul\":10700:10719   */\n  mstore\n    /* \"#utility.yul\":10752:10756   */\n  0x20\n    /* \"#utility.yul\":10747:10750   */\n  dup3\n    /* \"#utility.yul\":10743:10757   */\n  add\n    /* \"#utility.yul\":10728:10757   */\n  swap1\n  pop\n    /* \"#utility.yul\":10594:10763   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10769:11002   */\ntag_87:\n    /* \"#utility.yul\":10909:10943   */\n  0x496e697469616c20737570706c792063616e6e6f74206265206d6f7265207468\n    /* \"#utility.yul\":10905:10906   */\n  0x00\n    /* \"#utility.yul\":10897:10903   */\n  dup3\n    /* \"#utility.yul\":10893:10907   */\n  add\n    /* \"#utility.yul\":10886:10944   */\n  mstore\n    /* \"#utility.yul\":10978:10994   */\n  0x616e206d617820737570706c792e000000000000000000000000000000000000\n    /* \"#utility.yul\":10973:10975   */\n  0x20\n    /* \"#utility.yul\":10965:10971   */\n  dup3\n    /* \"#utility.yul\":10961:10976   */\n  add\n    /* \"#utility.yul\":10954:10995   */\n  mstore\n    /* \"#utility.yul\":10769:11002   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11008:11374   */\ntag_88:\n    /* \"#utility.yul\":11150:11153   */\n  0x00\n    /* \"#utility.yul\":11171:11238   */\n  tag_220\n    /* \"#utility.yul\":11235:11237   */\n  0x2e\n    /* \"#utility.yul\":11230:11233   */\n  dup4\n    /* \"#utility.yul\":11171:11238   */\n  tag_86\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11164:11238   */\n  swap2\n  pop\n    /* \"#utility.yul\":11247:11340   */\n  tag_221\n    /* \"#utility.yul\":11336:11339   */\n  dup3\n    /* \"#utility.yul\":11247:11340   */\n  tag_87\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11365:11367   */\n  0x40\n    /* \"#utility.yul\":11360:11363   */\n  dup3\n    /* \"#utility.yul\":11356:11368   */\n  add\n    /* \"#utility.yul\":11349:11368   */\n  swap1\n  pop\n    /* \"#utility.yul\":11008:11374   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11380:11799   */\ntag_22:\n    /* \"#utility.yul\":11546:11550   */\n  0x00\n    /* \"#utility.yul\":11584:11586   */\n  0x20\n    /* \"#utility.yul\":11573:11582   */\n  dup3\n    /* \"#utility.yul\":11569:11587   */\n  add\n    /* \"#utility.yul\":11561:11587   */\n  swap1\n  pop\n    /* \"#utility.yul\":11633:11642   */\n  dup2\n    /* \"#utility.yul\":11627:11631   */\n  dup2\n    /* \"#utility.yul\":11623:11643   */\n  sub\n    /* \"#utility.yul\":11619:11620   */\n  0x00\n    /* \"#utility.yul\":11608:11617   */\n  dup4\n    /* \"#utility.yul\":11604:11621   */\n  add\n    /* \"#utility.yul\":11597:11644   */\n  mstore\n    /* \"#utility.yul\":11661:11792   */\n  tag_223\n    /* \"#utility.yul\":11787:11791   */\n  dup2\n    /* \"#utility.yul\":11661:11792   */\n  tag_88\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11653:11792   */\n  swap1\n  pop\n    /* \"#utility.yul\":11380:11799   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11805:11985   */\ntag_89:\n    /* \"#utility.yul\":11853:11930   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11850:11851   */\n  0x00\n    /* \"#utility.yul\":11843:11931   */\n  mstore\n    /* \"#utility.yul\":11950:11954   */\n  0x11\n    /* \"#utility.yul\":11947:11948   */\n  0x04\n    /* \"#utility.yul\":11940:11955   */\n  mstore\n    /* \"#utility.yul\":11974:11978   */\n  0x24\n    /* \"#utility.yul\":11971:11972   */\n  0x00\n    /* \"#utility.yul\":11964:11979   */\n  revert\n    /* \"#utility.yul\":11991:12182   */\ntag_35:\n    /* \"#utility.yul\":12031:12034   */\n  0x00\n    /* \"#utility.yul\":12050:12070   */\n  tag_226\n    /* \"#utility.yul\":12068:12069   */\n  dup3\n    /* \"#utility.yul\":12050:12070   */\n  tag_57\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":12045:12070   */\n  swap2\n  pop\n    /* \"#utility.yul\":12084:12104   */\n  tag_227\n    /* \"#utility.yul\":12102:12103   */\n  dup4\n    /* \"#utility.yul\":12084:12104   */\n  tag_57\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":12079:12104   */\n  swap3\n  pop\n    /* \"#utility.yul\":12127:12128   */\n  dup3\n    /* \"#utility.yul\":12124:12125   */\n  dup3\n    /* \"#utility.yul\":12120:12129   */\n  add\n    /* \"#utility.yul\":12113:12129   */\n  swap1\n  pop\n    /* \"#utility.yul\":12148:12151   */\n  dup1\n    /* \"#utility.yul\":12145:12146   */\n  dup3\n    /* \"#utility.yul\":12142:12152   */\n  gt\n    /* \"#utility.yul\":12139:12175   */\n  iszero\n  tag_228\n  jumpi\n    /* \"#utility.yul\":12155:12173   */\n  tag_229\n  tag_89\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":12139:12175   */\ntag_228:\n    /* \"#utility.yul\":11991:12182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12188:12306   */\ntag_90:\n    /* \"#utility.yul\":12275:12299   */\n  tag_231\n    /* \"#utility.yul\":12293:12298   */\n  dup2\n    /* \"#utility.yul\":12275:12299   */\n  tag_57\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":12270:12273   */\n  dup3\n    /* \"#utility.yul\":12263:12300   */\n  mstore\n    /* \"#utility.yul\":12188:12306   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12312:12754   */\ntag_39:\n    /* \"#utility.yul\":12461:12465   */\n  0x00\n    /* \"#utility.yul\":12499:12501   */\n  0x60\n    /* \"#utility.yul\":12488:12497   */\n  dup3\n    /* \"#utility.yul\":12484:12502   */\n  add\n    /* \"#utility.yul\":12476:12502   */\n  swap1\n  pop\n    /* \"#utility.yul\":12512:12583   */\n  tag_233\n    /* \"#utility.yul\":12580:12581   */\n  0x00\n    /* \"#utility.yul\":12569:12578   */\n  dup4\n    /* \"#utility.yul\":12565:12582   */\n  add\n    /* \"#utility.yul\":12556:12562   */\n  dup7\n    /* \"#utility.yul\":12512:12583   */\n  tag_85\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12593:12665   */\n  tag_234\n    /* \"#utility.yul\":12661:12663   */\n  0x20\n    /* \"#utility.yul\":12650:12659   */\n  dup4\n    /* \"#utility.yul\":12646:12664   */\n  add\n    /* \"#utility.yul\":12637:12643   */\n  dup6\n    /* \"#utility.yul\":12593:12665   */\n  tag_90\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12675:12747   */\n  tag_235\n    /* \"#utility.yul\":12743:12745   */\n  0x40\n    /* \"#utility.yul\":12732:12741   */\n  dup4\n    /* \"#utility.yul\":12728:12746   */\n  add\n    /* \"#utility.yul\":12719:12725   */\n  dup5\n    /* \"#utility.yul\":12675:12747   */\n  tag_90\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":12312:12754   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12760:12982   */\ntag_43:\n    /* \"#utility.yul\":12853:12857   */\n  0x00\n    /* \"#utility.yul\":12891:12893   */\n  0x20\n    /* \"#utility.yul\":12880:12889   */\n  dup3\n    /* \"#utility.yul\":12876:12894   */\n  add\n    /* \"#utility.yul\":12868:12894   */\n  swap1\n  pop\n    /* \"#utility.yul\":12904:12975   */\n  tag_237\n    /* \"#utility.yul\":12972:12973   */\n  0x00\n    /* \"#utility.yul\":12961:12970   */\n  dup4\n    /* \"#utility.yul\":12957:12974   */\n  add\n    /* \"#utility.yul\":12948:12954   */\n  dup5\n    /* \"#utility.yul\":12904:12975   */\n  tag_90\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12760:12982   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"GenericLayout.sol\":301:4406  contract GenericLayout is ERC20, ERC20Burnable, /*Pausable*/ Ownable, ReentrancyGuard {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GenericLayout.sol\":301:4406  contract GenericLayout is ERC20, ERC20Burnable, /*Pausable*/ Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xafe8289a\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xafe8289a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc8052107\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa64254c3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x23b872dd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52756986\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x21208fa2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2254b79c\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GenericLayout.sol\":1640:1739  function disableCircuitBreaker() public onlyOwner {... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"GenericLayout.sol\":4020:4401  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GenericLayout.sol\":1089:1194  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"GenericLayout.sol\":2386:2613  function addLiquidity(uint256 amount) public {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"GenericLayout.sol\":432:459  uint8 public decimalsPlaces */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GenericLayout.sol\":1537:1634  function enableCircuitBreaker() public onlyOwner {... */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GenericLayout.sol\":3792:4012  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"GenericLayout.sol\":2621:3439  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"GenericLayout.sol\":394:418  uint256 public maxSupply */\n    tag_22:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GenericLayout.sol\":3447:3784  function calculateReward(address user) public view returns (uint256) {... */\n    tag_23:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"contracts/token/ERC20/ERC20.sol\":1067:1080  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1099:1104  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":1092:1104  return _name */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_113\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1022:1111  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"contracts/token/ERC20/ERC20.sol\":3314:3318  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3330:3343  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3358  _msgSender() */\n      tag_119\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3356  _msgSender */\n      tag_120\n        /* \"contracts/token/ERC20/ERC20.sol\":3346:3358  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/token/ERC20/ERC20.sol\":3330:3358  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3399  _approve(owner, spender, value) */\n      tag_121\n        /* \"contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3384:3391  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3393:3398  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3376  _approve */\n      tag_122\n        /* \"contracts/token/ERC20/ERC20.sol\":3368:3399  _approve(owner, spender, value) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/token/ERC20/ERC20.sol\":3416:3420  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3409:3420  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3241:3427  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"contracts/token/ERC20/ERC20.sol\":2144:2151  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2170:2182  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":2163:2182  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2092:2189  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"GenericLayout.sol\":1640:1739  function disableCircuitBreaker() public onlyOwner {... */\n    tag_44:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"GenericLayout.sol\":1726:1731  false */\n      0x00\n        /* \"GenericLayout.sol\":1701:1723  _circuitBreakerEnabled */\n      0x0b\n      0x00\n        /* \"GenericLayout.sol\":1701:1731  _circuitBreakerEnabled = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":1640:1739  function disableCircuitBreaker() public onlyOwner {... */\n      jump\t// out\n        /* \"GenericLayout.sol\":4020:4401  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_48:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_129\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_131\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_132\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_131:\n        /* \"GenericLayout.sol\":4125:4143  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":4125:4152  _liquidityProvided[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":4144:4151  owner() */\n      tag_134\n        /* \"GenericLayout.sol\":4144:4149  owner */\n      tag_78\n        /* \"GenericLayout.sol\":4144:4151  owner() */\n      jump\t// in\n    tag_134:\n        /* \"GenericLayout.sol\":4125:4152  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":4115:4121  amount */\n      dup2\n        /* \"GenericLayout.sol\":4115:4152  amount <= _liquidityProvided[owner()] */\n      gt\n      iszero\n        /* \"GenericLayout.sol\":4107:4177  require(amount <= _liquidityProvided[owner()], \"Insufficient balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"GenericLayout.sol\":4219:4225  amount */\n      dup1\n        /* \"GenericLayout.sol\":4188:4206  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":4188:4215  _liquidityProvided[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":4207:4214  owner() */\n      tag_138\n        /* \"GenericLayout.sol\":4207:4212  owner */\n      tag_78\n        /* \"GenericLayout.sol\":4207:4214  owner() */\n      jump\t// in\n    tag_138:\n        /* \"GenericLayout.sol\":4188:4215  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GenericLayout.sol\":4188:4225  _liquidityProvided[owner()] -= amount */\n      dup3\n      dup3\n      sload\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":4271:4272  0 */\n      0x00\n        /* \"GenericLayout.sol\":4240:4258  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":4240:4267  _liquidityProvided[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":4259:4266  owner() */\n      tag_141\n        /* \"GenericLayout.sol\":4259:4264  owner */\n      tag_78\n        /* \"GenericLayout.sol\":4259:4266  owner() */\n      jump\t// in\n    tag_141:\n        /* \"GenericLayout.sol\":4240:4267  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":4240:4272  _liquidityProvided[owner()] == 0 */\n      sub\n        /* \"GenericLayout.sol\":4236:4341  if (_liquidityProvided[owner()] == 0) {... */\n      tag_142\n      jumpi\n        /* \"GenericLayout.sol\":4328:4329  0 */\n      0x00\n        /* \"GenericLayout.sol\":4289:4316  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":4289:4325  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":4317:4324  owner() */\n      tag_143\n        /* \"GenericLayout.sol\":4317:4322  owner */\n      tag_78\n        /* \"GenericLayout.sol\":4317:4324  owner() */\n      jump\t// in\n    tag_143:\n        /* \"GenericLayout.sol\":4289:4325  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GenericLayout.sol\":4289:4329  _liquidityProvidedTimestamp[owner()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":4236:4341  if (_liquidityProvided[owner()] == 0) {... */\n    tag_142:\n        /* \"GenericLayout.sol\":4351:4392  _transfer(address(this), owner(), amount) */\n      tag_144\n        /* \"GenericLayout.sol\":4369:4373  this */\n      address\n        /* \"GenericLayout.sol\":4376:4383  owner() */\n      tag_145\n        /* \"GenericLayout.sol\":4376:4381  owner */\n      tag_78\n        /* \"GenericLayout.sol\":4376:4383  owner() */\n      jump\t// in\n    tag_145:\n        /* \"GenericLayout.sol\":4385:4391  amount */\n      dup4\n        /* \"GenericLayout.sol\":4351:4360  _transfer */\n      tag_146\n        /* \"GenericLayout.sol\":4351:4392  _transfer(address(this), owner(), amount) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_147\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_148\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_147:\n        /* \"GenericLayout.sol\":4020:4401  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/token/ERC20/ERC20.sol\":4074:4078  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4090:4105  address spender */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4120  _msgSender() */\n      tag_150\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4118  _msgSender */\n      tag_120\n        /* \"contracts/token/ERC20/ERC20.sol\":4108:4120  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/token/ERC20/ERC20.sol\":4090:4120  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4167  _spendAllowance(from, spender, value) */\n      tag_151\n        /* \"contracts/token/ERC20/ERC20.sol\":4146:4150  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4152:4159  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4161:4166  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4145  _spendAllowance */\n      tag_152\n        /* \"contracts/token/ERC20/ERC20.sol\":4130:4167  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4203  _transfer(from, to, value) */\n      tag_153\n        /* \"contracts/token/ERC20/ERC20.sol\":4187:4191  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4193:4195  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4197:4202  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4186  _transfer */\n      tag_146\n        /* \"contracts/token/ERC20/ERC20.sol\":4177:4203  _transfer(from, to, value) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/token/ERC20/ERC20.sol\":4220:4224  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":4213:4224  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3987:4231  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":1089:1194  function decimals() public view virtual override returns (uint8) {... */\n    tag_55:\n        /* \"GenericLayout.sol\":1147:1152  uint8 */\n      0x00\n        /* \"GenericLayout.sol\":1172:1186  decimalsPlaces */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GenericLayout.sol\":1165:1186  return decimalsPlaces */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":1089:1194  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_60:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_156\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_157\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_120\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_158\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":2386:2613  function addLiquidity(uint256 amount) public {... */\n    tag_63:\n        /* \"GenericLayout.sol\":2442:2486  _transfer(msg.sender, address(this), amount) */\n      tag_160\n        /* \"GenericLayout.sol\":2452:2462  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2472:2476  this */\n      address\n        /* \"GenericLayout.sol\":2479:2485  amount */\n      dup4\n        /* \"GenericLayout.sol\":2442:2451  _transfer */\n      tag_146\n        /* \"GenericLayout.sol\":2442:2486  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_160:\n        /* \"GenericLayout.sol\":2531:2537  amount */\n      dup1\n        /* \"GenericLayout.sol\":2497:2515  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":2497:2527  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":2516:2526  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2497:2527  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GenericLayout.sol\":2497:2537  _liquidityProvided[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":2590:2605  block.timestamp */\n      timestamp\n        /* \"GenericLayout.sol\":2548:2575  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":2548:2587  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":2576:2586  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2548:2587  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GenericLayout.sol\":2548:2605  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":2386:2613  function addLiquidity(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":432:459  uint8 public decimalsPlaces */\n    tag_65:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"contracts/token/ERC20/ERC20.sol\":2312:2319  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2347  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2356  _balances[account] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2348:2355  account */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":2338:2356  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":2331:2356  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2247:2363  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_167\n        /* \"contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_168\n        /* \"contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_76:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_170\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_171\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_120\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_152\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_172\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_158\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"contracts/token/ERC20/ERC20.sol\":1271:1284  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1303:1310  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":1296:1310  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_113\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_113\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1224:1317  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GenericLayout.sol\":1537:1634  function enableCircuitBreaker() public onlyOwner {... */\n    tag_85:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"GenericLayout.sol\":1622:1626  true */\n      0x01\n        /* \"GenericLayout.sol\":1597:1619  _circuitBreakerEnabled */\n      0x0b\n      0x00\n        /* \"GenericLayout.sol\":1597:1626  _circuitBreakerEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":1537:1634  function enableCircuitBreaker() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"contracts/token/ERC20/ERC20.sol\":2627:2631  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2643:2656  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2671  _msgSender() */\n      tag_184\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2669  _msgSender */\n      tag_120\n        /* \"contracts/token/ERC20/ERC20.sol\":2659:2671  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/token/ERC20/ERC20.sol\":2643:2671  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2708  _transfer(owner, to, value) */\n      tag_185\n        /* \"contracts/token/ERC20/ERC20.sol\":2691:2696  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":2698:2700  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2702:2707  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2690  _transfer */\n      tag_146\n        /* \"contracts/token/ERC20/ERC20.sol\":2681:2708  _transfer(owner, to, value) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/token/ERC20/ERC20.sol\":2725:2729  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2718:2729  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2558:2736  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":3792:4012  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_92:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"GenericLayout.sol\":3894:3900  amount */\n      dup1\n        /* \"GenericLayout.sol\":3863:3881  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":3863:3890  _liquidityProvided[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":3882:3889  owner() */\n      tag_189\n        /* \"GenericLayout.sol\":3882:3887  owner */\n      tag_78\n        /* \"GenericLayout.sol\":3882:3889  owner() */\n      jump\t// in\n    tag_189:\n        /* \"GenericLayout.sol\":3863:3890  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GenericLayout.sol\":3863:3900  _liquidityProvided[owner()] += amount */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":3950:3965  block.timestamp */\n      timestamp\n        /* \"GenericLayout.sol\":3911:3938  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":3911:3947  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"GenericLayout.sol\":3939:3946  owner() */\n      tag_191\n        /* \"GenericLayout.sol\":3939:3944  owner */\n      tag_78\n        /* \"GenericLayout.sol\":3939:3946  owner() */\n      jump\t// in\n    tag_191:\n        /* \"GenericLayout.sol\":3911:3947  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GenericLayout.sol\":3911:3965  _liquidityProvidedTimestamp[owner()] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":3976:4004  _mint(address(this), amount) */\n      tag_192\n        /* \"GenericLayout.sol\":3990:3994  this */\n      address\n        /* \"GenericLayout.sol\":3997:4003  amount */\n      dup3\n        /* \"GenericLayout.sol\":3976:3981  _mint */\n      tag_193\n        /* \"GenericLayout.sol\":3976:4004  _mint(address(this), amount) */\n      jump\t// in\n    tag_192:\n        /* \"GenericLayout.sol\":3792:4012  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":2621:3439  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_95:\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_195\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_132\n        /* \"contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_195:\n        /* \"GenericLayout.sol\":2726:2744  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":2726:2756  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":2745:2755  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2726:2756  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":2716:2722  amount */\n      dup2\n        /* \"GenericLayout.sol\":2716:2756  amount <= _liquidityProvided[msg.sender] */\n      gt\n      iszero\n        /* \"GenericLayout.sol\":2708:2781  require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_137\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"GenericLayout.sol\":2861:2868  30 days */\n      0x278d00\n        /* \"GenericLayout.sol\":2819:2846  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":2819:2858  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":2847:2857  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2819:2858  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":2819:2868  _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      tag_199\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_199:\n        /* \"GenericLayout.sol\":2800:2815  block.timestamp */\n      timestamp\n        /* \"GenericLayout.sol\":2800:2868  block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      lt\n      iszero\n        /* \"GenericLayout.sol\":2792:2943  require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"GenericLayout.sol\":2956:2970  uint256 reward */\n      0x00\n        /* \"GenericLayout.sol\":2973:3000  calculateReward(msg.sender) */\n      tag_203\n        /* \"GenericLayout.sol\":2989:2999  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":2973:2988  calculateReward */\n      tag_101\n        /* \"GenericLayout.sol\":2973:3000  calculateReward(msg.sender) */\n      jump\t// in\n    tag_203:\n        /* \"GenericLayout.sol\":2956:3000  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":3045:3054  maxSupply */\n      sload(0x07)\n        /* \"GenericLayout.sol\":3035:3041  reward */\n      dup2\n        /* \"GenericLayout.sol\":3019:3032  totalSupply() */\n      tag_204\n        /* \"GenericLayout.sol\":3019:3030  totalSupply */\n      tag_40\n        /* \"GenericLayout.sol\":3019:3032  totalSupply() */\n      jump\t// in\n    tag_204:\n        /* \"GenericLayout.sol\":3019:3041  totalSupply() + reward */\n      tag_205\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_205:\n        /* \"GenericLayout.sol\":3019:3054  totalSupply() + reward <= maxSupply */\n      gt\n      iszero\n        /* \"GenericLayout.sol\":3011:3084  require(totalSupply() + reward <= maxSupply, \"Reward exceeds max supply\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"GenericLayout.sol\":3093:3118  _mint(msg.sender, reward) */\n      tag_209\n        /* \"GenericLayout.sol\":3099:3109  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3111:3117  reward */\n      dup3\n        /* \"GenericLayout.sol\":3093:3098  _mint */\n      tag_193\n        /* \"GenericLayout.sol\":3093:3118  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_209:\n        /* \"GenericLayout.sol\":3126:3170  _transfer(address(this), msg.sender, amount) */\n      tag_210\n        /* \"GenericLayout.sol\":3144:3148  this */\n      address\n        /* \"GenericLayout.sol\":3151:3161  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3163:3169  amount */\n      dup5\n        /* \"GenericLayout.sol\":3126:3135  _transfer */\n      tag_146\n        /* \"GenericLayout.sol\":3126:3170  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_210:\n        /* \"GenericLayout.sol\":3212:3218  amount */\n      dup2\n        /* \"GenericLayout.sol\":3178:3196  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":3178:3208  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":3197:3207  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3178:3208  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GenericLayout.sol\":3178:3218  _liquidityProvided[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":3267:3268  0 */\n      0x00\n        /* \"GenericLayout.sol\":3233:3251  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":3233:3263  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":3252:3262  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3233:3263  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":3233:3268  _liquidityProvided[msg.sender] == 0 */\n      sub\n        /* \"GenericLayout.sol\":3229:3432  if (_liquidityProvided[msg.sender] == 0) {... */\n      tag_212\n      jumpi\n        /* \"GenericLayout.sol\":3327:3328  0 */\n      0x00\n        /* \"GenericLayout.sol\":3285:3312  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":3285:3324  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":3313:3323  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3285:3324  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GenericLayout.sol\":3285:3328  _liquidityProvidedTimestamp[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":3229:3432  if (_liquidityProvided[msg.sender] == 0) {... */\n      jump(tag_213)\n    tag_212:\n        /* \"GenericLayout.sol\":3404:3419  block.timestamp */\n      timestamp\n        /* \"GenericLayout.sol\":3362:3389  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":3362:3401  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"GenericLayout.sol\":3390:3400  msg.sender */\n      caller\n        /* \"GenericLayout.sol\":3362:3401  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GenericLayout.sol\":3362:3419  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GenericLayout.sol\":3229:3432  if (_liquidityProvided[msg.sender] == 0) {... */\n    tag_213:\n        /* \"GenericLayout.sol\":2697:3439  {... */\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_214\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_148\n        /* \"contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_214:\n        /* \"GenericLayout.sol\":2621:3439  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"GenericLayout.sol\":394:418  uint256 public maxSupply */\n    tag_97:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"GenericLayout.sol\":3447:3784  function calculateReward(address user) public view returns (uint256) {... */\n    tag_101:\n        /* \"GenericLayout.sol\":3507:3514  uint256 */\n      0x00\n        /* \"GenericLayout.sol\":3582:3589  30 days */\n      0x278d00\n        /* \"GenericLayout.sol\":3546:3573  _liquidityProvidedTimestamp */\n      0x0a\n        /* \"GenericLayout.sol\":3546:3579  _liquidityProvidedTimestamp[user] */\n      0x00\n        /* \"GenericLayout.sol\":3574:3578  user */\n      dup5\n        /* \"GenericLayout.sol\":3546:3579  _liquidityProvidedTimestamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":3546:3589  _liquidityProvidedTimestamp[user] + 30 days */\n      tag_216\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_216:\n        /* \"GenericLayout.sol\":3527:3542  block.timestamp */\n      timestamp\n        /* \"GenericLayout.sol\":3527:3589  block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days */\n      lt\n        /* \"GenericLayout.sol\":3523:3762  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n      tag_217\n      jumpi\n        /* \"GenericLayout.sol\":3602:3616  uint256 reward */\n      0x00\n        /* \"GenericLayout.sol\":3652:3655  100 */\n      0x64\n        /* \"GenericLayout.sol\":3647:3648  5 */\n      0x05\n        /* \"GenericLayout.sol\":3620:3638  _liquidityProvided */\n      0x09\n        /* \"GenericLayout.sol\":3620:3644  _liquidityProvided[user] */\n      0x00\n        /* \"GenericLayout.sol\":3639:3643  user */\n      dup7\n        /* \"GenericLayout.sol\":3620:3644  _liquidityProvided[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GenericLayout.sol\":3620:3648  _liquidityProvided[user] * 5 */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"GenericLayout.sol\":3619:3655  (_liquidityProvided[user] * 5) / 100 */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"GenericLayout.sol\":3602:3655  uint256 reward = (_liquidityProvided[user] * 5) / 100 */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":3704:3713  maxSupply */\n      sload(0x07)\n        /* \"GenericLayout.sol\":3694:3700  reward */\n      dup2\n        /* \"GenericLayout.sol\":3678:3691  totalSupply() */\n      tag_222\n        /* \"GenericLayout.sol\":3678:3689  totalSupply */\n      tag_40\n        /* \"GenericLayout.sol\":3678:3691  totalSupply() */\n      jump\t// in\n    tag_222:\n        /* \"GenericLayout.sol\":3678:3700  totalSupply() + reward */\n      tag_223\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_223:\n        /* \"GenericLayout.sol\":3678:3713  totalSupply() + reward <= maxSupply */\n      gt\n        /* \"GenericLayout.sol\":3674:3755  if (totalSupply() + reward <= maxSupply) {... */\n      tag_224\n      jumpi\n        /* \"GenericLayout.sol\":3737:3743  reward */\n      dup1\n        /* \"GenericLayout.sol\":3730:3743  return reward */\n      swap2\n      pop\n      pop\n      jump(tag_215)\n        /* \"GenericLayout.sol\":3674:3755  if (totalSupply() + reward <= maxSupply) {... */\n    tag_224:\n        /* \"GenericLayout.sol\":3591:3762  {... */\n      pop\n        /* \"GenericLayout.sol\":3523:3762  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n    tag_217:\n        /* \"GenericLayout.sol\":3775:3776  0 */\n      0x00\n        /* \"GenericLayout.sol\":3768:3776  return 0 */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":3447:3784  function calculateReward(address user) public view returns (uint256) {... */\n    tag_215:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"contracts/token/ERC20/ERC20.sol\":2874:2881  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2911  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2918  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2912:2917  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2918  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2927  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2919:2926  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":2900:2927  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":2893:2927  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2794:2934  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_227\n        /* \"contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_126\n        /* \"contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_229:\n        /* \"contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_231\n        /* \"contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_168\n        /* \"contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":8090:8218  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_122:\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8211  _approve(owner, spender, value, true) */\n      tag_234\n        /* \"contracts/token/ERC20/ERC20.sol\":8183:8188  owner */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8190:8197  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8199:8204  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8206:8210  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8182  _approve */\n      tag_235\n        /* \"contracts/token/ERC20/ERC20.sol\":8174:8211  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/token/ERC20/ERC20.sol\":8090:8218  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_126:\n        /* \"contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_237\n        /* \"contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_238\n        /* \"contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_78\n        /* \"contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_239\n      jumpi\n        /* \"contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_240\n        /* \"contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_120\n        /* \"contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_239:\n        /* \"contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_132:\n        /* \"contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"GenericLayout.sol\":1747:2135  function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {... */\n    tag_146:\n        /* \"GenericLayout.sol\":1459:1481  _circuitBreakerEnabled */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GenericLayout.sol\":1458:1481  !_circuitBreakerEnabled */\n      iszero\n        /* \"GenericLayout.sol\":1450:1511  require(!_circuitBreakerEnabled, \"Circuit breaker is active\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"GenericLayout.sol\":1870:1888  uint256 burnAmount */\n      0x00\n        /* \"GenericLayout.sol\":1900:1906  100000 */\n      0x0186a0\n        /* \"GenericLayout.sol\":1891:1897  amount */\n      dup3\n        /* \"GenericLayout.sol\":1891:1906  amount / 100000 */\n      tag_251\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_251:\n        /* \"GenericLayout.sol\":1870:1906  uint256 burnAmount = amount / 100000 */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":1917:1935  uint256 sendAmount */\n      0x00\n        /* \"GenericLayout.sol\":1947:1957  burnAmount */\n      dup2\n        /* \"GenericLayout.sol\":1938:1944  amount */\n      dup4\n        /* \"GenericLayout.sol\":1938:1957  amount - burnAmount */\n      tag_252\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_252:\n        /* \"GenericLayout.sol\":1917:1957  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"GenericLayout.sol\":1999:2009  burnAmount */\n      dup2\n        /* \"GenericLayout.sol\":1986:1996  sendAmount */\n      dup2\n        /* \"GenericLayout.sol\":1986:2009  sendAmount + burnAmount */\n      tag_253\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_253:\n        /* \"GenericLayout.sol\":1976:1982  amount */\n      dup4\n        /* \"GenericLayout.sol\":1976:2009  amount == sendAmount + burnAmount */\n      eq\n        /* \"GenericLayout.sol\":1968:2032  require(amount == sendAmount + burnAmount, \"Burn value invalid\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"GenericLayout.sol\":2045:2091  super._transfer(sender, recipient, sendAmount) */\n      tag_257\n        /* \"GenericLayout.sol\":2061:2067  sender */\n      dup6\n        /* \"GenericLayout.sol\":2069:2078  recipient */\n      dup6\n        /* \"GenericLayout.sol\":2080:2090  sendAmount */\n      dup4\n        /* \"GenericLayout.sol\":2045:2060  super._transfer */\n      tag_258\n        /* \"GenericLayout.sol\":2045:2091  super._transfer(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_257:\n        /* \"GenericLayout.sol\":2102:2127  _burn(sender, burnAmount) */\n      tag_259\n        /* \"GenericLayout.sol\":2108:2114  sender */\n      dup6\n        /* \"GenericLayout.sol\":2116:2126  burnAmount */\n      dup4\n        /* \"GenericLayout.sol\":2102:2107  _burn */\n      tag_158\n        /* \"GenericLayout.sol\":2102:2127  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_259:\n        /* \"GenericLayout.sol\":1859:2135  {... */\n      pop\n      pop\n        /* \"GenericLayout.sol\":1747:2135  function _transfer(address sender, address recipient, uint256 amount) internal override circuitBreakerNotActive {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_148:\n        /* \"contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9764:10241  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_152:\n        /* \"contracts/token/ERC20/ERC20.sol\":9863:9887  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9915  allowance(owner, spender) */\n      tag_262\n        /* \"contracts/token/ERC20/ERC20.sol\":9900:9905  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9907:9914  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9899  allowance */\n      tag_106\n        /* \"contracts/token/ERC20/ERC20.sol\":9890:9915  allowance(owner, spender) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/token/ERC20/ERC20.sol\":9863:9915  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9949:9966  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/token/ERC20/ERC20.sol\":9929:9945  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9929:9966  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":9925:10235  if (currentAllowance != type(uint256).max) {... */\n      tag_263\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10005:10010  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9986:10002  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9986:10010  currentAllowance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":9982:10112  if (currentAllowance < value) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10064:10071  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":10073:10089  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":10037:10097  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9982:10112  if (currentAllowance < value) {... */\n    tag_264:\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10210  _approve(owner, spender, currentAllowance - value, false) */\n      tag_267\n        /* \"contracts/token/ERC20/ERC20.sol\":10162:10167  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10169:10176  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10197:10202  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10178:10194  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10178:10202  currentAllowance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10204:10209  false */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10161  _approve */\n      tag_235\n        /* \"contracts/token/ERC20/ERC20.sol\":10153:10210  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/token/ERC20/ERC20.sol\":9925:10235  if (currentAllowance != type(uint256).max) {... */\n    tag_263:\n        /* \"contracts/token/ERC20/ERC20.sol\":9853:10241  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9764:10241  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":7212:7418  function _burn(address account, uint256 value) internal {... */\n    tag_158:\n        /* \"contracts/token/ERC20/ERC20.sol\":7301:7302  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7303  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7289  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":7282:7303  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":7278:7367  if (account == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":7353:7354  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7326:7356  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":7278:7367  if (account == address(0)) {... */\n    tag_269:\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7411  _update(account, address(0), value) */\n      tag_271\n        /* \"contracts/token/ERC20/ERC20.sol\":7384:7391  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":7401:7402  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7405:7410  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7383  _update */\n      tag_272\n        /* \"contracts/token/ERC20/ERC20.sol\":7376:7411  _update(account, address(0), value) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/token/ERC20/ERC20.sol\":7212:7418  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_168:\n        /* \"contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n    tag_193:\n        /* \"contracts/token/ERC20/ERC20.sol\":6775:6776  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6763  account */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":6756:6777  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6829:6830  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6800:6832  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":6752:6843  if (account == address(0)) {... */\n    tag_275:\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n      tag_277\n        /* \"contracts/token/ERC20/ERC20.sol\":6868:6869  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6872:6879  account */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6881:6886  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6859  _update */\n      tag_272\n        /* \"contracts/token/ERC20/ERC20.sol\":6852:6887  _update(address(0), account, value) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/token/ERC20/ERC20.sol\":6677:6894  function _mint(address account, uint256 value) internal virtual  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9050:9482  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_235:\n        /* \"contracts/token/ERC20/ERC20.sol\":9179:9180  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9181  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9167  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9162:9181  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":9158:9247  if (owner == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9233:9234  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9204:9236  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9158:9247  if (owner == address(0)) {... */\n    tag_279:\n        /* \"contracts/token/ERC20/ERC20.sol\":9279:9280  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9281  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9267  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":9260:9281  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":9256:9346  if (spender == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9332:9333  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9304:9335  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9256:9346  if (spender == address(0)) {... */\n    tag_281:\n        /* \"contracts/token/ERC20/ERC20.sol\":9385:9390  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9366  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9373  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9367:9372  owner */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9373  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9382  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9374:9381  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9382  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":9355:9390  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":9404:9413  emitEvent */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":9400:9476  if (emitEvent) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9450:9457  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9443:9448  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/ERC20/ERC20.sol\":9459:9464  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9434:9465  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_284\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":9400:9476  if (emitEvent) {... */\n    tag_283:\n        /* \"contracts/token/ERC20/ERC20.sol\":9050:9482  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4604:4912  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_258:\n        /* \"contracts/token/ERC20/ERC20.sol\":4711:4712  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4713  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4699  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4695:4713  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":4691:4777  if (from == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":4763:4764  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4736:4766  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":4691:4777  if (from == address(0)) {... */\n    tag_286:\n        /* \"contracts/token/ERC20/ERC20.sol\":4804:4805  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4806  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4792  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":4790:4806  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":4786:4872  if (to == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":4858:4859  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4829:4861  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":4786:4872  if (to == address(0)) {... */\n    tag_288:\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4905  _update(from, to, value) */\n      tag_290\n        /* \"contracts/token/ERC20/ERC20.sol\":4889:4893  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4895:4897  to */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4899:4904  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4888  _update */\n      tag_272\n        /* \"contracts/token/ERC20/ERC20.sol\":4881:4905  _update(from, to, value) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/token/ERC20/ERC20.sol\":4604:4912  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_272:\n        /* \"contracts/token/ERC20/ERC20.sol\":5332:5333  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5320  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5316:5334  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5468:5473  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5452:5464  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5452:5473  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_293\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_293:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n      jump(tag_294)\n    tag_292:\n        /* \"contracts/token/ERC20/ERC20.sol\":5504:5523  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5535  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5536:5540  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5526:5541  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":5504:5541  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5573:5578  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5559:5570  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5559:5578  fromBalance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5630:5634  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5636:5647  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5649:5654  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5605:5655  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":5555:5670  if (fromBalance < value) {... */\n    tag_295:\n        /* \"contracts/token/ERC20/ERC20.sol\":5822:5827  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5808:5819  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":5808:5827  fromBalance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5799  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":5800:5804  from */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5805  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":5790:5827  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5490:5852  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5312:5852  if (from == address(0)) {... */\n    tag_294:\n        /* \"contracts/token/ERC20/ERC20.sol\":5880:5881  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5868  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5866:5882  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6045:6050  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6029:6041  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6029:6050  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n      jump(tag_298)\n    tag_297:\n        /* \"contracts/token/ERC20/ERC20.sol\":6257:6262  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6249  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6250:6252  to */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6253  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6240:6262  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5862:6287  if (to == address(0)) {... */\n    tag_298:\n        /* \"contracts/token/ERC20/ERC20.sol\":6317:6319  to */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6311:6315  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/ERC20/ERC20.sol\":6321:6326  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6302:6327  Transfer(from, to, value) */\n      mload(0x40)\n      tag_299\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":5227:6334  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_300:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_301:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_302:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_303:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_304:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_342\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_300\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":711:782   */\n      tag_343\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_301\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_344\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_302\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":881:910   */\n      tag_345\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_303\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_32:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_347\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_304\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_306:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_308:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_309:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_353\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_308\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_310:\n        /* \"#utility.yul\":1876:1900   */\n      tag_355\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_309\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_356:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_311:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_358\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_310\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_312:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_313:\n        /* \"#utility.yul\":2232:2256   */\n      tag_361\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_312\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_362:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_314:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_364\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_313\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_35:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_367\n      tag_306\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2525:2644   */\n    tag_366:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_368\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_311\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_369\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_314\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_315:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_316:\n        /* \"#utility.yul\":3089:3110   */\n      tag_372\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_315\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_38:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_374\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_316\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_317:\n        /* \"#utility.yul\":3426:3450   */\n      tag_376\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_312\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_42:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_378\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_317\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_47:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_381\n      tag_306\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3767:3886   */\n    tag_380:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_382\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_314\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_51:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_385\n      tag_306\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4136:4255   */\n    tag_384:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_386\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_311\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_387\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_311\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_388\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_314\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_318:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_319:\n        /* \"#utility.yul\":4826:4848   */\n      tag_391\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_318\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_57:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_393\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_319\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_69:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_396\n      tag_306\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5157:5276   */\n    tag_395:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_397\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_311\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_320:\n        /* \"#utility.yul\":5503:5527   */\n      tag_399\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_309\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_80:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_401\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_320\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_105:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_404\n      tag_306\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5861:5980   */\n    tag_403:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_405\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_311\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_406\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_311\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_321:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_113:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_409:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_411\n      tag_321\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6664:6748   */\n    tag_410:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6930   */\n    tag_322:\n        /* \"#utility.yul\":6900:6922   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6923   */\n      mstore\n        /* \"#utility.yul\":6760:6930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7302   */\n    tag_323:\n        /* \"#utility.yul\":7078:7081   */\n      0x00\n        /* \"#utility.yul\":7099:7166   */\n      tag_414\n        /* \"#utility.yul\":7163:7165   */\n      0x14\n        /* \"#utility.yul\":7158:7161   */\n      dup4\n        /* \"#utility.yul\":7099:7166   */\n      tag_301\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7092:7166   */\n      swap2\n      pop\n        /* \"#utility.yul\":7175:7268   */\n      tag_415\n        /* \"#utility.yul\":7264:7267   */\n      dup3\n        /* \"#utility.yul\":7175:7268   */\n      tag_322\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7288:7291   */\n      dup3\n        /* \"#utility.yul\":7284:7296   */\n      add\n        /* \"#utility.yul\":7277:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":6936:7302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7308:7727   */\n    tag_137:\n        /* \"#utility.yul\":7474:7478   */\n      0x00\n        /* \"#utility.yul\":7512:7514   */\n      0x20\n        /* \"#utility.yul\":7501:7510   */\n      dup3\n        /* \"#utility.yul\":7497:7515   */\n      add\n        /* \"#utility.yul\":7489:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7570   */\n      dup2\n        /* \"#utility.yul\":7555:7559   */\n      dup2\n        /* \"#utility.yul\":7551:7571   */\n      sub\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7536:7545   */\n      dup4\n        /* \"#utility.yul\":7532:7549   */\n      add\n        /* \"#utility.yul\":7525:7572   */\n      mstore\n        /* \"#utility.yul\":7589:7720   */\n      tag_417\n        /* \"#utility.yul\":7715:7719   */\n      dup2\n        /* \"#utility.yul\":7589:7720   */\n      tag_323\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7581:7720   */\n      swap1\n      pop\n        /* \"#utility.yul\":7308:7727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:7913   */\n    tag_324:\n        /* \"#utility.yul\":7781:7858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7778:7779   */\n      0x00\n        /* \"#utility.yul\":7771:7859   */\n      mstore\n        /* \"#utility.yul\":7878:7882   */\n      0x11\n        /* \"#utility.yul\":7875:7876   */\n      0x04\n        /* \"#utility.yul\":7868:7883   */\n      mstore\n        /* \"#utility.yul\":7902:7906   */\n      0x24\n        /* \"#utility.yul\":7899:7900   */\n      0x00\n        /* \"#utility.yul\":7892:7907   */\n      revert\n        /* \"#utility.yul\":7919:8113   */\n    tag_140:\n        /* \"#utility.yul\":7959:7963   */\n      0x00\n        /* \"#utility.yul\":7979:7999   */\n      tag_420\n        /* \"#utility.yul\":7997:7998   */\n      dup3\n        /* \"#utility.yul\":7979:7999   */\n      tag_312\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7974:7999   */\n      swap2\n      pop\n        /* \"#utility.yul\":8013:8033   */\n      tag_421\n        /* \"#utility.yul\":8031:8032   */\n      dup4\n        /* \"#utility.yul\":8013:8033   */\n      tag_312\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8008:8033   */\n      swap3\n      pop\n        /* \"#utility.yul\":8057:8058   */\n      dup3\n        /* \"#utility.yul\":8054:8055   */\n      dup3\n        /* \"#utility.yul\":8050:8059   */\n      sub\n        /* \"#utility.yul\":8042:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":8081:8082   */\n      dup2\n        /* \"#utility.yul\":8075:8079   */\n      dup2\n        /* \"#utility.yul\":8072:8083   */\n      gt\n        /* \"#utility.yul\":8069:8106   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":8086:8104   */\n      tag_423\n      tag_324\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8069:8106   */\n    tag_422:\n        /* \"#utility.yul\":7919:8113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8310   */\n    tag_162:\n        /* \"#utility.yul\":8159:8162   */\n      0x00\n        /* \"#utility.yul\":8178:8198   */\n      tag_425\n        /* \"#utility.yul\":8196:8197   */\n      dup3\n        /* \"#utility.yul\":8178:8198   */\n      tag_312\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8173:8198   */\n      swap2\n      pop\n        /* \"#utility.yul\":8212:8232   */\n      tag_426\n        /* \"#utility.yul\":8230:8231   */\n      dup4\n        /* \"#utility.yul\":8212:8232   */\n      tag_312\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8207:8232   */\n      swap3\n      pop\n        /* \"#utility.yul\":8255:8256   */\n      dup3\n        /* \"#utility.yul\":8252:8253   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      add\n        /* \"#utility.yul\":8241:8257   */\n      swap1\n      pop\n        /* \"#utility.yul\":8276:8279   */\n      dup1\n        /* \"#utility.yul\":8273:8274   */\n      dup3\n        /* \"#utility.yul\":8270:8280   */\n      gt\n        /* \"#utility.yul\":8267:8303   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8283:8301   */\n      tag_428\n      tag_324\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8267:8303   */\n    tag_427:\n        /* \"#utility.yul\":8119:8310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8316:8610   */\n    tag_325:\n        /* \"#utility.yul\":8456:8490   */\n      0x4c6971756964697479206d7573742062652070726f766964656420666f722061\n        /* \"#utility.yul\":8452:8453   */\n      0x00\n        /* \"#utility.yul\":8444:8450   */\n      dup3\n        /* \"#utility.yul\":8440:8454   */\n      add\n        /* \"#utility.yul\":8433:8491   */\n      mstore\n        /* \"#utility.yul\":8525:8559   */\n      0x74206c65617374203330206461797320746f207175616c69667920666f722072\n        /* \"#utility.yul\":8520:8522   */\n      0x20\n        /* \"#utility.yul\":8512:8518   */\n      dup3\n        /* \"#utility.yul\":8508:8523   */\n      add\n        /* \"#utility.yul\":8501:8560   */\n      mstore\n        /* \"#utility.yul\":8594:8602   */\n      0x6577617264730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8589:8591   */\n      0x40\n        /* \"#utility.yul\":8581:8587   */\n      dup3\n        /* \"#utility.yul\":8577:8592   */\n      add\n        /* \"#utility.yul\":8570:8603   */\n      mstore\n        /* \"#utility.yul\":8316:8610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8982   */\n    tag_326:\n        /* \"#utility.yul\":8758:8761   */\n      0x00\n        /* \"#utility.yul\":8779:8846   */\n      tag_431\n        /* \"#utility.yul\":8843:8845   */\n      0x46\n        /* \"#utility.yul\":8838:8841   */\n      dup4\n        /* \"#utility.yul\":8779:8846   */\n      tag_301\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8772:8846   */\n      swap2\n      pop\n        /* \"#utility.yul\":8855:8948   */\n      tag_432\n        /* \"#utility.yul\":8944:8947   */\n      dup3\n        /* \"#utility.yul\":8855:8948   */\n      tag_325\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8973:8975   */\n      0x60\n        /* \"#utility.yul\":8968:8971   */\n      dup3\n        /* \"#utility.yul\":8964:8976   */\n      add\n        /* \"#utility.yul\":8957:8976   */\n      swap1\n      pop\n        /* \"#utility.yul\":8616:8982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8988:9407   */\n    tag_202:\n        /* \"#utility.yul\":9154:9158   */\n      0x00\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"#utility.yul\":9181:9190   */\n      dup3\n        /* \"#utility.yul\":9177:9195   */\n      add\n        /* \"#utility.yul\":9169:9195   */\n      swap1\n      pop\n        /* \"#utility.yul\":9241:9250   */\n      dup2\n        /* \"#utility.yul\":9235:9239   */\n      dup2\n        /* \"#utility.yul\":9231:9251   */\n      sub\n        /* \"#utility.yul\":9227:9228   */\n      0x00\n        /* \"#utility.yul\":9216:9225   */\n      dup4\n        /* \"#utility.yul\":9212:9229   */\n      add\n        /* \"#utility.yul\":9205:9252   */\n      mstore\n        /* \"#utility.yul\":9269:9400   */\n      tag_434\n        /* \"#utility.yul\":9395:9399   */\n      dup2\n        /* \"#utility.yul\":9269:9400   */\n      tag_326\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9261:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":8988:9407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9588   */\n    tag_327:\n        /* \"#utility.yul\":9553:9580   */\n      0x5265776172642065786365656473206d617820737570706c7900000000000000\n        /* \"#utility.yul\":9549:9550   */\n      0x00\n        /* \"#utility.yul\":9541:9547   */\n      dup3\n        /* \"#utility.yul\":9537:9551   */\n      add\n        /* \"#utility.yul\":9530:9581   */\n      mstore\n        /* \"#utility.yul\":9413:9588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9594:9960   */\n    tag_328:\n        /* \"#utility.yul\":9736:9739   */\n      0x00\n        /* \"#utility.yul\":9757:9824   */\n      tag_437\n        /* \"#utility.yul\":9821:9823   */\n      0x19\n        /* \"#utility.yul\":9816:9819   */\n      dup4\n        /* \"#utility.yul\":9757:9824   */\n      tag_301\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9750:9824   */\n      swap2\n      pop\n        /* \"#utility.yul\":9833:9926   */\n      tag_438\n        /* \"#utility.yul\":9922:9925   */\n      dup3\n        /* \"#utility.yul\":9833:9926   */\n      tag_327\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9951:9953   */\n      0x20\n        /* \"#utility.yul\":9946:9949   */\n      dup3\n        /* \"#utility.yul\":9942:9954   */\n      add\n        /* \"#utility.yul\":9935:9954   */\n      swap1\n      pop\n        /* \"#utility.yul\":9594:9960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9966:10385   */\n    tag_208:\n        /* \"#utility.yul\":10132:10136   */\n      0x00\n        /* \"#utility.yul\":10170:10172   */\n      0x20\n        /* \"#utility.yul\":10159:10168   */\n      dup3\n        /* \"#utility.yul\":10155:10173   */\n      add\n        /* \"#utility.yul\":10147:10173   */\n      swap1\n      pop\n        /* \"#utility.yul\":10219:10228   */\n      dup2\n        /* \"#utility.yul\":10213:10217   */\n      dup2\n        /* \"#utility.yul\":10209:10229   */\n      sub\n        /* \"#utility.yul\":10205:10206   */\n      0x00\n        /* \"#utility.yul\":10194:10203   */\n      dup4\n        /* \"#utility.yul\":10190:10207   */\n      add\n        /* \"#utility.yul\":10183:10230   */\n      mstore\n        /* \"#utility.yul\":10247:10378   */\n      tag_440\n        /* \"#utility.yul\":10373:10377   */\n      dup2\n        /* \"#utility.yul\":10247:10378   */\n      tag_328\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10239:10378   */\n      swap1\n      pop\n        /* \"#utility.yul\":9966:10385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10801   */\n    tag_219:\n        /* \"#utility.yul\":10431:10438   */\n      0x00\n        /* \"#utility.yul\":10454:10474   */\n      tag_442\n        /* \"#utility.yul\":10472:10473   */\n      dup3\n        /* \"#utility.yul\":10454:10474   */\n      tag_312\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10449:10474   */\n      swap2\n      pop\n        /* \"#utility.yul\":10488:10508   */\n      tag_443\n        /* \"#utility.yul\":10506:10507   */\n      dup4\n        /* \"#utility.yul\":10488:10508   */\n      tag_312\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10483:10508   */\n      swap3\n      pop\n        /* \"#utility.yul\":10543:10544   */\n      dup3\n        /* \"#utility.yul\":10540:10541   */\n      dup3\n        /* \"#utility.yul\":10536:10545   */\n      mul\n        /* \"#utility.yul\":10565:10595   */\n      tag_444\n        /* \"#utility.yul\":10583:10594   */\n      dup2\n        /* \"#utility.yul\":10565:10595   */\n      tag_312\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10554:10595   */\n      swap2\n      pop\n        /* \"#utility.yul\":10744:10745   */\n      dup3\n        /* \"#utility.yul\":10735:10742   */\n      dup3\n        /* \"#utility.yul\":10731:10746   */\n      div\n        /* \"#utility.yul\":10728:10729   */\n      dup5\n        /* \"#utility.yul\":10725:10747   */\n      eq\n        /* \"#utility.yul\":10705:10706   */\n      dup4\n        /* \"#utility.yul\":10698:10707   */\n      iszero\n        /* \"#utility.yul\":10678:10761   */\n      or\n        /* \"#utility.yul\":10655:10794   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":10774:10792   */\n      tag_446\n      tag_324\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10655:10794   */\n    tag_445:\n        /* \"#utility.yul\":10439:10801   */\n      pop\n        /* \"#utility.yul\":10391:10801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10807:10987   */\n    tag_329:\n        /* \"#utility.yul\":10855:10932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10852:10853   */\n      0x00\n        /* \"#utility.yul\":10845:10933   */\n      mstore\n        /* \"#utility.yul\":10952:10956   */\n      0x12\n        /* \"#utility.yul\":10949:10950   */\n      0x04\n        /* \"#utility.yul\":10942:10957   */\n      mstore\n        /* \"#utility.yul\":10976:10980   */\n      0x24\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10966:10981   */\n      revert\n        /* \"#utility.yul\":10993:11178   */\n    tag_221:\n        /* \"#utility.yul\":11033:11034   */\n      0x00\n        /* \"#utility.yul\":11050:11070   */\n      tag_449\n        /* \"#utility.yul\":11068:11069   */\n      dup3\n        /* \"#utility.yul\":11050:11070   */\n      tag_312\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11045:11070   */\n      swap2\n      pop\n        /* \"#utility.yul\":11084:11104   */\n      tag_450\n        /* \"#utility.yul\":11102:11103   */\n      dup4\n        /* \"#utility.yul\":11084:11104   */\n      tag_312\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11079:11104   */\n      swap3\n      pop\n        /* \"#utility.yul\":11123:11124   */\n      dup3\n        /* \"#utility.yul\":11113:11148   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":11128:11146   */\n      tag_452\n      tag_329\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11113:11148   */\n    tag_451:\n        /* \"#utility.yul\":11170:11171   */\n      dup3\n        /* \"#utility.yul\":11167:11168   */\n      dup3\n        /* \"#utility.yul\":11163:11172   */\n      div\n        /* \"#utility.yul\":11158:11172   */\n      swap1\n      pop\n        /* \"#utility.yul\":10993:11178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11365   */\n    tag_330:\n        /* \"#utility.yul\":11324:11357   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11320:11321   */\n      0x00\n        /* \"#utility.yul\":11312:11318   */\n      dup3\n        /* \"#utility.yul\":11308:11322   */\n      add\n        /* \"#utility.yul\":11301:11358   */\n      mstore\n        /* \"#utility.yul\":11184:11365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11371:11737   */\n    tag_331:\n        /* \"#utility.yul\":11513:11516   */\n      0x00\n        /* \"#utility.yul\":11534:11601   */\n      tag_455\n        /* \"#utility.yul\":11598:11600   */\n      0x1f\n        /* \"#utility.yul\":11593:11596   */\n      dup4\n        /* \"#utility.yul\":11534:11601   */\n      tag_301\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11527:11601   */\n      swap2\n      pop\n        /* \"#utility.yul\":11610:11703   */\n      tag_456\n        /* \"#utility.yul\":11699:11702   */\n      dup3\n        /* \"#utility.yul\":11610:11703   */\n      tag_330\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11728:11730   */\n      0x20\n        /* \"#utility.yul\":11723:11726   */\n      dup3\n        /* \"#utility.yul\":11719:11731   */\n      add\n        /* \"#utility.yul\":11712:11731   */\n      swap1\n      pop\n        /* \"#utility.yul\":11371:11737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11743:12162   */\n    tag_245:\n        /* \"#utility.yul\":11909:11913   */\n      0x00\n        /* \"#utility.yul\":11947:11949   */\n      0x20\n        /* \"#utility.yul\":11936:11945   */\n      dup3\n        /* \"#utility.yul\":11932:11950   */\n      add\n        /* \"#utility.yul\":11924:11950   */\n      swap1\n      pop\n        /* \"#utility.yul\":11996:12005   */\n      dup2\n        /* \"#utility.yul\":11990:11994   */\n      dup2\n        /* \"#utility.yul\":11986:12006   */\n      sub\n        /* \"#utility.yul\":11982:11983   */\n      0x00\n        /* \"#utility.yul\":11971:11980   */\n      dup4\n        /* \"#utility.yul\":11967:11984   */\n      add\n        /* \"#utility.yul\":11960:12007   */\n      mstore\n        /* \"#utility.yul\":12024:12155   */\n      tag_458\n        /* \"#utility.yul\":12150:12154   */\n      dup2\n        /* \"#utility.yul\":12024:12155   */\n      tag_331\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12016:12155   */\n      swap1\n      pop\n        /* \"#utility.yul\":11743:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12343   */\n    tag_332:\n        /* \"#utility.yul\":12308:12335   */\n      0x4369726375697420627265616b65722069732061637469766500000000000000\n        /* \"#utility.yul\":12304:12305   */\n      0x00\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12292:12306   */\n      add\n        /* \"#utility.yul\":12285:12336   */\n      mstore\n        /* \"#utility.yul\":12168:12343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12349:12715   */\n    tag_333:\n        /* \"#utility.yul\":12491:12494   */\n      0x00\n        /* \"#utility.yul\":12512:12579   */\n      tag_461\n        /* \"#utility.yul\":12576:12578   */\n      0x19\n        /* \"#utility.yul\":12571:12574   */\n      dup4\n        /* \"#utility.yul\":12512:12579   */\n      tag_301\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12505:12579   */\n      swap2\n      pop\n        /* \"#utility.yul\":12588:12681   */\n      tag_462\n        /* \"#utility.yul\":12677:12680   */\n      dup3\n        /* \"#utility.yul\":12588:12681   */\n      tag_332\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12706:12708   */\n      0x20\n        /* \"#utility.yul\":12701:12704   */\n      dup3\n        /* \"#utility.yul\":12697:12709   */\n      add\n        /* \"#utility.yul\":12690:12709   */\n      swap1\n      pop\n        /* \"#utility.yul\":12349:12715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:13140   */\n    tag_249:\n        /* \"#utility.yul\":12887:12891   */\n      0x00\n        /* \"#utility.yul\":12925:12927   */\n      0x20\n        /* \"#utility.yul\":12914:12923   */\n      dup3\n        /* \"#utility.yul\":12910:12928   */\n      add\n        /* \"#utility.yul\":12902:12928   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:12983   */\n      dup2\n        /* \"#utility.yul\":12968:12972   */\n      dup2\n        /* \"#utility.yul\":12964:12984   */\n      sub\n        /* \"#utility.yul\":12960:12961   */\n      0x00\n        /* \"#utility.yul\":12949:12958   */\n      dup4\n        /* \"#utility.yul\":12945:12962   */\n      add\n        /* \"#utility.yul\":12938:12985   */\n      mstore\n        /* \"#utility.yul\":13002:13133   */\n      tag_464\n        /* \"#utility.yul\":13128:13132   */\n      dup2\n        /* \"#utility.yul\":13002:13133   */\n      tag_333\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12994:13133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12721:13140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13314   */\n    tag_334:\n        /* \"#utility.yul\":13286:13306   */\n      0x4275726e2076616c756520696e76616c69640000000000000000000000000000\n        /* \"#utility.yul\":13282:13283   */\n      0x00\n        /* \"#utility.yul\":13274:13280   */\n      dup3\n        /* \"#utility.yul\":13270:13284   */\n      add\n        /* \"#utility.yul\":13263:13307   */\n      mstore\n        /* \"#utility.yul\":13146:13314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13320:13686   */\n    tag_335:\n        /* \"#utility.yul\":13462:13465   */\n      0x00\n        /* \"#utility.yul\":13483:13550   */\n      tag_467\n        /* \"#utility.yul\":13547:13549   */\n      0x12\n        /* \"#utility.yul\":13542:13545   */\n      dup4\n        /* \"#utility.yul\":13483:13550   */\n      tag_301\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13476:13550   */\n      swap2\n      pop\n        /* \"#utility.yul\":13559:13652   */\n      tag_468\n        /* \"#utility.yul\":13648:13651   */\n      dup3\n        /* \"#utility.yul\":13559:13652   */\n      tag_334\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":13677:13679   */\n      0x20\n        /* \"#utility.yul\":13672:13675   */\n      dup3\n        /* \"#utility.yul\":13668:13680   */\n      add\n        /* \"#utility.yul\":13661:13680   */\n      swap1\n      pop\n        /* \"#utility.yul\":13320:13686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13692:14111   */\n    tag_256:\n        /* \"#utility.yul\":13858:13862   */\n      0x00\n        /* \"#utility.yul\":13896:13898   */\n      0x20\n        /* \"#utility.yul\":13885:13894   */\n      dup3\n        /* \"#utility.yul\":13881:13899   */\n      add\n        /* \"#utility.yul\":13873:13899   */\n      swap1\n      pop\n        /* \"#utility.yul\":13945:13954   */\n      dup2\n        /* \"#utility.yul\":13939:13943   */\n      dup2\n        /* \"#utility.yul\":13935:13955   */\n      sub\n        /* \"#utility.yul\":13931:13932   */\n      0x00\n        /* \"#utility.yul\":13920:13929   */\n      dup4\n        /* \"#utility.yul\":13916:13933   */\n      add\n        /* \"#utility.yul\":13909:13956   */\n      mstore\n        /* \"#utility.yul\":13973:14104   */\n      tag_470\n        /* \"#utility.yul\":14099:14103   */\n      dup2\n        /* \"#utility.yul\":13973:14104   */\n      tag_335\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13965:14104   */\n      swap1\n      pop\n        /* \"#utility.yul\":13692:14111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14117:14559   */\n    tag_266:\n        /* \"#utility.yul\":14266:14270   */\n      0x00\n        /* \"#utility.yul\":14304:14306   */\n      0x60\n        /* \"#utility.yul\":14293:14302   */\n      dup3\n        /* \"#utility.yul\":14289:14307   */\n      add\n        /* \"#utility.yul\":14281:14307   */\n      swap1\n      pop\n        /* \"#utility.yul\":14317:14388   */\n      tag_472\n        /* \"#utility.yul\":14385:14386   */\n      0x00\n        /* \"#utility.yul\":14374:14383   */\n      dup4\n        /* \"#utility.yul\":14370:14387   */\n      add\n        /* \"#utility.yul\":14361:14367   */\n      dup7\n        /* \"#utility.yul\":14317:14388   */\n      tag_320\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14398:14470   */\n      tag_473\n        /* \"#utility.yul\":14466:14468   */\n      0x20\n        /* \"#utility.yul\":14455:14464   */\n      dup4\n        /* \"#utility.yul\":14451:14469   */\n      add\n        /* \"#utility.yul\":14442:14448   */\n      dup6\n        /* \"#utility.yul\":14398:14470   */\n      tag_317\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14480:14552   */\n      tag_474\n        /* \"#utility.yul\":14548:14550   */\n      0x40\n        /* \"#utility.yul\":14537:14546   */\n      dup4\n        /* \"#utility.yul\":14533:14551   */\n      add\n        /* \"#utility.yul\":14524:14530   */\n      dup5\n        /* \"#utility.yul\":14480:14552   */\n      tag_317\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14117:14559   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c63ad704e6f86fa39459134d6c5ea5abecb7923385f4e9acf1dcf228a3f91fe64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_830": {
									"entryPoint": null,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1133": {
									"entryPoint": 569,
									"id": 1133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_576": {
									"entryPoint": 374,
									"id": 576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1100": {
									"entryPoint": 702,
									"id": 1100,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint8t_address_fromMemory": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12985:9",
										"nodeType": "YulBlock",
										"src": "0:12985:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2615:32:9",
													"nodeType": "YulBlock",
													"src": "2615:32:9",
													"statements": [
														{
															"nativeSrc": "2625:16:9",
															"nodeType": "YulAssignment",
															"src": "2625:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:9",
																"nodeType": "YulIdentifier",
																"src": "2636:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:9",
														"nodeType": "YulTypedName",
														"src": "2597:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:9",
														"nodeType": "YulTypedName",
														"src": "2607:7:9",
														"type": ""
													}
												],
												"src": "2570:77:9"
											},
											{
												"body": {
													"nativeSrc": "2696:79:9",
													"nodeType": "YulBlock",
													"src": "2696:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:9",
																"nodeType": "YulBlock",
																"src": "2753:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:9"
																			},
																			"nativeSrc": "2755:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:9"
																		},
																		"nativeSrc": "2755:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:9"
																				},
																				"nativeSrc": "2726:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:9"
																		},
																		"nativeSrc": "2716:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:9"
																},
																"nativeSrc": "2709:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:9"
															},
															"nativeSrc": "2706:63:9",
															"nodeType": "YulIf",
															"src": "2706:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:9",
														"nodeType": "YulTypedName",
														"src": "2689:5:9",
														"type": ""
													}
												],
												"src": "2653:122:9"
											},
											{
												"body": {
													"nativeSrc": "2844:80:9",
													"nodeType": "YulBlock",
													"src": "2844:80:9",
													"statements": [
														{
															"nativeSrc": "2854:22:9",
															"nodeType": "YulAssignment",
															"src": "2854:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:9"
																},
																"nativeSrc": "2863:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:9"
																},
																"nativeSrc": "2885:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:9"
															},
															"nativeSrc": "2885:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:9",
														"nodeType": "YulTypedName",
														"src": "2822:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:9",
														"nodeType": "YulTypedName",
														"src": "2830:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:9",
														"nodeType": "YulTypedName",
														"src": "2838:5:9",
														"type": ""
													}
												],
												"src": "2781:143:9"
											},
											{
												"body": {
													"nativeSrc": "2973:43:9",
													"nodeType": "YulBlock",
													"src": "2973:43:9",
													"statements": [
														{
															"nativeSrc": "2983:27:9",
															"nodeType": "YulAssignment",
															"src": "2983:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2998:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2998:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3005:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3005:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2994:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2994:3:9"
																},
																"nativeSrc": "2994:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2994:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2983:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2983:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2930:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2955:5:9",
														"nodeType": "YulTypedName",
														"src": "2955:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2965:7:9",
														"nodeType": "YulTypedName",
														"src": "2965:7:9",
														"type": ""
													}
												],
												"src": "2930:86:9"
											},
											{
												"body": {
													"nativeSrc": "3063:77:9",
													"nodeType": "YulBlock",
													"src": "3063:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3118:16:9",
																"nodeType": "YulBlock",
																"src": "3118:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3127:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3130:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3120:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3120:6:9"
																			},
																			"nativeSrc": "3120:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3120:12:9"
																		},
																		"nativeSrc": "3120:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3086:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3086:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3109:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3109:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "3093:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "3093:15:9"
																				},
																				"nativeSrc": "3093:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3093:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3083:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3083:2:9"
																		},
																		"nativeSrc": "3083:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3076:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:9"
																},
																"nativeSrc": "3076:41:9",
																"nodeType": "YulFunctionCall",
																"src": "3076:41:9"
															},
															"nativeSrc": "3073:61:9",
															"nodeType": "YulIf",
															"src": "3073:61:9"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "3022:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3056:5:9",
														"nodeType": "YulTypedName",
														"src": "3056:5:9",
														"type": ""
													}
												],
												"src": "3022:118:9"
											},
											{
												"body": {
													"nativeSrc": "3207:78:9",
													"nodeType": "YulBlock",
													"src": "3207:78:9",
													"statements": [
														{
															"nativeSrc": "3217:22:9",
															"nodeType": "YulAssignment",
															"src": "3217:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3232:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3232:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3226:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3226:5:9"
																},
																"nativeSrc": "3226:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3226:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3217:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3217:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3273:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3273:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "3248:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "3248:24:9"
																},
																"nativeSrc": "3248:31:9",
																"nodeType": "YulFunctionCall",
																"src": "3248:31:9"
															},
															"nativeSrc": "3248:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "3248:31:9"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "3146:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3185:6:9",
														"nodeType": "YulTypedName",
														"src": "3185:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3193:3:9",
														"nodeType": "YulTypedName",
														"src": "3193:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3201:5:9",
														"nodeType": "YulTypedName",
														"src": "3201:5:9",
														"type": ""
													}
												],
												"src": "3146:139:9"
											},
											{
												"body": {
													"nativeSrc": "3336:81:9",
													"nodeType": "YulBlock",
													"src": "3336:81:9",
													"statements": [
														{
															"nativeSrc": "3346:65:9",
															"nodeType": "YulAssignment",
															"src": "3346:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3361:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3361:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:42:9",
																		"nodeType": "YulLiteral",
																		"src": "3368:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3357:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:9"
																},
																"nativeSrc": "3357:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3357:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3346:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3346:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3291:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3318:5:9",
														"nodeType": "YulTypedName",
														"src": "3318:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3328:7:9",
														"nodeType": "YulTypedName",
														"src": "3328:7:9",
														"type": ""
													}
												],
												"src": "3291:126:9"
											},
											{
												"body": {
													"nativeSrc": "3468:51:9",
													"nodeType": "YulBlock",
													"src": "3468:51:9",
													"statements": [
														{
															"nativeSrc": "3478:35:9",
															"nodeType": "YulAssignment",
															"src": "3478:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3507:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3507:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3489:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3489:17:9"
																},
																"nativeSrc": "3489:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3489:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3478:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3478:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3423:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3450:5:9",
														"nodeType": "YulTypedName",
														"src": "3450:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3460:7:9",
														"nodeType": "YulTypedName",
														"src": "3460:7:9",
														"type": ""
													}
												],
												"src": "3423:96:9"
											},
											{
												"body": {
													"nativeSrc": "3568:79:9",
													"nodeType": "YulBlock",
													"src": "3568:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3625:16:9",
																"nodeType": "YulBlock",
																"src": "3625:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3634:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3634:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3637:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3637:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3627:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3627:6:9"
																			},
																			"nativeSrc": "3627:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3627:12:9"
																		},
																		"nativeSrc": "3627:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3627:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3616:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3616:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3598:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3598:17:9"
																				},
																				"nativeSrc": "3598:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3598:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3588:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3588:2:9"
																		},
																		"nativeSrc": "3588:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3581:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:9"
																},
																"nativeSrc": "3581:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3581:43:9"
															},
															"nativeSrc": "3578:63:9",
															"nodeType": "YulIf",
															"src": "3578:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3525:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3561:5:9",
														"nodeType": "YulTypedName",
														"src": "3561:5:9",
														"type": ""
													}
												],
												"src": "3525:122:9"
											},
											{
												"body": {
													"nativeSrc": "3716:80:9",
													"nodeType": "YulBlock",
													"src": "3716:80:9",
													"statements": [
														{
															"nativeSrc": "3726:22:9",
															"nodeType": "YulAssignment",
															"src": "3726:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3741:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3735:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3735:5:9"
																},
																"nativeSrc": "3735:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3735:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3726:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3726:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3784:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3757:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3757:26:9"
																},
																"nativeSrc": "3757:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:9"
															},
															"nativeSrc": "3757:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3757:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3653:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3694:6:9",
														"nodeType": "YulTypedName",
														"src": "3694:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3702:3:9",
														"nodeType": "YulTypedName",
														"src": "3702:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3710:5:9",
														"nodeType": "YulTypedName",
														"src": "3710:5:9",
														"type": ""
													}
												],
												"src": "3653:143:9"
											},
											{
												"body": {
													"nativeSrc": "3982:1296:9",
													"nodeType": "YulBlock",
													"src": "3982:1296:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4029:83:9",
																"nodeType": "YulBlock",
																"src": "4029:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4031:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4031:77:9"
																			},
																			"nativeSrc": "4031:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:79:9"
																		},
																		"nativeSrc": "4031:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4003:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4003:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4012:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:9"
																		},
																		"nativeSrc": "3999:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4024:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3995:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:9"
																},
																"nativeSrc": "3995:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3995:33:9"
															},
															"nativeSrc": "3992:120:9",
															"nodeType": "YulIf",
															"src": "3992:120:9"
														},
														{
															"nativeSrc": "4122:291:9",
															"nodeType": "YulBlock",
															"src": "4122:291:9",
															"statements": [
																{
																	"nativeSrc": "4137:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4137:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4161:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4161:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4172:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4172:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4157:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4157:3:9"
																				},
																				"nativeSrc": "4157:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4157:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4151:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4151:5:9"
																		},
																		"nativeSrc": "4151:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4141:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4141:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4222:83:9",
																		"nodeType": "YulBlock",
																		"src": "4222:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4224:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4224:77:9"
																					},
																					"nativeSrc": "4224:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4224:79:9"
																				},
																				"nativeSrc": "4224:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4224:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4194:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4194:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4202:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4202:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4191:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4191:2:9"
																		},
																		"nativeSrc": "4191:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4191:30:9"
																	},
																	"nativeSrc": "4188:117:9",
																	"nodeType": "YulIf",
																	"src": "4188:117:9"
																},
																{
																	"nativeSrc": "4319:84:9",
																	"nodeType": "YulAssignment",
																	"src": "4319:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4375:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4375:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4386:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4386:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4371:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4371:3:9"
																				},
																				"nativeSrc": "4371:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4371:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4395:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4395:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4329:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "4329:41:9"
																		},
																		"nativeSrc": "4329:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4319:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4319:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4423:292:9",
															"nodeType": "YulBlock",
															"src": "4423:292:9",
															"statements": [
																{
																	"nativeSrc": "4438:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4438:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4462:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4462:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4473:2:9",
																						"nodeType": "YulLiteral",
																						"src": "4473:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4458:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:9"
																				},
																				"nativeSrc": "4458:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4458:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4452:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4452:5:9"
																		},
																		"nativeSrc": "4452:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4452:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4442:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4442:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4524:83:9",
																		"nodeType": "YulBlock",
																		"src": "4524:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4526:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4526:77:9"
																					},
																					"nativeSrc": "4526:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:79:9"
																				},
																				"nativeSrc": "4526:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4526:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4496:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4496:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4504:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4504:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4493:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4493:2:9"
																		},
																		"nativeSrc": "4493:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:30:9"
																	},
																	"nativeSrc": "4490:117:9",
																	"nodeType": "YulIf",
																	"src": "4490:117:9"
																},
																{
																	"nativeSrc": "4621:84:9",
																	"nodeType": "YulAssignment",
																	"src": "4621:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4677:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4677:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4688:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4688:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4673:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4673:3:9"
																				},
																				"nativeSrc": "4673:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4673:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4697:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4697:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4631:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "4631:41:9"
																		},
																		"nativeSrc": "4631:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4621:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4621:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4725:129:9",
															"nodeType": "YulBlock",
															"src": "4725:129:9",
															"statements": [
																{
																	"nativeSrc": "4740:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4740:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4754:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4754:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4744:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4744:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4770:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4770:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4816:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4816:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4827:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4827:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4812:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4812:3:9"
																				},
																				"nativeSrc": "4812:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4812:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4836:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4836:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4780:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4780:31:9"
																		},
																		"nativeSrc": "4780:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4780:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4770:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4770:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4864:129:9",
															"nodeType": "YulBlock",
															"src": "4864:129:9",
															"statements": [
																{
																	"nativeSrc": "4879:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4879:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4893:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4883:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4883:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4909:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4909:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4955:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4955:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4966:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4966:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4951:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4951:3:9"
																				},
																				"nativeSrc": "4951:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4951:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4975:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4975:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4919:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4919:31:9"
																		},
																		"nativeSrc": "4919:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4919:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4909:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4909:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5003:128:9",
															"nodeType": "YulBlock",
															"src": "5003:128:9",
															"statements": [
																{
																	"nativeSrc": "5018:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5018:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5032:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5032:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5022:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5022:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5049:72:9",
																	"nodeType": "YulAssignment",
																	"src": "5049:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5093:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5093:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5104:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5104:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5089:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5089:3:9"
																				},
																				"nativeSrc": "5089:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5089:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5113:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5113:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "5059:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "5059:29:9"
																		},
																		"nativeSrc": "5059:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5059:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5049:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5049:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5141:130:9",
															"nodeType": "YulBlock",
															"src": "5141:130:9",
															"statements": [
																{
																	"nativeSrc": "5156:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5156:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5170:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5170:3:9",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5160:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5160:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5187:74:9",
																	"nodeType": "YulAssignment",
																	"src": "5187:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5233:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5233:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5244:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5244:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5229:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5229:3:9"
																				},
																				"nativeSrc": "5229:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5253:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5253:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5197:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "5197:31:9"
																		},
																		"nativeSrc": "5197:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5197:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "5187:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5187:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint8t_address_fromMemory",
												"nativeSrc": "3802:1476:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:9",
														"nodeType": "YulTypedName",
														"src": "3912:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3923:7:9",
														"nodeType": "YulTypedName",
														"src": "3923:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3935:6:9",
														"nodeType": "YulTypedName",
														"src": "3935:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3943:6:9",
														"nodeType": "YulTypedName",
														"src": "3943:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3951:6:9",
														"nodeType": "YulTypedName",
														"src": "3951:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3959:6:9",
														"nodeType": "YulTypedName",
														"src": "3959:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3967:6:9",
														"nodeType": "YulTypedName",
														"src": "3967:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3975:6:9",
														"nodeType": "YulTypedName",
														"src": "3975:6:9",
														"type": ""
													}
												],
												"src": "3802:1476:9"
											},
											{
												"body": {
													"nativeSrc": "5343:40:9",
													"nodeType": "YulBlock",
													"src": "5343:40:9",
													"statements": [
														{
															"nativeSrc": "5354:22:9",
															"nodeType": "YulAssignment",
															"src": "5354:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5370:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5370:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5364:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5364:5:9"
																},
																"nativeSrc": "5364:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5364:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5354:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5284:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5326:5:9",
														"nodeType": "YulTypedName",
														"src": "5326:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5336:6:9",
														"nodeType": "YulTypedName",
														"src": "5336:6:9",
														"type": ""
													}
												],
												"src": "5284:99:9"
											},
											{
												"body": {
													"nativeSrc": "5417:152:9",
													"nodeType": "YulBlock",
													"src": "5417:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5434:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5434:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5437:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:9"
																},
																"nativeSrc": "5427:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5427:88:9"
															},
															"nativeSrc": "5427:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5427:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5531:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5531:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5534:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5534:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5524:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:9"
																},
																"nativeSrc": "5524:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5524:15:9"
															},
															"nativeSrc": "5524:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5524:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5555:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5558:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5548:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:9"
																},
																"nativeSrc": "5548:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5548:15:9"
															},
															"nativeSrc": "5548:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5548:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5389:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5389:180:9"
											},
											{
												"body": {
													"nativeSrc": "5626:269:9",
													"nodeType": "YulBlock",
													"src": "5626:269:9",
													"statements": [
														{
															"nativeSrc": "5636:22:9",
															"nodeType": "YulAssignment",
															"src": "5636:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5650:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5650:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5656:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5646:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:9"
																},
																"nativeSrc": "5646:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5646:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:9"
																}
															]
														},
														{
															"nativeSrc": "5667:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5667:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5697:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5697:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:9"
																},
																"nativeSrc": "5693:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5693:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5671:18:9",
																	"nodeType": "YulTypedName",
																	"src": "5671:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5744:51:9",
																"nodeType": "YulBlock",
																"src": "5744:51:9",
																"statements": [
																	{
																		"nativeSrc": "5758:27:9",
																		"nodeType": "YulAssignment",
																		"src": "5758:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5772:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5772:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5780:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5780:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5768:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5768:3:9"
																			},
																			"nativeSrc": "5768:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5768:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5758:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5758:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5724:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5724:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5717:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:9"
																},
																"nativeSrc": "5717:26:9",
																"nodeType": "YulFunctionCall",
																"src": "5717:26:9"
															},
															"nativeSrc": "5714:81:9",
															"nodeType": "YulIf",
															"src": "5714:81:9"
														},
														{
															"body": {
																"nativeSrc": "5847:42:9",
																"nodeType": "YulBlock",
																"src": "5847:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5861:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5861:16:9"
																			},
																			"nativeSrc": "5861:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5861:18:9"
																		},
																		"nativeSrc": "5861:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5861:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5811:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5811:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5834:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5842:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5842:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5831:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5831:2:9"
																		},
																		"nativeSrc": "5831:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5831:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5808:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5808:2:9"
																},
																"nativeSrc": "5808:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5808:38:9"
															},
															"nativeSrc": "5805:84:9",
															"nodeType": "YulIf",
															"src": "5805:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5575:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5610:4:9",
														"nodeType": "YulTypedName",
														"src": "5610:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5619:6:9",
														"nodeType": "YulTypedName",
														"src": "5619:6:9",
														"type": ""
													}
												],
												"src": "5575:320:9"
											},
											{
												"body": {
													"nativeSrc": "5955:87:9",
													"nodeType": "YulBlock",
													"src": "5955:87:9",
													"statements": [
														{
															"nativeSrc": "5965:11:9",
															"nodeType": "YulAssignment",
															"src": "5965:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "5973:3:9",
																"nodeType": "YulIdentifier",
																"src": "5973:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5993:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5993:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5996:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5996:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5986:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5986:6:9"
																},
																"nativeSrc": "5986:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5986:14:9"
															},
															"nativeSrc": "5986:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "5986:14:9"
														},
														{
															"nativeSrc": "6009:26:9",
															"nodeType": "YulAssignment",
															"src": "6009:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6027:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6027:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6030:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6017:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6017:9:9"
																},
																"nativeSrc": "6017:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6017:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6009:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6009:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5901:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5942:3:9",
														"nodeType": "YulTypedName",
														"src": "5942:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5950:4:9",
														"nodeType": "YulTypedName",
														"src": "5950:4:9",
														"type": ""
													}
												],
												"src": "5901:141:9"
											},
											{
												"body": {
													"nativeSrc": "6092:49:9",
													"nodeType": "YulBlock",
													"src": "6092:49:9",
													"statements": [
														{
															"nativeSrc": "6102:33:9",
															"nodeType": "YulAssignment",
															"src": "6102:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6120:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6120:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6127:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6127:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:9"
																		},
																		"nativeSrc": "6116:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6132:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6112:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:9"
																},
																"nativeSrc": "6112:23:9",
																"nodeType": "YulFunctionCall",
																"src": "6112:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "6048:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6075:5:9",
														"nodeType": "YulTypedName",
														"src": "6075:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6085:6:9",
														"nodeType": "YulTypedName",
														"src": "6085:6:9",
														"type": ""
													}
												],
												"src": "6048:93:9"
											},
											{
												"body": {
													"nativeSrc": "6200:54:9",
													"nodeType": "YulBlock",
													"src": "6200:54:9",
													"statements": [
														{
															"nativeSrc": "6210:37:9",
															"nodeType": "YulAssignment",
															"src": "6210:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6235:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6235:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6241:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6241:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:9"
																},
																"nativeSrc": "6231:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6231:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6210:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6210:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "6147:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6175:4:9",
														"nodeType": "YulTypedName",
														"src": "6175:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6181:5:9",
														"nodeType": "YulTypedName",
														"src": "6181:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6191:8:9",
														"nodeType": "YulTypedName",
														"src": "6191:8:9",
														"type": ""
													}
												],
												"src": "6147:107:9"
											},
											{
												"body": {
													"nativeSrc": "6336:317:9",
													"nodeType": "YulBlock",
													"src": "6336:317:9",
													"statements": [
														{
															"nativeSrc": "6346:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6346:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6367:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "6367:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6379:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6379:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:9"
																},
																"nativeSrc": "6363:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6363:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6350:9:9",
																	"nodeType": "YulTypedName",
																	"src": "6350:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6390:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6390:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6421:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6432:66:9",
																		"nodeType": "YulLiteral",
																		"src": "6432:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6402:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6402:18:9"
																},
																"nativeSrc": "6402:97:9",
																"nodeType": "YulFunctionCall",
																"src": "6402:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6394:4:9",
																	"nodeType": "YulTypedName",
																	"src": "6394:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6508:51:9",
															"nodeType": "YulAssignment",
															"src": "6508:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6539:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6539:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6550:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "6550:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6520:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6520:18:9"
																},
																"nativeSrc": "6520:39:9",
																"nodeType": "YulFunctionCall",
																"src": "6520:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6508:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "6508:8:9"
																}
															]
														},
														{
															"nativeSrc": "6568:30:9",
															"nodeType": "YulAssignment",
															"src": "6568:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6581:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6581:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6592:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6592:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6588:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:9"
																		},
																		"nativeSrc": "6588:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6577:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:9"
																},
																"nativeSrc": "6577:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6577:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6568:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6568:5:9"
																}
															]
														},
														{
															"nativeSrc": "6607:40:9",
															"nodeType": "YulAssignment",
															"src": "6607:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6620:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6620:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6631:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "6631:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6641:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6641:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:9"
																		},
																		"nativeSrc": "6627:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6617:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6617:2:9"
																},
																"nativeSrc": "6617:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6617:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6260:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6297:5:9",
														"nodeType": "YulTypedName",
														"src": "6297:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6304:10:9",
														"nodeType": "YulTypedName",
														"src": "6304:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6316:8:9",
														"nodeType": "YulTypedName",
														"src": "6316:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6329:6:9",
														"nodeType": "YulTypedName",
														"src": "6329:6:9",
														"type": ""
													}
												],
												"src": "6260:393:9"
											},
											{
												"body": {
													"nativeSrc": "6691:28:9",
													"nodeType": "YulBlock",
													"src": "6691:28:9",
													"statements": [
														{
															"nativeSrc": "6701:12:9",
															"nodeType": "YulAssignment",
															"src": "6701:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6708:5:9",
																"nodeType": "YulIdentifier",
																"src": "6708:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6701:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6701:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6659:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6677:5:9",
														"nodeType": "YulTypedName",
														"src": "6677:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6687:3:9",
														"nodeType": "YulTypedName",
														"src": "6687:3:9",
														"type": ""
													}
												],
												"src": "6659:60:9"
											},
											{
												"body": {
													"nativeSrc": "6785:82:9",
													"nodeType": "YulBlock",
													"src": "6785:82:9",
													"statements": [
														{
															"nativeSrc": "6795:66:9",
															"nodeType": "YulAssignment",
															"src": "6795:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6853:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6853:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6835:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6835:17:9"
																				},
																				"nativeSrc": "6835:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6835:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6826:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "6826:8:9"
																		},
																		"nativeSrc": "6826:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6808:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6808:17:9"
																},
																"nativeSrc": "6808:53:9",
																"nodeType": "YulFunctionCall",
																"src": "6808:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6795:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6795:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6725:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6765:5:9",
														"nodeType": "YulTypedName",
														"src": "6765:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6775:9:9",
														"nodeType": "YulTypedName",
														"src": "6775:9:9",
														"type": ""
													}
												],
												"src": "6725:142:9"
											},
											{
												"body": {
													"nativeSrc": "6920:28:9",
													"nodeType": "YulBlock",
													"src": "6920:28:9",
													"statements": [
														{
															"nativeSrc": "6930:12:9",
															"nodeType": "YulAssignment",
															"src": "6930:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6937:5:9",
																"nodeType": "YulIdentifier",
																"src": "6937:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6930:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6873:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6906:5:9",
														"nodeType": "YulTypedName",
														"src": "6906:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6916:3:9",
														"nodeType": "YulTypedName",
														"src": "6916:3:9",
														"type": ""
													}
												],
												"src": "6873:75:9"
											},
											{
												"body": {
													"nativeSrc": "7030:193:9",
													"nodeType": "YulBlock",
													"src": "7030:193:9",
													"statements": [
														{
															"nativeSrc": "7040:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7040:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "7095:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "7095:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "7064:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7064:30:9"
																},
																"nativeSrc": "7064:39:9",
																"nodeType": "YulFunctionCall",
																"src": "7064:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "7044:16:9",
																	"nodeType": "YulTypedName",
																	"src": "7044:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7119:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7159:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "7159:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7153:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7153:5:9"
																				},
																				"nativeSrc": "7153:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7153:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7166:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7166:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7198:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "7198:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7174:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "7174:23:9"
																				},
																				"nativeSrc": "7174:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7174:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "7125:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "7125:27:9"
																		},
																		"nativeSrc": "7125:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7125:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "7112:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:9"
																},
																"nativeSrc": "7112:105:9",
																"nodeType": "YulFunctionCall",
																"src": "7112:105:9"
															},
															"nativeSrc": "7112:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "7112:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6954:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7007:4:9",
														"nodeType": "YulTypedName",
														"src": "7007:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7013:6:9",
														"nodeType": "YulTypedName",
														"src": "7013:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "7021:7:9",
														"nodeType": "YulTypedName",
														"src": "7021:7:9",
														"type": ""
													}
												],
												"src": "6954:269:9"
											},
											{
												"body": {
													"nativeSrc": "7278:24:9",
													"nodeType": "YulBlock",
													"src": "7278:24:9",
													"statements": [
														{
															"nativeSrc": "7288:8:9",
															"nodeType": "YulAssignment",
															"src": "7288:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "7295:1:9",
																"nodeType": "YulLiteral",
																"src": "7295:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7288:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7229:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7274:3:9",
														"nodeType": "YulTypedName",
														"src": "7274:3:9",
														"type": ""
													}
												],
												"src": "7229:73:9"
											},
											{
												"body": {
													"nativeSrc": "7361:136:9",
													"nodeType": "YulBlock",
													"src": "7361:136:9",
													"statements": [
														{
															"nativeSrc": "7371:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7371:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7385:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "7385:30:9"
																},
																"nativeSrc": "7385:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7385:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7375:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7375:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7470:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7470:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7476:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7484:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7484:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7426:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7426:43:9"
																},
																"nativeSrc": "7426:65:9",
																"nodeType": "YulFunctionCall",
																"src": "7426:65:9"
															},
															"nativeSrc": "7426:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "7426:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7308:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7347:4:9",
														"nodeType": "YulTypedName",
														"src": "7347:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7353:6:9",
														"nodeType": "YulTypedName",
														"src": "7353:6:9",
														"type": ""
													}
												],
												"src": "7308:189:9"
											},
											{
												"body": {
													"nativeSrc": "7553:136:9",
													"nodeType": "YulBlock",
													"src": "7553:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7620:63:9",
																"nodeType": "YulBlock",
																"src": "7620:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7664:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7664:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7671:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7671:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7634:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "7634:29:9"
																			},
																			"nativeSrc": "7634:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7634:39:9"
																		},
																		"nativeSrc": "7634:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7634:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7573:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7573:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7580:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7580:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7570:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7570:2:9"
																},
																"nativeSrc": "7570:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7570:14:9"
															},
															"nativeSrc": "7563:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7585:26:9",
																"nodeType": "YulBlock",
																"src": "7585:26:9",
																"statements": [
																	{
																		"nativeSrc": "7587:22:9",
																		"nodeType": "YulAssignment",
																		"src": "7587:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7600:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7600:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7607:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7607:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7596:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7596:3:9"
																			},
																			"nativeSrc": "7596:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7596:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7587:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7587:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7567:2:9",
																"nodeType": "YulBlock",
																"src": "7567:2:9",
																"statements": []
															},
															"src": "7563:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7503:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7541:5:9",
														"nodeType": "YulTypedName",
														"src": "7541:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7548:3:9",
														"nodeType": "YulTypedName",
														"src": "7548:3:9",
														"type": ""
													}
												],
												"src": "7503:186:9"
											},
											{
												"body": {
													"nativeSrc": "7774:464:9",
													"nodeType": "YulBlock",
													"src": "7774:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7800:431:9",
																"nodeType": "YulBlock",
																"src": "7800:431:9",
																"statements": [
																	{
																		"nativeSrc": "7814:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7814:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7862:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7862:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7830:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "7830:31:9"
																			},
																			"nativeSrc": "7830:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7830:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7818:8:9",
																				"nodeType": "YulTypedName",
																				"src": "7818:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7881:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7881:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7904:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7904:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7932:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "7932:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7914:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "7914:17:9"
																					},
																					"nativeSrc": "7914:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7914:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7900:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7900:3:9"
																			},
																			"nativeSrc": "7900:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7885:11:9",
																				"nodeType": "YulTypedName",
																				"src": "7885:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8101:27:9",
																			"nodeType": "YulBlock",
																			"src": "8101:27:9",
																			"statements": [
																				{
																					"nativeSrc": "8103:23:9",
																					"nodeType": "YulAssignment",
																					"src": "8103:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "8118:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "8118:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "8103:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "8103:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "8085:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "8085:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8097:2:9",
																					"nodeType": "YulLiteral",
																					"src": "8097:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "8082:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "8082:2:9"
																			},
																			"nativeSrc": "8082:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8082:18:9"
																		},
																		"nativeSrc": "8079:49:9",
																		"nodeType": "YulIf",
																		"src": "8079:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8170:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "8170:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8187:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "8187:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8215:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8215:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8197:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "8197:17:9"
																							},
																							"nativeSrc": "8197:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8197:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8183:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8183:3:9"
																					},
																					"nativeSrc": "8183:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8183:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "8141:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "8141:28:9"
																			},
																			"nativeSrc": "8141:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8141:80:9"
																		},
																		"nativeSrc": "8141:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8141:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7791:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7791:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7796:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7788:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7788:2:9"
																},
																"nativeSrc": "7788:11:9",
																"nodeType": "YulFunctionCall",
																"src": "7788:11:9"
															},
															"nativeSrc": "7785:446:9",
															"nodeType": "YulIf",
															"src": "7785:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7695:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7750:5:9",
														"nodeType": "YulTypedName",
														"src": "7750:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7757:3:9",
														"nodeType": "YulTypedName",
														"src": "7757:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7762:10:9",
														"nodeType": "YulTypedName",
														"src": "7762:10:9",
														"type": ""
													}
												],
												"src": "7695:543:9"
											},
											{
												"body": {
													"nativeSrc": "8307:54:9",
													"nodeType": "YulBlock",
													"src": "8307:54:9",
													"statements": [
														{
															"nativeSrc": "8317:37:9",
															"nodeType": "YulAssignment",
															"src": "8317:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8342:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8342:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8348:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8348:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8338:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:9"
																},
																"nativeSrc": "8338:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8338:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8317:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "8317:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8244:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8282:4:9",
														"nodeType": "YulTypedName",
														"src": "8282:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8288:5:9",
														"nodeType": "YulTypedName",
														"src": "8288:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8298:8:9",
														"nodeType": "YulTypedName",
														"src": "8298:8:9",
														"type": ""
													}
												],
												"src": "8244:117:9"
											},
											{
												"body": {
													"nativeSrc": "8418:118:9",
													"nodeType": "YulBlock",
													"src": "8418:118:9",
													"statements": [
														{
															"nativeSrc": "8428:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8428:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8477:1:9",
																						"nodeType": "YulLiteral",
																						"src": "8477:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8480:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "8480:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8473:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8473:3:9"
																				},
																				"nativeSrc": "8473:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8473:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8492:1:9",
																						"nodeType": "YulLiteral",
																						"src": "8492:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8488:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8488:3:9"
																				},
																				"nativeSrc": "8488:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8488:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8444:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "8444:28:9"
																		},
																		"nativeSrc": "8444:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8444:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8440:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:9"
																},
																"nativeSrc": "8440:56:9",
																"nodeType": "YulFunctionCall",
																"src": "8440:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8432:4:9",
																	"nodeType": "YulTypedName",
																	"src": "8432:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8505:25:9",
															"nodeType": "YulAssignment",
															"src": "8505:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8519:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8519:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8525:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8525:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8515:3:9"
																},
																"nativeSrc": "8515:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8515:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8505:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8367:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8395:4:9",
														"nodeType": "YulTypedName",
														"src": "8395:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8401:5:9",
														"nodeType": "YulTypedName",
														"src": "8401:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8411:6:9",
														"nodeType": "YulTypedName",
														"src": "8411:6:9",
														"type": ""
													}
												],
												"src": "8367:169:9"
											},
											{
												"body": {
													"nativeSrc": "8622:214:9",
													"nodeType": "YulBlock",
													"src": "8622:214:9",
													"statements": [
														{
															"nativeSrc": "8755:37:9",
															"nodeType": "YulAssignment",
															"src": "8755:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8782:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8782:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8788:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8788:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8763:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "8763:18:9"
																},
																"nativeSrc": "8763:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8763:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8755:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:9"
																}
															]
														},
														{
															"nativeSrc": "8801:29:9",
															"nodeType": "YulAssignment",
															"src": "8801:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8812:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8812:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8822:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8822:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8825:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8825:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8818:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:9"
																		},
																		"nativeSrc": "8818:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8809:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8809:2:9"
																},
																"nativeSrc": "8809:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8809:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8801:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8801:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8541:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8603:4:9",
														"nodeType": "YulTypedName",
														"src": "8603:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8609:3:9",
														"nodeType": "YulTypedName",
														"src": "8609:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8617:4:9",
														"nodeType": "YulTypedName",
														"src": "8617:4:9",
														"type": ""
													}
												],
												"src": "8541:295:9"
											},
											{
												"body": {
													"nativeSrc": "8933:1303:9",
													"nodeType": "YulBlock",
													"src": "8933:1303:9",
													"statements": [
														{
															"nativeSrc": "8944:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8944:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8991:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8991:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8958:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "8958:32:9"
																},
																"nativeSrc": "8958:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8958:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8948:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8948:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9080:22:9",
																"nodeType": "YulBlock",
																"src": "9080:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9082:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9082:16:9"
																			},
																			"nativeSrc": "9082:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9082:18:9"
																		},
																		"nativeSrc": "9082:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9082:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9052:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9052:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9060:18:9",
																		"nodeType": "YulLiteral",
																		"src": "9060:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9049:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9049:2:9"
																},
																"nativeSrc": "9049:30:9",
																"nodeType": "YulFunctionCall",
																"src": "9049:30:9"
															},
															"nativeSrc": "9046:56:9",
															"nodeType": "YulIf",
															"src": "9046:56:9"
														},
														{
															"nativeSrc": "9112:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9112:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "9152:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9152:5:9"
																		},
																		"nativeSrc": "9152:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9152:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "9126:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "9126:25:9"
																},
																"nativeSrc": "9126:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9126:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "9116:6:9",
																	"nodeType": "YulTypedName",
																	"src": "9116:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9257:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9257:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9263:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9263:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9271:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9211:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "9211:45:9"
																},
																"nativeSrc": "9211:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9211:67:9"
															},
															"nativeSrc": "9211:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "9211:67:9"
														},
														{
															"nativeSrc": "9288:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9288:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "9305:1:9",
																"nodeType": "YulLiteral",
																"src": "9305:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9292:9:9",
																	"nodeType": "YulTypedName",
																	"src": "9292:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9316:17:9",
															"nodeType": "YulAssignment",
															"src": "9316:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "9329:4:9",
																"nodeType": "YulLiteral",
																"src": "9329:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9316:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "9316:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9380:611:9",
																		"nodeType": "YulBlock",
																		"src": "9380:611:9",
																		"statements": [
																			{
																				"nativeSrc": "9394:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9394:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9413:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "9413:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9425:4:9",
																									"nodeType": "YulLiteral",
																									"src": "9425:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9421:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9421:3:9"
																							},
																							"nativeSrc": "9421:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9421:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9409:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "9409:3:9"
																					},
																					"nativeSrc": "9409:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9409:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9398:7:9",
																						"nodeType": "YulTypedName",
																						"src": "9398:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9445:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9445:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9491:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9491:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9459:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "9459:31:9"
																					},
																					"nativeSrc": "9459:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9459:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9449:6:9",
																						"nodeType": "YulTypedName",
																						"src": "9449:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9509:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9509:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9518:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9518:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9513:1:9",
																						"nodeType": "YulTypedName",
																						"src": "9513:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9577:163:9",
																					"nodeType": "YulBlock",
																					"src": "9577:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9602:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9602:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9620:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "9620:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9625:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "9625:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9616:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "9616:3:9"
																												},
																												"nativeSrc": "9616:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "9616:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9610:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "9610:5:9"
																										},
																										"nativeSrc": "9610:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9610:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9595:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9595:6:9"
																								},
																								"nativeSrc": "9595:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9595:42:9"
																							},
																							"nativeSrc": "9595:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9595:42:9"
																						},
																						{
																							"nativeSrc": "9654:24:9",
																							"nodeType": "YulAssignment",
																							"src": "9654:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9668:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9668:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9676:1:9",
																										"nodeType": "YulLiteral",
																										"src": "9676:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9664:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9664:3:9"
																								},
																								"nativeSrc": "9664:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9664:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9654:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9654:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9695:31:9",
																							"nodeType": "YulAssignment",
																							"src": "9695:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9712:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "9712:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9723:2:9",
																										"nodeType": "YulLiteral",
																										"src": "9723:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9708:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9708:3:9"
																								},
																								"nativeSrc": "9708:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9708:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9695:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "9695:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9543:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "9543:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9546:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "9546:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9540:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9540:2:9"
																					},
																					"nativeSrc": "9540:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9540:14:9"
																				},
																				"nativeSrc": "9532:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9555:21:9",
																					"nodeType": "YulBlock",
																					"src": "9555:21:9",
																					"statements": [
																						{
																							"nativeSrc": "9557:17:9",
																							"nodeType": "YulAssignment",
																							"src": "9557:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9566:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "9566:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9569:4:9",
																										"nodeType": "YulLiteral",
																										"src": "9569:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9562:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9562:3:9"
																								},
																								"nativeSrc": "9562:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9562:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9557:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "9557:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9536:3:9",
																					"nodeType": "YulBlock",
																					"src": "9536:3:9",
																					"statements": []
																				},
																				"src": "9532:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "9776:156:9",
																					"nodeType": "YulBlock",
																					"src": "9776:156:9",
																					"statements": [
																						{
																							"nativeSrc": "9794:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9794:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9821:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9821:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9826:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9826:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9817:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9817:3:9"
																										},
																										"nativeSrc": "9817:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9817:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9811:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9811:5:9"
																								},
																								"nativeSrc": "9811:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9811:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9798:9:9",
																									"nodeType": "YulTypedName",
																									"src": "9798:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9861:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9861:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9888:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9888:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9903:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "9903:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9911:4:9",
																														"nodeType": "YulLiteral",
																														"src": "9911:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9899:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "9899:3:9"
																												},
																												"nativeSrc": "9899:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "9899:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9869:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "9869:18:9"
																										},
																										"nativeSrc": "9869:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9869:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9854:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9854:6:9"
																								},
																								"nativeSrc": "9854:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9854:64:9"
																							},
																							"nativeSrc": "9854:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9854:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9759:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "9759:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9768:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "9768:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9756:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9756:2:9"
																					},
																					"nativeSrc": "9756:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9756:19:9"
																				},
																				"nativeSrc": "9753:179:9",
																				"nodeType": "YulIf",
																				"src": "9753:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9952:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9952:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9966:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "9966:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9974:1:9",
																											"nodeType": "YulLiteral",
																											"src": "9974:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9962:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "9962:3:9"
																									},
																									"nativeSrc": "9962:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "9962:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9978:1:9",
																									"nodeType": "YulLiteral",
																									"src": "9978:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9958:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9958:3:9"
																							},
																							"nativeSrc": "9958:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9958:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9945:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9945:6:9"
																					},
																					"nativeSrc": "9945:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9945:36:9"
																				},
																				"nativeSrc": "9945:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9945:36:9"
																			}
																		]
																	},
																	"nativeSrc": "9373:618:9",
																	"nodeType": "YulCase",
																	"src": "9373:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9378:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9378:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10008:222:9",
																		"nodeType": "YulBlock",
																		"src": "10008:222:9",
																		"statements": [
																			{
																				"nativeSrc": "10022:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10022:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10035:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10035:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "10026:5:9",
																						"nodeType": "YulTypedName",
																						"src": "10026:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10059:67:9",
																					"nodeType": "YulBlock",
																					"src": "10059:67:9",
																					"statements": [
																						{
																							"nativeSrc": "10077:35:9",
																							"nodeType": "YulAssignment",
																							"src": "10077:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "10096:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "10096:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "10101:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "10101:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10092:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "10092:3:9"
																										},
																										"nativeSrc": "10092:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "10092:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "10086:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "10086:5:9"
																								},
																								"nativeSrc": "10086:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "10086:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "10077:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "10077:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "10052:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10052:6:9"
																				},
																				"nativeSrc": "10049:77:9",
																				"nodeType": "YulIf",
																				"src": "10049:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10146:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "10146:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10205:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "10205:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10212:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "10212:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "10152:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "10152:52:9"
																							},
																							"nativeSrc": "10152:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "10152:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "10139:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "10139:6:9"
																					},
																					"nativeSrc": "10139:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10139:81:9"
																				},
																				"nativeSrc": "10139:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "10139:81:9"
																			}
																		]
																	},
																	"nativeSrc": "10000:230:9",
																	"nodeType": "YulCase",
																	"src": "10000:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9353:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9353:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9350:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9350:2:9"
																},
																"nativeSrc": "9350:14:9",
																"nodeType": "YulFunctionCall",
																"src": "9350:14:9"
															},
															"nativeSrc": "9343:887:9",
															"nodeType": "YulSwitch",
															"src": "9343:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8841:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8922:4:9",
														"nodeType": "YulTypedName",
														"src": "8922:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8928:3:9",
														"nodeType": "YulTypedName",
														"src": "8928:3:9",
														"type": ""
													}
												],
												"src": "8841:1395:9"
											},
											{
												"body": {
													"nativeSrc": "10307:53:9",
													"nodeType": "YulBlock",
													"src": "10307:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10324:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10324:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10347:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10347:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10329:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "10329:17:9"
																		},
																		"nativeSrc": "10329:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10329:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10317:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:9"
																},
																"nativeSrc": "10317:37:9",
																"nodeType": "YulFunctionCall",
																"src": "10317:37:9"
															},
															"nativeSrc": "10317:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "10317:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10242:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10295:5:9",
														"nodeType": "YulTypedName",
														"src": "10295:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10302:3:9",
														"nodeType": "YulTypedName",
														"src": "10302:3:9",
														"type": ""
													}
												],
												"src": "10242:118:9"
											},
											{
												"body": {
													"nativeSrc": "10464:124:9",
													"nodeType": "YulBlock",
													"src": "10464:124:9",
													"statements": [
														{
															"nativeSrc": "10474:26:9",
															"nodeType": "YulAssignment",
															"src": "10474:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10486:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10486:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10497:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10497:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10482:3:9"
																},
																"nativeSrc": "10482:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10482:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10474:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10474:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10554:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10554:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10567:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10567:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10578:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10578:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10563:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:9"
																		},
																		"nativeSrc": "10563:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10510:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10510:43:9"
																},
																"nativeSrc": "10510:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10510:71:9"
															},
															"nativeSrc": "10510:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10510:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10366:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10436:9:9",
														"nodeType": "YulTypedName",
														"src": "10436:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10448:6:9",
														"nodeType": "YulTypedName",
														"src": "10448:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10459:4:9",
														"nodeType": "YulTypedName",
														"src": "10459:4:9",
														"type": ""
													}
												],
												"src": "10366:222:9"
											},
											{
												"body": {
													"nativeSrc": "10690:73:9",
													"nodeType": "YulBlock",
													"src": "10690:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10707:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10712:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10712:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10700:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10700:6:9"
																},
																"nativeSrc": "10700:19:9",
																"nodeType": "YulFunctionCall",
																"src": "10700:19:9"
															},
															"nativeSrc": "10700:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "10700:19:9"
														},
														{
															"nativeSrc": "10728:29:9",
															"nodeType": "YulAssignment",
															"src": "10728:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10747:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10747:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10752:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10752:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10743:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10743:3:9"
																},
																"nativeSrc": "10743:14:9",
																"nodeType": "YulFunctionCall",
																"src": "10743:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10728:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "10728:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10594:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10662:3:9",
														"nodeType": "YulTypedName",
														"src": "10662:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10667:6:9",
														"nodeType": "YulTypedName",
														"src": "10667:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10678:11:9",
														"nodeType": "YulTypedName",
														"src": "10678:11:9",
														"type": ""
													}
												],
												"src": "10594:169:9"
											},
											{
												"body": {
													"nativeSrc": "10875:127:9",
													"nodeType": "YulBlock",
													"src": "10875:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10897:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10897:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10905:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10905:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10893:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10893:3:9"
																		},
																		"nativeSrc": "10893:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10893:14:9"
																	},
																	{
																		"hexValue": "496e697469616c20737570706c792063616e6e6f74206265206d6f7265207468",
																		"kind": "string",
																		"nativeSrc": "10909:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10909:34:9",
																		"type": "",
																		"value": "Initial supply cannot be more th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10886:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10886:6:9"
																},
																"nativeSrc": "10886:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10886:58:9"
															},
															"nativeSrc": "10886:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10886:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10965:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10965:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10973:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10973:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10961:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10961:3:9"
																		},
																		"nativeSrc": "10961:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10961:15:9"
																	},
																	{
																		"hexValue": "616e206d617820737570706c792e",
																		"kind": "string",
																		"nativeSrc": "10978:16:9",
																		"nodeType": "YulLiteral",
																		"src": "10978:16:9",
																		"type": "",
																		"value": "an max supply."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10954:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10954:6:9"
																},
																"nativeSrc": "10954:41:9",
																"nodeType": "YulFunctionCall",
																"src": "10954:41:9"
															},
															"nativeSrc": "10954:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "10954:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809",
												"nativeSrc": "10769:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10867:6:9",
														"nodeType": "YulTypedName",
														"src": "10867:6:9",
														"type": ""
													}
												],
												"src": "10769:233:9"
											},
											{
												"body": {
													"nativeSrc": "11154:220:9",
													"nodeType": "YulBlock",
													"src": "11154:220:9",
													"statements": [
														{
															"nativeSrc": "11164:74:9",
															"nodeType": "YulAssignment",
															"src": "11164:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11230:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11230:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11235:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11235:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11171:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11171:58:9"
																},
																"nativeSrc": "11171:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11171:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11164:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11164:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11336:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11336:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809",
																	"nativeSrc": "11247:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11247:88:9"
																},
																"nativeSrc": "11247:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11247:93:9"
															},
															"nativeSrc": "11247:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11247:93:9"
														},
														{
															"nativeSrc": "11349:19:9",
															"nodeType": "YulAssignment",
															"src": "11349:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11360:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11360:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11365:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11365:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11356:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11356:3:9"
																},
																"nativeSrc": "11356:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11356:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11349:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11349:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11008:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11142:3:9",
														"nodeType": "YulTypedName",
														"src": "11142:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11150:3:9",
														"nodeType": "YulTypedName",
														"src": "11150:3:9",
														"type": ""
													}
												],
												"src": "11008:366:9"
											},
											{
												"body": {
													"nativeSrc": "11551:248:9",
													"nodeType": "YulBlock",
													"src": "11551:248:9",
													"statements": [
														{
															"nativeSrc": "11561:26:9",
															"nodeType": "YulAssignment",
															"src": "11561:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11573:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11573:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11584:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11584:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11569:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:9"
																},
																"nativeSrc": "11569:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11569:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11561:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11561:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11608:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11608:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11619:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11619:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11604:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11604:3:9"
																		},
																		"nativeSrc": "11604:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11604:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11627:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11627:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11633:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11633:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11623:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11623:3:9"
																		},
																		"nativeSrc": "11623:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11623:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11597:6:9"
																},
																"nativeSrc": "11597:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11597:47:9"
															},
															"nativeSrc": "11597:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11597:47:9"
														},
														{
															"nativeSrc": "11653:139:9",
															"nodeType": "YulAssignment",
															"src": "11653:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11787:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11787:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11661:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11661:124:9"
																},
																"nativeSrc": "11661:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11661:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11653:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11653:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11380:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11531:9:9",
														"nodeType": "YulTypedName",
														"src": "11531:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11546:4:9",
														"nodeType": "YulTypedName",
														"src": "11546:4:9",
														"type": ""
													}
												],
												"src": "11380:419:9"
											},
											{
												"body": {
													"nativeSrc": "11833:152:9",
													"nodeType": "YulBlock",
													"src": "11833:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11850:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11850:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11853:77:9",
																		"nodeType": "YulLiteral",
																		"src": "11853:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11843:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:9"
																},
																"nativeSrc": "11843:88:9",
																"nodeType": "YulFunctionCall",
																"src": "11843:88:9"
															},
															"nativeSrc": "11843:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "11843:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11947:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11947:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11950:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11950:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11940:6:9"
																},
																"nativeSrc": "11940:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11940:15:9"
															},
															"nativeSrc": "11940:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11940:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11971:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11971:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11974:4:9",
																		"nodeType": "YulLiteral",
																		"src": "11974:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11964:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11964:6:9"
																},
																"nativeSrc": "11964:15:9",
																"nodeType": "YulFunctionCall",
																"src": "11964:15:9"
															},
															"nativeSrc": "11964:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "11964:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11805:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "11805:180:9"
											},
											{
												"body": {
													"nativeSrc": "12035:147:9",
													"nodeType": "YulBlock",
													"src": "12035:147:9",
													"statements": [
														{
															"nativeSrc": "12045:25:9",
															"nodeType": "YulAssignment",
															"src": "12045:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12068:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12068:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12050:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12050:17:9"
																},
																"nativeSrc": "12050:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12050:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12045:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12045:1:9"
																}
															]
														},
														{
															"nativeSrc": "12079:25:9",
															"nodeType": "YulAssignment",
															"src": "12079:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12102:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12102:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12084:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12084:17:9"
																},
																"nativeSrc": "12084:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12084:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12079:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12079:1:9"
																}
															]
														},
														{
															"nativeSrc": "12113:16:9",
															"nodeType": "YulAssignment",
															"src": "12113:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12124:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12124:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12127:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12127:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12120:3:9"
																},
																"nativeSrc": "12120:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12120:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12113:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12153:22:9",
																"nodeType": "YulBlock",
																"src": "12153:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12155:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12155:16:9"
																			},
																			"nativeSrc": "12155:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12155:18:9"
																		},
																		"nativeSrc": "12155:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12155:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12145:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12145:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12148:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12148:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12142:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12142:2:9"
																},
																"nativeSrc": "12142:10:9",
																"nodeType": "YulFunctionCall",
																"src": "12142:10:9"
															},
															"nativeSrc": "12139:36:9",
															"nodeType": "YulIf",
															"src": "12139:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11991:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12022:1:9",
														"nodeType": "YulTypedName",
														"src": "12022:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12025:1:9",
														"nodeType": "YulTypedName",
														"src": "12025:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12031:3:9",
														"nodeType": "YulTypedName",
														"src": "12031:3:9",
														"type": ""
													}
												],
												"src": "11991:191:9"
											},
											{
												"body": {
													"nativeSrc": "12253:53:9",
													"nodeType": "YulBlock",
													"src": "12253:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12270:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12270:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12293:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12293:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12275:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "12275:17:9"
																		},
																		"nativeSrc": "12275:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12275:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12263:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12263:6:9"
																},
																"nativeSrc": "12263:37:9",
																"nodeType": "YulFunctionCall",
																"src": "12263:37:9"
															},
															"nativeSrc": "12263:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "12263:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12188:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12241:5:9",
														"nodeType": "YulTypedName",
														"src": "12241:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12248:3:9",
														"nodeType": "YulTypedName",
														"src": "12248:3:9",
														"type": ""
													}
												],
												"src": "12188:118:9"
											},
											{
												"body": {
													"nativeSrc": "12466:288:9",
													"nodeType": "YulBlock",
													"src": "12466:288:9",
													"statements": [
														{
															"nativeSrc": "12476:26:9",
															"nodeType": "YulAssignment",
															"src": "12476:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12488:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12488:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12499:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12499:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12484:3:9"
																},
																"nativeSrc": "12484:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12484:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12476:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12476:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12556:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12556:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12569:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12569:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12580:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12580:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12565:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12565:3:9"
																		},
																		"nativeSrc": "12565:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12565:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12512:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12512:43:9"
																},
																"nativeSrc": "12512:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12512:71:9"
															},
															"nativeSrc": "12512:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12512:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12637:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12637:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12650:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12650:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12661:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12661:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12646:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12646:3:9"
																		},
																		"nativeSrc": "12646:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12646:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12593:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12593:43:9"
																},
																"nativeSrc": "12593:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12593:72:9"
															},
															"nativeSrc": "12593:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12593:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12719:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12719:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12732:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12732:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12743:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12743:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12728:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12728:3:9"
																		},
																		"nativeSrc": "12728:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12728:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12675:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12675:43:9"
																},
																"nativeSrc": "12675:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12675:72:9"
															},
															"nativeSrc": "12675:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12675:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12312:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12422:9:9",
														"nodeType": "YulTypedName",
														"src": "12422:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12434:6:9",
														"nodeType": "YulTypedName",
														"src": "12434:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12442:6:9",
														"nodeType": "YulTypedName",
														"src": "12442:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12450:6:9",
														"nodeType": "YulTypedName",
														"src": "12450:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12461:4:9",
														"nodeType": "YulTypedName",
														"src": "12461:4:9",
														"type": ""
													}
												],
												"src": "12312:442:9"
											},
											{
												"body": {
													"nativeSrc": "12858:124:9",
													"nodeType": "YulBlock",
													"src": "12858:124:9",
													"statements": [
														{
															"nativeSrc": "12868:26:9",
															"nodeType": "YulAssignment",
															"src": "12868:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12880:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12880:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12891:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12891:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12876:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:9"
																},
																"nativeSrc": "12876:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12876:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12868:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12868:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12948:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12948:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12961:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12961:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12972:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12972:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12957:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12957:3:9"
																		},
																		"nativeSrc": "12957:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12957:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12904:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12904:43:9"
																},
																"nativeSrc": "12904:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12904:71:9"
															},
															"nativeSrc": "12904:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12904:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12760:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12830:9:9",
														"nodeType": "YulTypedName",
														"src": "12830:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12842:6:9",
														"nodeType": "YulTypedName",
														"src": "12842:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12853:4:9",
														"nodeType": "YulTypedName",
														"src": "12853:4:9",
														"type": ""
													}
												],
												"src": "12760:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial supply cannot be more th\")\n\n        mstore(add(memPtr, 32), \"an max supply.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600b5f6101000a81548160ff021916908315150217905550348015610028575f80fd5b50604051612b37380380612b37833981810160405281019061004a91906106e7565b808686816003908161005c91906109ac565b50806004908161006c91906109ac565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100df575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d69190610a8a565b60405180910390fd5b6100ee8161017660201b60201c565b5060016006819055508284111561013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013190610b23565b60405180910390fd5b61014a818561023960201b60201c565b826007819055508160085f6101000a81548160ff021916908360ff160217905550505050505050610bfe565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102a9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102a09190610a8a565b60405180910390fd5b6102ba5f83836102be60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361030e578060025f8282546103029190610b6e565b925050819055506103dc565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610397578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038e93929190610bb0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610423578060025f828254039250508190555061046d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104ca9190610be5565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610536826104f0565b810181811067ffffffffffffffff8211171561055557610554610500565b5b80604052505050565b5f6105676104d7565b9050610573828261052d565b919050565b5f67ffffffffffffffff82111561059257610591610500565b5b61059b826104f0565b9050602081019050919050565b8281835e5f83830152505050565b5f6105c86105c384610578565b61055e565b9050828152602081018484840111156105e4576105e36104ec565b5b6105ef8482856105a8565b509392505050565b5f82601f83011261060b5761060a6104e8565b5b815161061b8482602086016105b6565b91505092915050565b5f819050919050565b61063681610624565b8114610640575f80fd5b50565b5f815190506106518161062d565b92915050565b5f60ff82169050919050565b61066c81610657565b8114610676575f80fd5b50565b5f8151905061068781610663565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106b68261068d565b9050919050565b6106c6816106ac565b81146106d0575f80fd5b50565b5f815190506106e1816106bd565b92915050565b5f805f805f8060c08789031215610701576107006104e0565b5b5f87015167ffffffffffffffff81111561071e5761071d6104e4565b5b61072a89828a016105f7565b965050602087015167ffffffffffffffff81111561074b5761074a6104e4565b5b61075789828a016105f7565b955050604061076889828a01610643565b945050606061077989828a01610643565b935050608061078a89828a01610679565b92505060a061079b89828a016106d3565b9150509295509295509295565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107f657607f821691505b602082108103610809576108086107b2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261086b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610830565b6108758683610830565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108b06108ab6108a684610624565b61088d565b610624565b9050919050565b5f819050919050565b6108c983610896565b6108dd6108d5826108b7565b84845461083c565b825550505050565b5f90565b6108f16108e5565b6108fc8184846108c0565b505050565b5b8181101561091f576109145f826108e9565b600181019050610902565b5050565b601f821115610964576109358161080f565b61093e84610821565b8101602085101561094d578190505b61096161095985610821565b830182610901565b50505b505050565b5f82821c905092915050565b5f6109845f1984600802610969565b1980831691505092915050565b5f61099c8383610975565b9150826002028217905092915050565b6109b5826107a8565b67ffffffffffffffff8111156109ce576109cd610500565b5b6109d882546107df565b6109e3828285610923565b5f60209050601f831160018114610a14575f8415610a02578287015190505b610a0c8582610991565b865550610a73565b601f198416610a228661080f565b5f5b82811015610a4957848901518255600182019150602085019450602081019050610a24565b86831015610a665784890151610a62601f891682610975565b8355505b6001600288020188555050505b505050505050565b610a84816106ac565b82525050565b5f602082019050610a9d5f830184610a7b565b92915050565b5f82825260208201905092915050565b7f496e697469616c20737570706c792063616e6e6f74206265206d6f72652074685f8201527f616e206d617820737570706c792e000000000000000000000000000000000000602082015250565b5f610b0d602e83610aa3565b9150610b1882610ab3565b604082019050919050565b5f6020820190508181035f830152610b3a81610b01565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b7882610624565b9150610b8383610624565b9250828201905080821115610b9b57610b9a610b41565b5b92915050565b610baa81610624565b82525050565b5f606082019050610bc35f830186610a7b565b610bd06020830185610ba1565b610bdd6040830184610ba1565b949350505050565b5f602082019050610bf85f830184610ba1565b92915050565b611f2c80610c0b5f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063afe8289a1161007a578063afe8289a14610351578063c80521071461036d578063d5abeb0114610389578063d82e3962146103a7578063dd62ed3e146103d7578063f2fde38b146104075761014b565b8063715018a6146102b557806379cc6790146102bf5780638da5cb5b146102db57806395d89b41146102f9578063a64254c314610317578063a9059cbb146103215761014b565b806323b872dd1161011357806323b872dd146101e1578063313ce5671461021157806342966c681461022f57806351c6590a1461024b578063527569861461026757806370a08231146102855761014b565b806306fdde031461014f578063095ea7b31461016d57806318160ddd1461019d57806321208fa2146101bb5780632254b79c146101c5575b5f80fd5b610157610423565b60405161016491906117ed565b60405180910390f35b6101876004803603810190610182919061189e565b6104b3565b60405161019491906118f6565b60405180910390f35b6101a56104d5565b6040516101b2919061191e565b60405180910390f35b6101c36104de565b005b6101df60048036038101906101da9190611937565b610501565b005b6101fb60048036038101906101f69190611962565b6106a4565b60405161020891906118f6565b60405180910390f35b6102196106d2565b60405161022691906119cd565b60405180910390f35b61024960048036038101906102449190611937565b6106e7565b005b61026560048036038101906102609190611937565b6106fb565b005b61026f61079e565b60405161027c91906119cd565b60405180910390f35b61029f600480360381019061029a91906119e6565b6107b0565b6040516102ac919061191e565b60405180910390f35b6102bd6107f5565b005b6102d960048036038101906102d4919061189e565b610808565b005b6102e3610828565b6040516102f09190611a20565b60405180910390f35b610301610850565b60405161030e91906117ed565b60405180910390f35b61031f6108e0565b005b61033b6004803603810190610336919061189e565b610904565b60405161034891906118f6565b60405180910390f35b61036b60048036038101906103669190611937565b610926565b005b61038760048036038101906103829190611937565b6109de565b005b610391610c99565b60405161039e919061191e565b60405180910390f35b6103c160048036038101906103bc91906119e6565b610c9f565b6040516103ce919061191e565b60405180910390f35b6103f160048036038101906103ec9190611a39565b610d7a565b6040516103fe919061191e565b60405180910390f35b610421600480360381019061041c91906119e6565b610dfc565b005b60606003805461043290611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611aa4565b80156104a95780601f10610480576101008083540402835291602001916104a9565b820191905f5260205f20905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b5f806104bd610e80565b90506104ca818585610e87565b600191505092915050565b5f600254905090565b6104e6610e99565b5f600b5f6101000a81548160ff021916908315150217905550565b610509610e99565b610511610f20565b60095f61051c610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90611b1e565b60405180910390fd5b8060095f6105a4610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105eb9190611b69565b925050819055505f60095f6105fe610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610687575f600a5f610649610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61069930610693610828565b83610f6f565b6106a1611048565b50565b5f806106ae610e80565b90506106bb858285611052565b6106c6858585610f6f565b60019150509392505050565b5f60085f9054906101000a900460ff16905090565b6106f86106f2610e80565b826110e4565b50565b610706333083610f6f565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107529190611b9c565b9250508190555042600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b60085f9054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107fd610e99565b6108065f611163565b565b61081a82610814610e80565b83611052565b61082482826110e4565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461085f90611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461088b90611aa4565b80156108d65780601f106108ad576101008083540402835291602001916108d6565b820191905f5260205f20905b8154815290600101906020018083116108b957829003601f168201915b5050505050905090565b6108e8610e99565b6001600b5f6101000a81548160ff021916908315150217905550565b5f8061090e610e80565b905061091b818585610f6f565b600191505092915050565b61092e610e99565b8060095f61093a610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109819190611b9c565b9250508190555042600a5f610994610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109db3082611226565b50565b6109e6610f20565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90611b1e565b60405180910390fd5b62278d00600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ab29190611b9c565b421015610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90611c65565b60405180910390fd5b5f610afe33610c9f565b905060075481610b0c6104d5565b610b169190611b9c565b1115610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90611ccd565b60405180910390fd5b610b613382611226565b610b6c303384610f6f565b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bb89190611b69565b925050819055505f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610c4a575f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c8d565b42600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50610c96611048565b50565b60075481565b5f62278d00600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610cec9190611b9c565b4210610d71575f6064600560095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3f9190611ceb565b610d499190611d59565b905060075481610d576104d5565b610d619190611b9c565b11610d6f5780915050610d75565b505b5f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e04610e99565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e74575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e6b9190611a20565b60405180910390fd5b610e7d81611163565b50565b5f33905090565b610e9483838360016112a5565b505050565b610ea1610e80565b73ffffffffffffffffffffffffffffffffffffffff16610ebf610828565b73ffffffffffffffffffffffffffffffffffffffff1614610f1e57610ee2610e80565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f159190611a20565b60405180910390fd5b565b600260065403610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90611dd3565b60405180910390fd5b6002600681905550565b600b5f9054906101000a900460ff1615610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590611e3b565b60405180910390fd5b5f620186a082610fce9190611d59565b90505f8183610fdd9190611b69565b90508181610feb9190611b9c565b831461102c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102390611ea3565b60405180910390fd5b611037858583611474565b61104185836110e4565b5050505050565b6001600681905550565b5f61105d8484610d7a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110de57818110156110cf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110c693929190611ec1565b60405180910390fd5b6110dd84848484035f6112a5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161114b9190611a20565b60405180910390fd5b61115f825f83611564565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611296575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161128d9190611a20565b60405180910390fd5b6112a15f8383611564565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611315575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161130c9190611a20565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611385575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161137c9190611a20565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561146e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611465919061191e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114db9190611a20565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611554575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161154b9190611a20565b60405180910390fd5b61155f838383611564565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115b4578060025f8282546115a89190611b9c565b92505081905550611682565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561163d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161163493929190611ec1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116c9578060025f8282540392505081905550611713565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611770919061191e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117bf8261177d565b6117c98185611787565b93506117d9818560208601611797565b6117e2816117a5565b840191505092915050565b5f6020820190508181035f83015261180581846117b5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183a82611811565b9050919050565b61184a81611830565b8114611854575f80fd5b50565b5f8135905061186581611841565b92915050565b5f819050919050565b61187d8161186b565b8114611887575f80fd5b50565b5f8135905061189881611874565b92915050565b5f80604083850312156118b4576118b361180d565b5b5f6118c185828601611857565b92505060206118d28582860161188a565b9150509250929050565b5f8115159050919050565b6118f0816118dc565b82525050565b5f6020820190506119095f8301846118e7565b92915050565b6119188161186b565b82525050565b5f6020820190506119315f83018461190f565b92915050565b5f6020828403121561194c5761194b61180d565b5b5f6119598482850161188a565b91505092915050565b5f805f606084860312156119795761197861180d565b5b5f61198686828701611857565b935050602061199786828701611857565b92505060406119a88682870161188a565b9150509250925092565b5f60ff82169050919050565b6119c7816119b2565b82525050565b5f6020820190506119e05f8301846119be565b92915050565b5f602082840312156119fb576119fa61180d565b5b5f611a0884828501611857565b91505092915050565b611a1a81611830565b82525050565b5f602082019050611a335f830184611a11565b92915050565b5f8060408385031215611a4f57611a4e61180d565b5b5f611a5c85828601611857565b9250506020611a6d85828601611857565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611abb57607f821691505b602082108103611ace57611acd611a77565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611b08601483611787565b9150611b1382611ad4565b602082019050919050565b5f6020820190508181035f830152611b3581611afc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b738261186b565b9150611b7e8361186b565b9250828203905081811115611b9657611b95611b3c565b5b92915050565b5f611ba68261186b565b9150611bb18361186b565b9250828201905080821115611bc957611bc8611b3c565b5b92915050565b7f4c6971756964697479206d7573742062652070726f766964656420666f7220615f8201527f74206c65617374203330206461797320746f207175616c69667920666f72207260208201527f6577617264730000000000000000000000000000000000000000000000000000604082015250565b5f611c4f604683611787565b9150611c5a82611bcf565b606082019050919050565b5f6020820190508181035f830152611c7c81611c43565b9050919050565b7f5265776172642065786365656473206d617820737570706c79000000000000005f82015250565b5f611cb7601983611787565b9150611cc282611c83565b602082019050919050565b5f6020820190508181035f830152611ce481611cab565b9050919050565b5f611cf58261186b565b9150611d008361186b565b9250828202611d0e8161186b565b91508282048414831517611d2557611d24611b3c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d638261186b565b9150611d6e8361186b565b925082611d7e57611d7d611d2c565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611dbd601f83611787565b9150611dc882611d89565b602082019050919050565b5f6020820190508181035f830152611dea81611db1565b9050919050565b7f4369726375697420627265616b657220697320616374697665000000000000005f82015250565b5f611e25601983611787565b9150611e3082611df1565b602082019050919050565b5f6020820190508181035f830152611e5281611e19565b9050919050565b7f4275726e2076616c756520696e76616c696400000000000000000000000000005f82015250565b5f611e8d601283611787565b9150611e9882611e59565b602082019050919050565b5f6020820190508181035f830152611eba81611e81565b9050919050565b5f606082019050611ed45f830186611a11565b611ee1602083018561190f565b611eee604083018461190f565b94935050505056fea26469706673582212209c63ad704e6f86fa39459134d6c5ea5abecb7923385f4e9acf1dcf228a3f91fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B37 CODESIZE SUB DUP1 PUSH2 0x2B37 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST DUP1 DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x176 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 DUP5 GT ISZERO PUSH2 0x13A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A DUP2 DUP6 PUSH2 0x239 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xBFE JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2BA PUSH0 DUP4 DUP4 PUSH2 0x2BE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x30E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3DC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x397 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x423 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x46D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x536 DUP3 PUSH2 0x4F0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x500 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x567 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x573 DUP3 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x592 JUMPI PUSH2 0x591 PUSH2 0x500 JUMP JUMPDEST JUMPDEST PUSH2 0x59B DUP3 PUSH2 0x4F0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C8 PUSH2 0x5C3 DUP5 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x4EC JUMP JUMPDEST JUMPDEST PUSH2 0x5EF DUP5 DUP3 DUP6 PUSH2 0x5A8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x4E8 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x61B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x636 DUP2 PUSH2 0x624 JUMP JUMPDEST DUP2 EQ PUSH2 0x640 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x651 DUP2 PUSH2 0x62D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x657 JUMP JUMPDEST DUP2 EQ PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x687 DUP2 PUSH2 0x663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6B6 DUP3 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C6 DUP2 PUSH2 0x6AC JUMP JUMPDEST DUP2 EQ PUSH2 0x6D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6E1 DUP2 PUSH2 0x6BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH2 0x700 PUSH2 0x4E0 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71D PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH2 0x72A DUP10 DUP3 DUP11 ADD PUSH2 0x5F7 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x74B JUMPI PUSH2 0x74A PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH2 0x757 DUP10 DUP3 DUP11 ADD PUSH2 0x5F7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x768 DUP10 DUP3 DUP11 ADD PUSH2 0x643 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x779 DUP10 DUP3 DUP11 ADD PUSH2 0x643 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x78A DUP10 DUP3 DUP11 ADD PUSH2 0x679 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x79B DUP10 DUP3 DUP11 ADD PUSH2 0x6D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x7B2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x86B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x830 JUMP JUMPDEST PUSH2 0x875 DUP7 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B0 PUSH2 0x8AB PUSH2 0x8A6 DUP5 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C9 DUP4 PUSH2 0x896 JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x8D5 DUP3 PUSH2 0x8B7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x83C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x8F1 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x8FC DUP2 DUP5 DUP5 PUSH2 0x8C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x91F JUMPI PUSH2 0x914 PUSH0 DUP3 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x902 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x964 JUMPI PUSH2 0x935 DUP2 PUSH2 0x80F JUMP JUMPDEST PUSH2 0x93E DUP5 PUSH2 0x821 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x94D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x961 PUSH2 0x959 DUP6 PUSH2 0x821 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x901 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x984 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x969 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x99C DUP4 DUP4 PUSH2 0x975 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B5 DUP3 PUSH2 0x7A8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x500 JUMP JUMPDEST JUMPDEST PUSH2 0x9D8 DUP3 SLOAD PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x9E3 DUP3 DUP3 DUP6 PUSH2 0x923 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA14 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA02 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA0C DUP6 DUP3 PUSH2 0x991 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA22 DUP7 PUSH2 0x80F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA49 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA24 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA66 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA62 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x975 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA84 DUP2 PUSH2 0x6AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9D PUSH0 DUP4 ADD DUP5 PUSH2 0xA7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C792063616E6E6F74206265206D6F7265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E206D617820737570706C792E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB0D PUSH1 0x2E DUP4 PUSH2 0xAA3 JUMP JUMPDEST SWAP2 POP PUSH2 0xB18 DUP3 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB3A DUP2 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB78 DUP3 PUSH2 0x624 JUMP JUMPDEST SWAP2 POP PUSH2 0xB83 DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0xB41 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0x624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBC3 PUSH0 DUP4 ADD DUP7 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xBD0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0xBDD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F2C DUP1 PUSH2 0xC0B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAFE8289A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x407 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA64254C3 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x52756986 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x285 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x21208FA2 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x1C5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x4DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x8E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BD PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA DUP2 DUP6 DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x509 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x511 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x9 PUSH0 PUSH2 0x51C PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x5A4 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x5FE PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x687 JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH2 0x649 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x699 ADDRESS PUSH2 0x693 PUSH2 0x828 JUMP JUMPDEST DUP4 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x1048 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AE PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BB DUP6 DUP3 DUP6 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x6C6 DUP6 DUP6 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x6F2 PUSH2 0xE80 JUMP JUMPDEST DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x706 CALLER ADDRESS DUP4 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x806 PUSH0 PUSH2 0x1163 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81A DUP3 PUSH2 0x814 PUSH2 0xE80 JUMP JUMPDEST DUP4 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x824 DUP3 DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90E PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0xE99 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x93A PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 PUSH2 0x994 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9DB ADDRESS DUP3 PUSH2 0x1226 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAFE CALLER PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH2 0xB0C PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 CALLER DUP3 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xB6C ADDRESS CALLER DUP5 PUSH2 0xF6F JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC4A JUMPI PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC8D JUMP JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xC96 PUSH2 0x1048 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST TIMESTAMP LT PUSH2 0xD71 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH2 0xD57 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST GT PUSH2 0xD6F JUMPI DUP1 SWAP2 POP POP PUSH2 0xD75 JUMP JUMPDEST POP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0x1163 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE94 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA1 PUSH2 0xE80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBF PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1E JUMPI PUSH2 0xEE2 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5C SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP1 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFDD SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP4 EQ PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1023 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP6 DUP6 DUP4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x1041 DUP6 DUP4 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x105D DUP5 DUP5 PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10CF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12A5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115F DUP3 PUSH0 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1296 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 PUSH0 DUP4 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1315 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1385 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x146E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1554 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155F DUP4 DUP4 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15A8 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1682 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x163D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1713 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BF DUP3 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x17C9 DUP2 DUP6 PUSH2 0x1787 JUMP JUMPDEST SWAP4 POP PUSH2 0x17D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1797 JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1805 DUP2 DUP5 PUSH2 0x17B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x183A DUP3 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP2 EQ PUSH2 0x1854 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1865 DUP2 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187D DUP2 PUSH2 0x186B JUMP JUMPDEST DUP2 EQ PUSH2 0x1887 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1898 DUP2 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C1 DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18D2 DUP6 DUP3 DUP7 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F0 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x186B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1931 PUSH0 DUP4 ADD DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1959 DUP5 DUP3 DUP6 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1986 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1997 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19A8 DUP7 DUP3 DUP8 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C7 DUP2 PUSH2 0x19B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A08 DUP5 DUP3 DUP6 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1A DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5C DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ABB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1A77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B08 PUSH1 0x14 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B35 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B73 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA6 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB1 DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4F PUSH1 0x46 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP3 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7C DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB7 PUSH1 0x19 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE4 DUP2 PUSH2 0x1CAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF5 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D0E DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D63 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7E JUMPI PUSH2 0x1D7D PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBD PUSH1 0x1F DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DEA DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 PUSH1 0x19 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E30 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E52 DUP2 PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8D PUSH1 0x12 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E98 DUP3 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EBA DUP2 PUSH2 0x1E81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ED4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1EE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1EEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH4 0xAD704E6F DUP7 STATICCALL CODECOPY GASLIMIT SWAP2 CALLVALUE 0xD6 0xC5 0xEA GAS 0xBE 0xCB PUSH26 0x23385F4E9ACF1DCF228A3F91FE64736F6C634300081A00330000 ",
							"sourceMap": "301:4105:0:-:0;;;1388:5;1350:43;;;;;;;;;;;;;;;;;;;;601:480;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:15;813:4;819:6;918:5:4;910;:13;;;;;;:::i;:::-;;943:7;933;:17;;;;;;:::i;:::-;;844:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;888:10:0::2;871:13;:27;;863:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;960:37;966:15;983:13;960:5;;;:37;;:::i;:::-;1020:10;1008:9;:22;;;;1058:15;1041:14;;:32;;;;;;;;;;;;;;;;;;601:480:::0;;;;;;301:4105;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6677:217:4:-;6775:1;6756:21;;:7;:21;;;6752:91;;6829:1;6800:32;;;;;;;;;;;:::i;:::-;;;;;;;;6752:91;6852:35;6868:1;6872:7;6881:5;6852:7;;;:35;;:::i;:::-;6677:217;;:::o;5227:1107::-;5332:1;5316:18;;:4;:18;;;5312:540;;5468:5;5452:12;;:21;;;;;;;:::i;:::-;;;;;;;;5312:540;;;5504:19;5526:9;:15;5536:4;5526:15;;;;;;;;;;;;;;;;5504:37;;5573:5;5559:11;:19;5555:115;;;5630:4;5636:11;5649:5;5605:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5555:115;5822:5;5808:11;:19;5790:9;:15;5800:4;5790:15;;;;;;;;;;;;;;;:37;;;;5490:362;5312:540;5880:1;5866:16;;:2;:16;;;5862:425;;6045:5;6029:12;;:21;;;;;;;;;;;5862:425;;;6257:5;6240:9;:13;6250:2;6240:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;5862:425;6317:2;6302:25;;6311:4;6302:25;;;6321:5;6302:25;;;;;;:::i;:::-;;;;;;;;5227:1107;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:86::-;2965:7;3005:4;2998:5;2994:16;2983:27;;2930:86;;;:::o;3022:118::-;3093:22;3109:5;3093:22;:::i;:::-;3086:5;3083:33;3073:61;;3130:1;3127;3120:12;3073:61;3022:118;:::o;3146:139::-;3201:5;3232:6;3226:13;3217:22;;3248:31;3273:5;3248:31;:::i;:::-;3146:139;;;;:::o;3291:126::-;3328:7;3368:42;3361:5;3357:54;3346:65;;3291:126;;;:::o;3423:96::-;3460:7;3489:24;3507:5;3489:24;:::i;:::-;3478:35;;3423:96;;;:::o;3525:122::-;3598:24;3616:5;3598:24;:::i;:::-;3591:5;3588:35;3578:63;;3637:1;3634;3627:12;3578:63;3525:122;:::o;3653:143::-;3710:5;3741:6;3735:13;3726:22;;3757:33;3784:5;3757:33;:::i;:::-;3653:143;;;;:::o;3802:1476::-;3935:6;3943;3951;3959;3967;3975;4024:3;4012:9;4003:7;3999:23;3995:33;3992:120;;;4031:79;;:::i;:::-;3992:120;4172:1;4161:9;4157:17;4151:24;4202:18;4194:6;4191:30;4188:117;;;4224:79;;:::i;:::-;4188:117;4329:74;4395:7;4386:6;4375:9;4371:22;4329:74;:::i;:::-;4319:84;;4122:291;4473:2;4462:9;4458:18;4452:25;4504:18;4496:6;4493:30;4490:117;;;4526:79;;:::i;:::-;4490:117;4631:74;4697:7;4688:6;4677:9;4673:22;4631:74;:::i;:::-;4621:84;;4423:292;4754:2;4780:64;4836:7;4827:6;4816:9;4812:22;4780:64;:::i;:::-;4770:74;;4725:129;4893:2;4919:64;4975:7;4966:6;4955:9;4951:22;4919:64;:::i;:::-;4909:74;;4864:129;5032:3;5059:62;5113:7;5104:6;5093:9;5089:22;5059:62;:::i;:::-;5049:72;;5003:128;5170:3;5197:64;5253:7;5244:6;5233:9;5229:22;5197:64;:::i;:::-;5187:74;;5141:130;3802:1476;;;;;;;;:::o;5284:99::-;5336:6;5370:5;5364:12;5354:22;;5284:99;;;:::o;5389:180::-;5437:77;5434:1;5427:88;5534:4;5531:1;5524:15;5558:4;5555:1;5548:15;5575:320;5619:6;5656:1;5650:4;5646:12;5636:22;;5703:1;5697:4;5693:12;5724:18;5714:81;;5780:4;5772:6;5768:17;5758:27;;5714:81;5842:2;5834:6;5831:14;5811:18;5808:38;5805:84;;5861:18;;:::i;:::-;5805:84;5626:269;5575:320;;;:::o;5901:141::-;5950:4;5973:3;5965:11;;5996:3;5993:1;5986:14;6030:4;6027:1;6017:18;6009:26;;5901:141;;;:::o;6048:93::-;6085:6;6132:2;6127;6120:5;6116:14;6112:23;6102:33;;6048:93;;;:::o;6147:107::-;6191:8;6241:5;6235:4;6231:16;6210:37;;6147:107;;;;:::o;6260:393::-;6329:6;6379:1;6367:10;6363:18;6402:97;6432:66;6421:9;6402:97;:::i;:::-;6520:39;6550:8;6539:9;6520:39;:::i;:::-;6508:51;;6592:4;6588:9;6581:5;6577:21;6568:30;;6641:4;6631:8;6627:19;6620:5;6617:30;6607:40;;6336:317;;6260:393;;;;;:::o;6659:60::-;6687:3;6708:5;6701:12;;6659:60;;;:::o;6725:142::-;6775:9;6808:53;6826:34;6835:24;6853:5;6835:24;:::i;:::-;6826:34;:::i;:::-;6808:53;:::i;:::-;6795:66;;6725:142;;;:::o;6873:75::-;6916:3;6937:5;6930:12;;6873:75;;;:::o;6954:269::-;7064:39;7095:7;7064:39;:::i;:::-;7125:91;7174:41;7198:16;7174:41;:::i;:::-;7166:6;7159:4;7153:11;7125:91;:::i;:::-;7119:4;7112:105;7030:193;6954:269;;;:::o;7229:73::-;7274:3;7229:73;:::o;7308:189::-;7385:32;;:::i;:::-;7426:65;7484:6;7476;7470:4;7426:65;:::i;:::-;7361:136;7308:189;;:::o;7503:186::-;7563:120;7580:3;7573:5;7570:14;7563:120;;;7634:39;7671:1;7664:5;7634:39;:::i;:::-;7607:1;7600:5;7596:13;7587:22;;7563:120;;;7503:186;;:::o;7695:543::-;7796:2;7791:3;7788:11;7785:446;;;7830:38;7862:5;7830:38;:::i;:::-;7914:29;7932:10;7914:29;:::i;:::-;7904:8;7900:44;8097:2;8085:10;8082:18;8079:49;;;8118:8;8103:23;;8079:49;8141:80;8197:22;8215:3;8197:22;:::i;:::-;8187:8;8183:37;8170:11;8141:80;:::i;:::-;7800:431;;7785:446;7695:543;;;:::o;8244:117::-;8298:8;8348:5;8342:4;8338:16;8317:37;;8244:117;;;;:::o;8367:169::-;8411:6;8444:51;8492:1;8488:6;8480:5;8477:1;8473:13;8444:51;:::i;:::-;8440:56;8525:4;8519;8515:15;8505:25;;8418:118;8367:169;;;;:::o;8541:295::-;8617:4;8763:29;8788:3;8782:4;8763:29;:::i;:::-;8755:37;;8825:3;8822:1;8818:11;8812:4;8809:21;8801:29;;8541:295;;;;:::o;8841:1395::-;8958:37;8991:3;8958:37;:::i;:::-;9060:18;9052:6;9049:30;9046:56;;;9082:18;;:::i;:::-;9046:56;9126:38;9158:4;9152:11;9126:38;:::i;:::-;9211:67;9271:6;9263;9257:4;9211:67;:::i;:::-;9305:1;9329:4;9316:17;;9361:2;9353:6;9350:14;9378:1;9373:618;;;;10035:1;10052:6;10049:77;;;10101:9;10096:3;10092:19;10086:26;10077:35;;10049:77;10152:67;10212:6;10205:5;10152:67;:::i;:::-;10146:4;10139:81;10008:222;9343:887;;9373:618;9425:4;9421:9;9413:6;9409:22;9459:37;9491:4;9459:37;:::i;:::-;9518:1;9532:208;9546:7;9543:1;9540:14;9532:208;;;9625:9;9620:3;9616:19;9610:26;9602:6;9595:42;9676:1;9668:6;9664:14;9654:24;;9723:2;9712:9;9708:18;9695:31;;9569:4;9566:1;9562:12;9557:17;;9532:208;;;9768:6;9759:7;9756:19;9753:179;;;9826:9;9821:3;9817:19;9811:26;9869:48;9911:4;9903:6;9899:17;9888:9;9869:48;:::i;:::-;9861:6;9854:64;9776:156;9753:179;9978:1;9974;9966:6;9962:14;9958:22;9952:4;9945:36;9380:611;;;9343:887;;8933:1303;;;8841:1395;;:::o;10242:118::-;10329:24;10347:5;10329:24;:::i;:::-;10324:3;10317:37;10242:118;;:::o;10366:222::-;10459:4;10497:2;10486:9;10482:18;10474:26;;10510:71;10578:1;10567:9;10563:17;10554:6;10510:71;:::i;:::-;10366:222;;;;:::o;10594:169::-;10678:11;10712:6;10707:3;10700:19;10752:4;10747:3;10743:14;10728:29;;10594:169;;;;:::o;10769:233::-;10909:34;10905:1;10897:6;10893:14;10886:58;10978:16;10973:2;10965:6;10961:15;10954:41;10769:233;:::o;11008:366::-;11150:3;11171:67;11235:2;11230:3;11171:67;:::i;:::-;11164:74;;11247:93;11336:3;11247:93;:::i;:::-;11365:2;11360:3;11356:12;11349:19;;11008:366;;;:::o;11380:419::-;11546:4;11584:2;11573:9;11569:18;11561:26;;11633:9;11627:4;11623:20;11619:1;11608:9;11604:17;11597:47;11661:131;11787:4;11661:131;:::i;:::-;11653:139;;11380:419;;;:::o;11805:180::-;11853:77;11850:1;11843:88;11950:4;11947:1;11940:15;11974:4;11971:1;11964:15;11991:191;12031:3;12050:20;12068:1;12050:20;:::i;:::-;12045:25;;12084:20;12102:1;12084:20;:::i;:::-;12079:25;;12127:1;12124;12120:9;12113:16;;12148:3;12145:1;12142:10;12139:36;;;12155:18;;:::i;:::-;12139:36;11991:191;;;;:::o;12188:118::-;12275:24;12293:5;12275:24;:::i;:::-;12270:3;12263:37;12188:118;;:::o;12312:442::-;12461:4;12499:2;12488:9;12484:18;12476:26;;12512:71;12580:1;12569:9;12565:17;12556:6;12512:71;:::i;:::-;12593:72;12661:2;12650:9;12646:18;12637:6;12593:72;:::i;:::-;12675;12743:2;12732:9;12728:18;12719:6;12675:72;:::i;:::-;12312:442;;;;;;:::o;12760:222::-;12853:4;12891:2;12880:9;12876:18;12868:26;;12904:71;12972:1;12961:9;12957:17;12948:6;12904:71;:::i;:::-;12760:222;;;;:::o;301:4105:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1194": {
									"entryPoint": 3719,
									"id": 1194,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1254": {
									"entryPoint": 4773,
									"id": 1254,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1166": {
									"entryPoint": 4324,
									"id": 1166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_514": {
									"entryPoint": 3737,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1133": {
									"entryPoint": 4646,
									"id": 1133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1465": {
									"entryPoint": 3712,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_767": {
									"entryPoint": 4168,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_759": {
									"entryPoint": 3872,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1302": {
									"entryPoint": 4178,
									"id": 1302,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_576": {
									"entryPoint": 4451,
									"id": 576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1023": {
									"entryPoint": 5236,
									"id": 1023,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_157": {
									"entryPoint": 3951,
									"id": 157,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1100": {
									"entryPoint": 5476,
									"id": 1100,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_209": {
									"entryPoint": 1787,
									"id": 209,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_920": {
									"entryPoint": 3450,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_944": {
									"entryPoint": 1203,
									"id": 944,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_879": {
									"entryPoint": 1968,
									"id": 879,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1426": {
									"entryPoint": 2056,
									"id": 1426,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1405": {
									"entryPoint": 1767,
									"id": 1405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_345": {
									"entryPoint": 3231,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimalsPlaces_17": {
									"entryPoint": 1950,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_77": {
									"entryPoint": 1746,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableCircuitBreaker_110": {
									"entryPoint": 1246,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableCircuitBreaker_100": {
									"entryPoint": 2272,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_15": {
									"entryPoint": 3225,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_839": {
									"entryPoint": 1059,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerAddLiquidity_376": {
									"entryPoint": 2342,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ownerRemoveLiquidity_428": {
									"entryPoint": 1281,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_497": {
									"entryPoint": 2088,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidityAndClaimRewards_304": {
									"entryPoint": 2526,
									"id": 304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_528": {
									"entryPoint": 2037,
									"id": 528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_848": {
									"entryPoint": 2128,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_866": {
									"entryPoint": 1237,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_976": {
									"entryPoint": 1700,
									"id": 976,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_556": {
									"entryPoint": 3580,
									"id": 556,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_903": {
									"entryPoint": 2308,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7873,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14562:9",
										"nodeType": "YulBlock",
										"src": "0:14562:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3757:263:9",
													"nodeType": "YulBlock",
													"src": "3757:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:9",
																"nodeType": "YulBlock",
																"src": "3803:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:9"
																			},
																			"nativeSrc": "3805:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:9"
																		},
																		"nativeSrc": "3805:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:9"
																		},
																		"nativeSrc": "3774:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:9"
																},
																"nativeSrc": "3770:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:9"
															},
															"nativeSrc": "3767:119:9",
															"nodeType": "YulIf",
															"src": "3767:119:9"
														},
														{
															"nativeSrc": "3896:117:9",
															"nodeType": "YulBlock",
															"src": "3896:117:9",
															"statements": [
																{
																	"nativeSrc": "3911:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:9"
																				},
																				"nativeSrc": "3971:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:9"
																		},
																		"nativeSrc": "3950:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:9",
														"nodeType": "YulTypedName",
														"src": "3727:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:9",
														"nodeType": "YulTypedName",
														"src": "3738:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:9",
														"nodeType": "YulTypedName",
														"src": "3750:6:9",
														"type": ""
													}
												],
												"src": "3691:329:9"
											},
											{
												"body": {
													"nativeSrc": "4126:519:9",
													"nodeType": "YulBlock",
													"src": "4126:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:9",
																"nodeType": "YulBlock",
																"src": "4172:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:9"
																			},
																			"nativeSrc": "4174:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:9"
																		},
																		"nativeSrc": "4174:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:9"
																		},
																		"nativeSrc": "4143:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:9"
																},
																"nativeSrc": "4139:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:9"
															},
															"nativeSrc": "4136:119:9",
															"nodeType": "YulIf",
															"src": "4136:119:9"
														},
														{
															"nativeSrc": "4265:117:9",
															"nodeType": "YulBlock",
															"src": "4265:117:9",
															"statements": [
																{
																	"nativeSrc": "4280:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:9"
																				},
																				"nativeSrc": "4340:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:9"
																		},
																		"nativeSrc": "4319:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:9",
															"nodeType": "YulBlock",
															"src": "4392:118:9",
															"statements": [
																{
																	"nativeSrc": "4407:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:9"
																				},
																				"nativeSrc": "4468:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:9"
																		},
																		"nativeSrc": "4447:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:9",
															"nodeType": "YulBlock",
															"src": "4520:118:9",
															"statements": [
																{
																	"nativeSrc": "4535:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:9"
																				},
																				"nativeSrc": "4596:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:9"
																		},
																		"nativeSrc": "4575:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:9",
														"nodeType": "YulTypedName",
														"src": "4080:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:9",
														"nodeType": "YulTypedName",
														"src": "4091:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:9",
														"nodeType": "YulTypedName",
														"src": "4103:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:9",
														"nodeType": "YulTypedName",
														"src": "4111:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:9",
														"nodeType": "YulTypedName",
														"src": "4119:6:9",
														"type": ""
													}
												],
												"src": "4026:619:9"
											},
											{
												"body": {
													"nativeSrc": "4694:43:9",
													"nodeType": "YulBlock",
													"src": "4694:43:9",
													"statements": [
														{
															"nativeSrc": "4704:27:9",
															"nodeType": "YulAssignment",
															"src": "4704:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:9"
																},
																"nativeSrc": "4715:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:9",
														"nodeType": "YulTypedName",
														"src": "4676:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:9",
														"nodeType": "YulTypedName",
														"src": "4686:7:9",
														"type": ""
													}
												],
												"src": "4651:86:9"
											},
											{
												"body": {
													"nativeSrc": "4804:51:9",
													"nodeType": "YulBlock",
													"src": "4804:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:9"
																		},
																		"nativeSrc": "4826:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:9"
																},
																"nativeSrc": "4814:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:9"
															},
															"nativeSrc": "4814:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:9",
														"nodeType": "YulTypedName",
														"src": "4792:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:9",
														"nodeType": "YulTypedName",
														"src": "4799:3:9",
														"type": ""
													}
												],
												"src": "4743:112:9"
											},
											{
												"body": {
													"nativeSrc": "4955:120:9",
													"nodeType": "YulBlock",
													"src": "4955:120:9",
													"statements": [
														{
															"nativeSrc": "4965:26:9",
															"nodeType": "YulAssignment",
															"src": "4965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:9"
																},
																"nativeSrc": "4973:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:9"
																		},
																		"nativeSrc": "5050:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:9"
																},
																"nativeSrc": "5001:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:9"
															},
															"nativeSrc": "5001:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:9",
														"nodeType": "YulTypedName",
														"src": "4927:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:9",
														"nodeType": "YulTypedName",
														"src": "4939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:9",
														"nodeType": "YulTypedName",
														"src": "4950:4:9",
														"type": ""
													}
												],
												"src": "4861:214:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5851:391:9",
													"nodeType": "YulBlock",
													"src": "5851:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:9",
																"nodeType": "YulBlock",
																"src": "5897:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:9"
																			},
																			"nativeSrc": "5899:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:9"
																		},
																		"nativeSrc": "5899:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:9"
																		},
																		"nativeSrc": "5868:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:9"
																},
																"nativeSrc": "5864:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:9"
															},
															"nativeSrc": "5861:119:9",
															"nodeType": "YulIf",
															"src": "5861:119:9"
														},
														{
															"nativeSrc": "5990:117:9",
															"nodeType": "YulBlock",
															"src": "5990:117:9",
															"statements": [
																{
																	"nativeSrc": "6005:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:9"
																				},
																				"nativeSrc": "6065:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:9"
																		},
																		"nativeSrc": "6044:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:9",
															"nodeType": "YulBlock",
															"src": "6117:118:9",
															"statements": [
																{
																	"nativeSrc": "6132:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:9"
																				},
																				"nativeSrc": "6193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:9"
																		},
																		"nativeSrc": "6172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:9",
														"nodeType": "YulTypedName",
														"src": "5813:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:9",
														"nodeType": "YulTypedName",
														"src": "5824:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:9",
														"nodeType": "YulTypedName",
														"src": "5836:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:9",
														"nodeType": "YulTypedName",
														"src": "5844:6:9",
														"type": ""
													}
												],
												"src": "5768:474:9"
											},
											{
												"body": {
													"nativeSrc": "6276:152:9",
													"nodeType": "YulBlock",
													"src": "6276:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:9"
																},
																"nativeSrc": "6286:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:9"
															},
															"nativeSrc": "6286:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:9"
																},
																"nativeSrc": "6383:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:9"
															},
															"nativeSrc": "6383:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:9"
																},
																"nativeSrc": "6407:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:9"
															},
															"nativeSrc": "6407:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:9"
											},
											{
												"body": {
													"nativeSrc": "6485:269:9",
													"nodeType": "YulBlock",
													"src": "6485:269:9",
													"statements": [
														{
															"nativeSrc": "6495:22:9",
															"nodeType": "YulAssignment",
															"src": "6495:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:9"
																},
																"nativeSrc": "6505:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:9"
																}
															]
														},
														{
															"nativeSrc": "6526:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:9"
																},
																"nativeSrc": "6552:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:9",
																"nodeType": "YulBlock",
																"src": "6603:51:9",
																"statements": [
																	{
																		"nativeSrc": "6617:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:9"
																			},
																			"nativeSrc": "6627:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:9"
																},
																"nativeSrc": "6576:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:9"
															},
															"nativeSrc": "6573:81:9",
															"nodeType": "YulIf",
															"src": "6573:81:9"
														},
														{
															"body": {
																"nativeSrc": "6706:42:9",
																"nodeType": "YulBlock",
																"src": "6706:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:9"
																			},
																			"nativeSrc": "6720:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:9"
																		},
																		"nativeSrc": "6720:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:9"
																		},
																		"nativeSrc": "6690:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:9"
																},
																"nativeSrc": "6667:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:9"
															},
															"nativeSrc": "6664:84:9",
															"nodeType": "YulIf",
															"src": "6664:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:9",
														"nodeType": "YulTypedName",
														"src": "6469:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:9",
														"nodeType": "YulTypedName",
														"src": "6478:6:9",
														"type": ""
													}
												],
												"src": "6434:320:9"
											},
											{
												"body": {
													"nativeSrc": "6866:64:9",
													"nodeType": "YulBlock",
													"src": "6866:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:9"
																		},
																		"nativeSrc": "6884:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "6900:22:9",
																		"nodeType": "YulLiteral",
																		"src": "6900:22:9",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:9"
																},
																"nativeSrc": "6877:46:9",
																"nodeType": "YulFunctionCall",
																"src": "6877:46:9"
															},
															"nativeSrc": "6877:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "6877:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "6760:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:9",
														"nodeType": "YulTypedName",
														"src": "6858:6:9",
														"type": ""
													}
												],
												"src": "6760:170:9"
											},
											{
												"body": {
													"nativeSrc": "7082:220:9",
													"nodeType": "YulBlock",
													"src": "7082:220:9",
													"statements": [
														{
															"nativeSrc": "7092:74:9",
															"nodeType": "YulAssignment",
															"src": "7092:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7158:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7099:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7099:58:9"
																},
																"nativeSrc": "7099:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7099:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7092:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7264:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7264:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "7175:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7175:88:9"
																},
																"nativeSrc": "7175:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7175:93:9"
															},
															"nativeSrc": "7175:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7175:93:9"
														},
														{
															"nativeSrc": "7277:19:9",
															"nodeType": "YulAssignment",
															"src": "7277:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7288:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7288:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7284:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:9"
																},
																"nativeSrc": "7284:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7284:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7277:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6936:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7070:3:9",
														"nodeType": "YulTypedName",
														"src": "7070:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7078:3:9",
														"nodeType": "YulTypedName",
														"src": "7078:3:9",
														"type": ""
													}
												],
												"src": "6936:366:9"
											},
											{
												"body": {
													"nativeSrc": "7479:248:9",
													"nodeType": "YulBlock",
													"src": "7479:248:9",
													"statements": [
														{
															"nativeSrc": "7489:26:9",
															"nodeType": "YulAssignment",
															"src": "7489:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7501:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7501:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7512:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7512:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7497:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:9"
																},
																"nativeSrc": "7497:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7497:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7489:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7489:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7536:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7547:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:9"
																		},
																		"nativeSrc": "7532:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7555:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7555:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7561:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7551:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:9"
																		},
																		"nativeSrc": "7551:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7525:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7525:6:9"
																},
																"nativeSrc": "7525:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7525:47:9"
															},
															"nativeSrc": "7525:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7525:47:9"
														},
														{
															"nativeSrc": "7581:139:9",
															"nodeType": "YulAssignment",
															"src": "7581:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7715:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7715:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7589:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7589:124:9"
																},
																"nativeSrc": "7589:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7589:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7581:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7581:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7308:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7459:9:9",
														"nodeType": "YulTypedName",
														"src": "7459:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7474:4:9",
														"nodeType": "YulTypedName",
														"src": "7474:4:9",
														"type": ""
													}
												],
												"src": "7308:419:9"
											},
											{
												"body": {
													"nativeSrc": "7761:152:9",
													"nodeType": "YulBlock",
													"src": "7761:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7778:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7778:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7781:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7781:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7771:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:9"
																},
																"nativeSrc": "7771:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7771:88:9"
															},
															"nativeSrc": "7771:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7771:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7875:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7875:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7878:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:9"
																},
																"nativeSrc": "7868:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7868:15:9"
															},
															"nativeSrc": "7868:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7868:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7899:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7899:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7902:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:9"
																},
																"nativeSrc": "7892:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7892:15:9"
															},
															"nativeSrc": "7892:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7892:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7733:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7733:180:9"
											},
											{
												"body": {
													"nativeSrc": "7964:149:9",
													"nodeType": "YulBlock",
													"src": "7964:149:9",
													"statements": [
														{
															"nativeSrc": "7974:25:9",
															"nodeType": "YulAssignment",
															"src": "7974:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7997:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7997:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7979:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7979:17:9"
																},
																"nativeSrc": "7979:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7979:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7974:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7974:1:9"
																}
															]
														},
														{
															"nativeSrc": "8008:25:9",
															"nodeType": "YulAssignment",
															"src": "8008:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8031:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8013:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8013:17:9"
																},
																"nativeSrc": "8013:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8013:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8008:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8008:1:9"
																}
															]
														},
														{
															"nativeSrc": "8042:17:9",
															"nodeType": "YulAssignment",
															"src": "8042:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8054:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8054:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8057:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8050:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:9"
																},
																"nativeSrc": "8050:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8050:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8042:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8084:22:9",
																"nodeType": "YulBlock",
																"src": "8084:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8086:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8086:16:9"
																			},
																			"nativeSrc": "8086:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8086:18:9"
																		},
																		"nativeSrc": "8086:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8086:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8075:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8081:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8081:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8072:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8072:2:9"
																},
																"nativeSrc": "8072:11:9",
																"nodeType": "YulFunctionCall",
																"src": "8072:11:9"
															},
															"nativeSrc": "8069:37:9",
															"nodeType": "YulIf",
															"src": "8069:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7919:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7950:1:9",
														"nodeType": "YulTypedName",
														"src": "7950:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7953:1:9",
														"nodeType": "YulTypedName",
														"src": "7953:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7959:4:9",
														"nodeType": "YulTypedName",
														"src": "7959:4:9",
														"type": ""
													}
												],
												"src": "7919:194:9"
											},
											{
												"body": {
													"nativeSrc": "8163:147:9",
													"nodeType": "YulBlock",
													"src": "8163:147:9",
													"statements": [
														{
															"nativeSrc": "8173:25:9",
															"nodeType": "YulAssignment",
															"src": "8173:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8196:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8178:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8178:17:9"
																},
																"nativeSrc": "8178:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8178:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8173:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8173:1:9"
																}
															]
														},
														{
															"nativeSrc": "8207:25:9",
															"nodeType": "YulAssignment",
															"src": "8207:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8230:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8230:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8212:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8212:17:9"
																},
																"nativeSrc": "8212:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8212:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8207:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8207:1:9"
																}
															]
														},
														{
															"nativeSrc": "8241:16:9",
															"nodeType": "YulAssignment",
															"src": "8241:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8252:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8252:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8255:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8255:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8248:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:9"
																},
																"nativeSrc": "8248:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8248:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8241:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8241:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8281:22:9",
																"nodeType": "YulBlock",
																"src": "8281:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8283:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8283:16:9"
																			},
																			"nativeSrc": "8283:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8283:18:9"
																		},
																		"nativeSrc": "8283:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8283:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8273:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8273:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8276:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8276:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8270:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8270:2:9"
																},
																"nativeSrc": "8270:10:9",
																"nodeType": "YulFunctionCall",
																"src": "8270:10:9"
															},
															"nativeSrc": "8267:36:9",
															"nodeType": "YulIf",
															"src": "8267:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8119:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8150:1:9",
														"nodeType": "YulTypedName",
														"src": "8150:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8153:1:9",
														"nodeType": "YulTypedName",
														"src": "8153:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8159:3:9",
														"nodeType": "YulTypedName",
														"src": "8159:3:9",
														"type": ""
													}
												],
												"src": "8119:191:9"
											},
											{
												"body": {
													"nativeSrc": "8422:188:9",
													"nodeType": "YulBlock",
													"src": "8422:188:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8444:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8444:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8452:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8452:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8440:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:9"
																		},
																		"nativeSrc": "8440:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:14:9"
																	},
																	{
																		"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f722061",
																		"kind": "string",
																		"nativeSrc": "8456:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8456:34:9",
																		"type": "",
																		"value": "Liquidity must be provided for a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:9"
																},
																"nativeSrc": "8433:58:9",
																"nodeType": "YulFunctionCall",
																"src": "8433:58:9"
															},
															"nativeSrc": "8433:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "8433:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8512:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8512:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8520:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:9"
																		},
																		"nativeSrc": "8508:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:15:9"
																	},
																	{
																		"hexValue": "74206c65617374203330206461797320746f207175616c69667920666f722072",
																		"kind": "string",
																		"nativeSrc": "8525:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8525:34:9",
																		"type": "",
																		"value": "t least 30 days to qualify for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:9"
																},
																"nativeSrc": "8501:59:9",
																"nodeType": "YulFunctionCall",
																"src": "8501:59:9"
															},
															"nativeSrc": "8501:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "8501:59:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8581:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8581:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8589:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8577:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:9"
																		},
																		"nativeSrc": "8577:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:15:9"
																	},
																	{
																		"hexValue": "657761726473",
																		"kind": "string",
																		"nativeSrc": "8594:8:9",
																		"nodeType": "YulLiteral",
																		"src": "8594:8:9",
																		"type": "",
																		"value": "ewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8570:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:9"
																},
																"nativeSrc": "8570:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8570:33:9"
															},
															"nativeSrc": "8570:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "8570:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
												"nativeSrc": "8316:294:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8414:6:9",
														"nodeType": "YulTypedName",
														"src": "8414:6:9",
														"type": ""
													}
												],
												"src": "8316:294:9"
											},
											{
												"body": {
													"nativeSrc": "8762:220:9",
													"nodeType": "YulBlock",
													"src": "8762:220:9",
													"statements": [
														{
															"nativeSrc": "8772:74:9",
															"nodeType": "YulAssignment",
															"src": "8772:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8838:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8838:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8843:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8843:2:9",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8779:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8779:58:9"
																},
																"nativeSrc": "8779:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8779:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8772:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8944:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8944:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																	"nativeSrc": "8855:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8855:88:9"
																},
																"nativeSrc": "8855:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8855:93:9"
															},
															"nativeSrc": "8855:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8855:93:9"
														},
														{
															"nativeSrc": "8957:19:9",
															"nodeType": "YulAssignment",
															"src": "8957:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8968:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8968:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8973:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8973:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8964:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:9"
																},
																"nativeSrc": "8964:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8964:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8957:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8616:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8750:3:9",
														"nodeType": "YulTypedName",
														"src": "8750:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8758:3:9",
														"nodeType": "YulTypedName",
														"src": "8758:3:9",
														"type": ""
													}
												],
												"src": "8616:366:9"
											},
											{
												"body": {
													"nativeSrc": "9159:248:9",
													"nodeType": "YulBlock",
													"src": "9159:248:9",
													"statements": [
														{
															"nativeSrc": "9169:26:9",
															"nodeType": "YulAssignment",
															"src": "9169:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9181:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9177:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:9"
																},
																"nativeSrc": "9177:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9177:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9169:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9169:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9216:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9227:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9227:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:9"
																		},
																		"nativeSrc": "9212:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9235:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9235:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9241:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:9"
																		},
																		"nativeSrc": "9231:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9231:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9205:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:9"
																},
																"nativeSrc": "9205:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9205:47:9"
															},
															"nativeSrc": "9205:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9205:47:9"
														},
														{
															"nativeSrc": "9261:139:9",
															"nodeType": "YulAssignment",
															"src": "9261:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9395:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9395:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9269:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9269:124:9"
																},
																"nativeSrc": "9269:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9269:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9261:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9261:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8988:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9139:9:9",
														"nodeType": "YulTypedName",
														"src": "9139:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9154:4:9",
														"nodeType": "YulTypedName",
														"src": "9154:4:9",
														"type": ""
													}
												],
												"src": "8988:419:9"
											},
											{
												"body": {
													"nativeSrc": "9519:69:9",
													"nodeType": "YulBlock",
													"src": "9519:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9541:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9541:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9549:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9549:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:9"
																		},
																		"nativeSrc": "9537:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:14:9"
																	},
																	{
																		"hexValue": "5265776172642065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "9553:27:9",
																		"nodeType": "YulLiteral",
																		"src": "9553:27:9",
																		"type": "",
																		"value": "Reward exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9530:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:9"
																},
																"nativeSrc": "9530:51:9",
																"nodeType": "YulFunctionCall",
																"src": "9530:51:9"
															},
															"nativeSrc": "9530:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "9530:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
												"nativeSrc": "9413:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9511:6:9",
														"nodeType": "YulTypedName",
														"src": "9511:6:9",
														"type": ""
													}
												],
												"src": "9413:175:9"
											},
											{
												"body": {
													"nativeSrc": "9740:220:9",
													"nodeType": "YulBlock",
													"src": "9740:220:9",
													"statements": [
														{
															"nativeSrc": "9750:74:9",
															"nodeType": "YulAssignment",
															"src": "9750:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9816:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9816:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9821:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9757:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9757:58:9"
																},
																"nativeSrc": "9757:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9757:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9750:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9922:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9922:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																	"nativeSrc": "9833:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9833:88:9"
																},
																"nativeSrc": "9833:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9833:93:9"
															},
															"nativeSrc": "9833:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9833:93:9"
														},
														{
															"nativeSrc": "9935:19:9",
															"nodeType": "YulAssignment",
															"src": "9935:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9946:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9946:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9951:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9942:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:9"
																},
																"nativeSrc": "9942:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9942:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9935:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9594:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9728:3:9",
														"nodeType": "YulTypedName",
														"src": "9728:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9736:3:9",
														"nodeType": "YulTypedName",
														"src": "9736:3:9",
														"type": ""
													}
												],
												"src": "9594:366:9"
											},
											{
												"body": {
													"nativeSrc": "10137:248:9",
													"nodeType": "YulBlock",
													"src": "10137:248:9",
													"statements": [
														{
															"nativeSrc": "10147:26:9",
															"nodeType": "YulAssignment",
															"src": "10147:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10159:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10159:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10155:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10155:3:9"
																},
																"nativeSrc": "10155:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10155:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10147:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10147:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10194:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10194:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10205:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10205:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10190:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10190:3:9"
																		},
																		"nativeSrc": "10190:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10190:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10213:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10213:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10219:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10219:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10209:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:9"
																		},
																		"nativeSrc": "10209:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:9"
																},
																"nativeSrc": "10183:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10183:47:9"
															},
															"nativeSrc": "10183:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10183:47:9"
														},
														{
															"nativeSrc": "10239:139:9",
															"nodeType": "YulAssignment",
															"src": "10239:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10373:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10373:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10247:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10247:124:9"
																},
																"nativeSrc": "10247:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10247:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10239:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10239:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9966:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10117:9:9",
														"nodeType": "YulTypedName",
														"src": "10117:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10132:4:9",
														"nodeType": "YulTypedName",
														"src": "10132:4:9",
														"type": ""
													}
												],
												"src": "9966:419:9"
											},
											{
												"body": {
													"nativeSrc": "10439:362:9",
													"nodeType": "YulBlock",
													"src": "10439:362:9",
													"statements": [
														{
															"nativeSrc": "10449:25:9",
															"nodeType": "YulAssignment",
															"src": "10449:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10472:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10454:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10454:17:9"
																},
																"nativeSrc": "10454:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10454:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10449:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10449:1:9"
																}
															]
														},
														{
															"nativeSrc": "10483:25:9",
															"nodeType": "YulAssignment",
															"src": "10483:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10506:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10506:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10488:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10488:17:9"
																},
																"nativeSrc": "10488:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10488:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10483:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10483:1:9"
																}
															]
														},
														{
															"nativeSrc": "10517:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "10517:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10540:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10540:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10543:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10543:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10536:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:9"
																},
																"nativeSrc": "10536:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10536:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10521:11:9",
																	"nodeType": "YulTypedName",
																	"src": "10521:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10554:41:9",
															"nodeType": "YulAssignment",
															"src": "10554:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10583:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "10583:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10565:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10565:17:9"
																},
																"nativeSrc": "10565:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10565:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10554:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10554:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10772:22:9",
																"nodeType": "YulBlock",
																"src": "10772:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10774:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10774:16:9"
																			},
																			"nativeSrc": "10774:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10774:18:9"
																		},
																		"nativeSrc": "10774:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10774:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10705:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10705:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10698:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "10698:6:9"
																				},
																				"nativeSrc": "10698:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10698:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10728:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "10728:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10735:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "10735:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10744:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "10744:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10731:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10731:3:9"
																						},
																						"nativeSrc": "10731:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10731:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10725:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "10725:2:9"
																				},
																				"nativeSrc": "10725:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10725:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10678:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "10678:2:9"
																		},
																		"nativeSrc": "10678:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10678:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10658:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:9"
																},
																"nativeSrc": "10658:113:9",
																"nodeType": "YulFunctionCall",
																"src": "10658:113:9"
															},
															"nativeSrc": "10655:139:9",
															"nodeType": "YulIf",
															"src": "10655:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10391:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10422:1:9",
														"nodeType": "YulTypedName",
														"src": "10422:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10425:1:9",
														"nodeType": "YulTypedName",
														"src": "10425:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10431:7:9",
														"nodeType": "YulTypedName",
														"src": "10431:7:9",
														"type": ""
													}
												],
												"src": "10391:410:9"
											},
											{
												"body": {
													"nativeSrc": "10835:152:9",
													"nodeType": "YulBlock",
													"src": "10835:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10852:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10852:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10855:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10855:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10845:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10845:6:9"
																},
																"nativeSrc": "10845:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10845:88:9"
															},
															"nativeSrc": "10845:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10845:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10949:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10949:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10952:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10952:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10942:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:9"
																},
																"nativeSrc": "10942:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10942:15:9"
															},
															"nativeSrc": "10942:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10942:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10973:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10973:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10976:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10976:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:9"
																},
																"nativeSrc": "10966:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10966:15:9"
															},
															"nativeSrc": "10966:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10966:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10807:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10807:180:9"
											},
											{
												"body": {
													"nativeSrc": "11035:143:9",
													"nodeType": "YulBlock",
													"src": "11035:143:9",
													"statements": [
														{
															"nativeSrc": "11045:25:9",
															"nodeType": "YulAssignment",
															"src": "11045:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11068:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11068:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11050:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11050:17:9"
																},
																"nativeSrc": "11050:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11050:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11045:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11045:1:9"
																}
															]
														},
														{
															"nativeSrc": "11079:25:9",
															"nodeType": "YulAssignment",
															"src": "11079:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11102:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11102:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11084:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11084:17:9"
																},
																"nativeSrc": "11084:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11084:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11079:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11079:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11126:22:9",
																"nodeType": "YulBlock",
																"src": "11126:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11128:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11128:16:9"
																			},
																			"nativeSrc": "11128:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11128:18:9"
																		},
																		"nativeSrc": "11128:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11128:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11123:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11123:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11116:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:9"
																},
																"nativeSrc": "11116:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11116:9:9"
															},
															"nativeSrc": "11113:35:9",
															"nodeType": "YulIf",
															"src": "11113:35:9"
														},
														{
															"nativeSrc": "11158:14:9",
															"nodeType": "YulAssignment",
															"src": "11158:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11167:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11167:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11170:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11163:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:9"
																},
																"nativeSrc": "11163:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11163:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11158:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11158:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10993:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11024:1:9",
														"nodeType": "YulTypedName",
														"src": "11024:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11027:1:9",
														"nodeType": "YulTypedName",
														"src": "11027:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11033:1:9",
														"nodeType": "YulTypedName",
														"src": "11033:1:9",
														"type": ""
													}
												],
												"src": "10993:185:9"
											},
											{
												"body": {
													"nativeSrc": "11290:75:9",
													"nodeType": "YulBlock",
													"src": "11290:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11312:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11312:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11320:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11320:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:9"
																		},
																		"nativeSrc": "11308:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11308:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11324:33:9",
																		"nodeType": "YulLiteral",
																		"src": "11324:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11301:6:9"
																},
																"nativeSrc": "11301:57:9",
																"nodeType": "YulFunctionCall",
																"src": "11301:57:9"
															},
															"nativeSrc": "11301:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "11301:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11184:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11282:6:9",
														"nodeType": "YulTypedName",
														"src": "11282:6:9",
														"type": ""
													}
												],
												"src": "11184:181:9"
											},
											{
												"body": {
													"nativeSrc": "11517:220:9",
													"nodeType": "YulBlock",
													"src": "11517:220:9",
													"statements": [
														{
															"nativeSrc": "11527:74:9",
															"nodeType": "YulAssignment",
															"src": "11527:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11593:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11593:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11598:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11534:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11534:58:9"
																},
																"nativeSrc": "11534:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11534:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11527:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11527:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11699:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11699:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11610:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11610:88:9"
																},
																"nativeSrc": "11610:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11610:93:9"
															},
															"nativeSrc": "11610:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11610:93:9"
														},
														{
															"nativeSrc": "11712:19:9",
															"nodeType": "YulAssignment",
															"src": "11712:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11723:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11723:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11728:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11728:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11719:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:9"
																},
																"nativeSrc": "11719:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11719:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11712:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11371:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11505:3:9",
														"nodeType": "YulTypedName",
														"src": "11505:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11513:3:9",
														"nodeType": "YulTypedName",
														"src": "11513:3:9",
														"type": ""
													}
												],
												"src": "11371:366:9"
											},
											{
												"body": {
													"nativeSrc": "11914:248:9",
													"nodeType": "YulBlock",
													"src": "11914:248:9",
													"statements": [
														{
															"nativeSrc": "11924:26:9",
															"nodeType": "YulAssignment",
															"src": "11924:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11936:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11936:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11947:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11947:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:9"
																},
																"nativeSrc": "11932:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11932:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11924:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11924:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11971:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11971:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11982:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11982:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11967:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:9"
																		},
																		"nativeSrc": "11967:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11990:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11990:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11996:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11986:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:9"
																		},
																		"nativeSrc": "11986:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11986:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11960:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:9"
																},
																"nativeSrc": "11960:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11960:47:9"
															},
															"nativeSrc": "11960:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11960:47:9"
														},
														{
															"nativeSrc": "12016:139:9",
															"nodeType": "YulAssignment",
															"src": "12016:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12150:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12150:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12024:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12024:124:9"
																},
																"nativeSrc": "12024:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12024:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12016:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12016:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11743:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11894:9:9",
														"nodeType": "YulTypedName",
														"src": "11894:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11909:4:9",
														"nodeType": "YulTypedName",
														"src": "11909:4:9",
														"type": ""
													}
												],
												"src": "11743:419:9"
											},
											{
												"body": {
													"nativeSrc": "12274:69:9",
													"nodeType": "YulBlock",
													"src": "12274:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12296:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12296:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12304:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12304:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12292:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:9"
																		},
																		"nativeSrc": "12292:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12292:14:9"
																	},
																	{
																		"hexValue": "4369726375697420627265616b657220697320616374697665",
																		"kind": "string",
																		"nativeSrc": "12308:27:9",
																		"nodeType": "YulLiteral",
																		"src": "12308:27:9",
																		"type": "",
																		"value": "Circuit breaker is active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12285:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:9"
																},
																"nativeSrc": "12285:51:9",
																"nodeType": "YulFunctionCall",
																"src": "12285:51:9"
															},
															"nativeSrc": "12285:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "12285:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
												"nativeSrc": "12168:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12266:6:9",
														"nodeType": "YulTypedName",
														"src": "12266:6:9",
														"type": ""
													}
												],
												"src": "12168:175:9"
											},
											{
												"body": {
													"nativeSrc": "12495:220:9",
													"nodeType": "YulBlock",
													"src": "12495:220:9",
													"statements": [
														{
															"nativeSrc": "12505:74:9",
															"nodeType": "YulAssignment",
															"src": "12505:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12571:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12571:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12576:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12576:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12512:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12512:58:9"
																},
																"nativeSrc": "12512:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12512:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12677:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12677:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																	"nativeSrc": "12588:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12588:88:9"
																},
																"nativeSrc": "12588:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12588:93:9"
															},
															"nativeSrc": "12588:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12588:93:9"
														},
														{
															"nativeSrc": "12690:19:9",
															"nodeType": "YulAssignment",
															"src": "12690:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12701:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12701:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12706:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12706:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12697:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:9"
																},
																"nativeSrc": "12697:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12697:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12690:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12690:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12349:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12483:3:9",
														"nodeType": "YulTypedName",
														"src": "12483:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12491:3:9",
														"nodeType": "YulTypedName",
														"src": "12491:3:9",
														"type": ""
													}
												],
												"src": "12349:366:9"
											},
											{
												"body": {
													"nativeSrc": "12892:248:9",
													"nodeType": "YulBlock",
													"src": "12892:248:9",
													"statements": [
														{
															"nativeSrc": "12902:26:9",
															"nodeType": "YulAssignment",
															"src": "12902:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12914:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12914:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12925:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12925:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12910:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12910:3:9"
																},
																"nativeSrc": "12910:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12910:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12902:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12902:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12949:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12949:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12960:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12960:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12945:3:9"
																		},
																		"nativeSrc": "12945:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12945:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12968:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12968:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12974:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12964:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:9"
																		},
																		"nativeSrc": "12964:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12938:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12938:6:9"
																},
																"nativeSrc": "12938:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12938:47:9"
															},
															"nativeSrc": "12938:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12938:47:9"
														},
														{
															"nativeSrc": "12994:139:9",
															"nodeType": "YulAssignment",
															"src": "12994:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13128:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13128:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13002:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13002:124:9"
																},
																"nativeSrc": "13002:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13002:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12994:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12994:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12721:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12872:9:9",
														"nodeType": "YulTypedName",
														"src": "12872:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12887:4:9",
														"nodeType": "YulTypedName",
														"src": "12887:4:9",
														"type": ""
													}
												],
												"src": "12721:419:9"
											},
											{
												"body": {
													"nativeSrc": "13252:62:9",
													"nodeType": "YulBlock",
													"src": "13252:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13274:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13274:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13282:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13282:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13270:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13270:3:9"
																		},
																		"nativeSrc": "13270:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13270:14:9"
																	},
																	{
																		"hexValue": "4275726e2076616c756520696e76616c6964",
																		"kind": "string",
																		"nativeSrc": "13286:20:9",
																		"nodeType": "YulLiteral",
																		"src": "13286:20:9",
																		"type": "",
																		"value": "Burn value invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13263:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13263:6:9"
																},
																"nativeSrc": "13263:44:9",
																"nodeType": "YulFunctionCall",
																"src": "13263:44:9"
															},
															"nativeSrc": "13263:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "13263:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
												"nativeSrc": "13146:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13244:6:9",
														"nodeType": "YulTypedName",
														"src": "13244:6:9",
														"type": ""
													}
												],
												"src": "13146:168:9"
											},
											{
												"body": {
													"nativeSrc": "13466:220:9",
													"nodeType": "YulBlock",
													"src": "13466:220:9",
													"statements": [
														{
															"nativeSrc": "13476:74:9",
															"nodeType": "YulAssignment",
															"src": "13476:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13547:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13547:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13483:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13483:58:9"
																},
																"nativeSrc": "13483:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13483:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13476:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13476:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13648:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13648:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																	"nativeSrc": "13559:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13559:88:9"
																},
																"nativeSrc": "13559:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13559:93:9"
															},
															"nativeSrc": "13559:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13559:93:9"
														},
														{
															"nativeSrc": "13661:19:9",
															"nodeType": "YulAssignment",
															"src": "13661:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13672:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13672:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13677:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13677:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13668:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:9"
																},
																"nativeSrc": "13668:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13668:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13661:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13661:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13320:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13454:3:9",
														"nodeType": "YulTypedName",
														"src": "13454:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13462:3:9",
														"nodeType": "YulTypedName",
														"src": "13462:3:9",
														"type": ""
													}
												],
												"src": "13320:366:9"
											},
											{
												"body": {
													"nativeSrc": "13863:248:9",
													"nodeType": "YulBlock",
													"src": "13863:248:9",
													"statements": [
														{
															"nativeSrc": "13873:26:9",
															"nodeType": "YulAssignment",
															"src": "13873:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13885:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13885:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13896:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13896:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13881:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13881:3:9"
																},
																"nativeSrc": "13881:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13881:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13873:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13873:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13920:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13931:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13931:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13916:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13916:3:9"
																		},
																		"nativeSrc": "13916:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13916:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13939:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13939:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13945:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13945:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13935:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13935:3:9"
																		},
																		"nativeSrc": "13935:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13935:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13909:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13909:6:9"
																},
																"nativeSrc": "13909:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13909:47:9"
															},
															"nativeSrc": "13909:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13909:47:9"
														},
														{
															"nativeSrc": "13965:139:9",
															"nodeType": "YulAssignment",
															"src": "13965:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14099:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14099:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13973:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13973:124:9"
																},
																"nativeSrc": "13973:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13973:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13965:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13692:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13843:9:9",
														"nodeType": "YulTypedName",
														"src": "13843:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13858:4:9",
														"nodeType": "YulTypedName",
														"src": "13858:4:9",
														"type": ""
													}
												],
												"src": "13692:419:9"
											},
											{
												"body": {
													"nativeSrc": "14271:288:9",
													"nodeType": "YulBlock",
													"src": "14271:288:9",
													"statements": [
														{
															"nativeSrc": "14281:26:9",
															"nodeType": "YulAssignment",
															"src": "14281:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14293:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14293:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14304:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14304:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14289:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14289:3:9"
																},
																"nativeSrc": "14289:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14289:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14281:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14281:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14361:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14361:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14374:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14374:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14385:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14385:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14370:3:9"
																		},
																		"nativeSrc": "14370:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14370:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14317:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14317:43:9"
																},
																"nativeSrc": "14317:71:9",
																"nodeType": "YulFunctionCall",
																"src": "14317:71:9"
															},
															"nativeSrc": "14317:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "14317:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14442:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14442:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14455:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14455:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14466:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14466:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14451:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14451:3:9"
																		},
																		"nativeSrc": "14451:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14451:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14398:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14398:43:9"
																},
																"nativeSrc": "14398:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14398:72:9"
															},
															"nativeSrc": "14398:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14398:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14524:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14524:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14548:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14548:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:9"
																		},
																		"nativeSrc": "14533:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14533:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14480:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14480:43:9"
																},
																"nativeSrc": "14480:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14480:72:9"
															},
															"nativeSrc": "14480:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14480:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14117:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14227:9:9",
														"nodeType": "YulTypedName",
														"src": "14227:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14239:6:9",
														"nodeType": "YulTypedName",
														"src": "14239:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14247:6:9",
														"nodeType": "YulTypedName",
														"src": "14247:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14255:6:9",
														"nodeType": "YulTypedName",
														"src": "14255:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14266:4:9",
														"nodeType": "YulTypedName",
														"src": "14266:4:9",
														"type": ""
													}
												],
												"src": "14117:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity must be provided for a\")\n\n        mstore(add(memPtr, 32), \"t least 30 days to qualify for r\")\n\n        mstore(add(memPtr, 64), \"ewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 70)\n        store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Circuit breaker is active\")\n\n    }\n\n    function abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn value invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063715018a6116100c1578063afe8289a1161007a578063afe8289a14610351578063c80521071461036d578063d5abeb0114610389578063d82e3962146103a7578063dd62ed3e146103d7578063f2fde38b146104075761014b565b8063715018a6146102b557806379cc6790146102bf5780638da5cb5b146102db57806395d89b41146102f9578063a64254c314610317578063a9059cbb146103215761014b565b806323b872dd1161011357806323b872dd146101e1578063313ce5671461021157806342966c681461022f57806351c6590a1461024b578063527569861461026757806370a08231146102855761014b565b806306fdde031461014f578063095ea7b31461016d57806318160ddd1461019d57806321208fa2146101bb5780632254b79c146101c5575b5f80fd5b610157610423565b60405161016491906117ed565b60405180910390f35b6101876004803603810190610182919061189e565b6104b3565b60405161019491906118f6565b60405180910390f35b6101a56104d5565b6040516101b2919061191e565b60405180910390f35b6101c36104de565b005b6101df60048036038101906101da9190611937565b610501565b005b6101fb60048036038101906101f69190611962565b6106a4565b60405161020891906118f6565b60405180910390f35b6102196106d2565b60405161022691906119cd565b60405180910390f35b61024960048036038101906102449190611937565b6106e7565b005b61026560048036038101906102609190611937565b6106fb565b005b61026f61079e565b60405161027c91906119cd565b60405180910390f35b61029f600480360381019061029a91906119e6565b6107b0565b6040516102ac919061191e565b60405180910390f35b6102bd6107f5565b005b6102d960048036038101906102d4919061189e565b610808565b005b6102e3610828565b6040516102f09190611a20565b60405180910390f35b610301610850565b60405161030e91906117ed565b60405180910390f35b61031f6108e0565b005b61033b6004803603810190610336919061189e565b610904565b60405161034891906118f6565b60405180910390f35b61036b60048036038101906103669190611937565b610926565b005b61038760048036038101906103829190611937565b6109de565b005b610391610c99565b60405161039e919061191e565b60405180910390f35b6103c160048036038101906103bc91906119e6565b610c9f565b6040516103ce919061191e565b60405180910390f35b6103f160048036038101906103ec9190611a39565b610d7a565b6040516103fe919061191e565b60405180910390f35b610421600480360381019061041c91906119e6565b610dfc565b005b60606003805461043290611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90611aa4565b80156104a95780601f10610480576101008083540402835291602001916104a9565b820191905f5260205f20905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b5f806104bd610e80565b90506104ca818585610e87565b600191505092915050565b5f600254905090565b6104e6610e99565b5f600b5f6101000a81548160ff021916908315150217905550565b610509610e99565b610511610f20565b60095f61051c610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90611b1e565b60405180910390fd5b8060095f6105a4610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105eb9190611b69565b925050819055505f60095f6105fe610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610687575f600a5f610649610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61069930610693610828565b83610f6f565b6106a1611048565b50565b5f806106ae610e80565b90506106bb858285611052565b6106c6858585610f6f565b60019150509392505050565b5f60085f9054906101000a900460ff16905090565b6106f86106f2610e80565b826110e4565b50565b610706333083610f6f565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107529190611b9c565b9250508190555042600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b60085f9054906101000a900460ff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107fd610e99565b6108065f611163565b565b61081a82610814610e80565b83611052565b61082482826110e4565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461085f90611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461088b90611aa4565b80156108d65780601f106108ad576101008083540402835291602001916108d6565b820191905f5260205f20905b8154815290600101906020018083116108b957829003601f168201915b5050505050905090565b6108e8610e99565b6001600b5f6101000a81548160ff021916908315150217905550565b5f8061090e610e80565b905061091b818585610f6f565b600191505092915050565b61092e610e99565b8060095f61093a610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109819190611b9c565b9250508190555042600a5f610994610828565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506109db3082611226565b50565b6109e6610f20565b60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90611b1e565b60405180910390fd5b62278d00600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ab29190611b9c565b421015610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90611c65565b60405180910390fd5b5f610afe33610c9f565b905060075481610b0c6104d5565b610b169190611b9c565b1115610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90611ccd565b60405180910390fd5b610b613382611226565b610b6c303384610f6f565b8160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bb89190611b69565b925050819055505f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610c4a575f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c8d565b42600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b50610c96611048565b50565b60075481565b5f62278d00600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610cec9190611b9c565b4210610d71575f6064600560095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3f9190611ceb565b610d499190611d59565b905060075481610d576104d5565b610d619190611b9c565b11610d6f5780915050610d75565b505b5f90505b919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610e04610e99565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e74575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e6b9190611a20565b60405180910390fd5b610e7d81611163565b50565b5f33905090565b610e9483838360016112a5565b505050565b610ea1610e80565b73ffffffffffffffffffffffffffffffffffffffff16610ebf610828565b73ffffffffffffffffffffffffffffffffffffffff1614610f1e57610ee2610e80565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f159190611a20565b60405180910390fd5b565b600260065403610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90611dd3565b60405180910390fd5b6002600681905550565b600b5f9054906101000a900460ff1615610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590611e3b565b60405180910390fd5b5f620186a082610fce9190611d59565b90505f8183610fdd9190611b69565b90508181610feb9190611b9c565b831461102c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102390611ea3565b60405180910390fd5b611037858583611474565b61104185836110e4565b5050505050565b6001600681905550565b5f61105d8484610d7a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110de57818110156110cf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110c693929190611ec1565b60405180910390fd5b6110dd84848484035f6112a5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161114b9190611a20565b60405180910390fd5b61115f825f83611564565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611296575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161128d9190611a20565b60405180910390fd5b6112a15f8383611564565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611315575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161130c9190611a20565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611385575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161137c9190611a20565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561146e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611465919061191e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114db9190611a20565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611554575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161154b9190611a20565b60405180910390fd5b61155f838383611564565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115b4578060025f8282546115a89190611b9c565b92505081905550611682565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561163d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161163493929190611ec1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116c9578060025f8282540392505081905550611713565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611770919061191e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117bf8261177d565b6117c98185611787565b93506117d9818560208601611797565b6117e2816117a5565b840191505092915050565b5f6020820190508181035f83015261180581846117b5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183a82611811565b9050919050565b61184a81611830565b8114611854575f80fd5b50565b5f8135905061186581611841565b92915050565b5f819050919050565b61187d8161186b565b8114611887575f80fd5b50565b5f8135905061189881611874565b92915050565b5f80604083850312156118b4576118b361180d565b5b5f6118c185828601611857565b92505060206118d28582860161188a565b9150509250929050565b5f8115159050919050565b6118f0816118dc565b82525050565b5f6020820190506119095f8301846118e7565b92915050565b6119188161186b565b82525050565b5f6020820190506119315f83018461190f565b92915050565b5f6020828403121561194c5761194b61180d565b5b5f6119598482850161188a565b91505092915050565b5f805f606084860312156119795761197861180d565b5b5f61198686828701611857565b935050602061199786828701611857565b92505060406119a88682870161188a565b9150509250925092565b5f60ff82169050919050565b6119c7816119b2565b82525050565b5f6020820190506119e05f8301846119be565b92915050565b5f602082840312156119fb576119fa61180d565b5b5f611a0884828501611857565b91505092915050565b611a1a81611830565b82525050565b5f602082019050611a335f830184611a11565b92915050565b5f8060408385031215611a4f57611a4e61180d565b5b5f611a5c85828601611857565b9250506020611a6d85828601611857565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611abb57607f821691505b602082108103611ace57611acd611a77565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611b08601483611787565b9150611b1382611ad4565b602082019050919050565b5f6020820190508181035f830152611b3581611afc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611b738261186b565b9150611b7e8361186b565b9250828203905081811115611b9657611b95611b3c565b5b92915050565b5f611ba68261186b565b9150611bb18361186b565b9250828201905080821115611bc957611bc8611b3c565b5b92915050565b7f4c6971756964697479206d7573742062652070726f766964656420666f7220615f8201527f74206c65617374203330206461797320746f207175616c69667920666f72207260208201527f6577617264730000000000000000000000000000000000000000000000000000604082015250565b5f611c4f604683611787565b9150611c5a82611bcf565b606082019050919050565b5f6020820190508181035f830152611c7c81611c43565b9050919050565b7f5265776172642065786365656473206d617820737570706c79000000000000005f82015250565b5f611cb7601983611787565b9150611cc282611c83565b602082019050919050565b5f6020820190508181035f830152611ce481611cab565b9050919050565b5f611cf58261186b565b9150611d008361186b565b9250828202611d0e8161186b565b91508282048414831517611d2557611d24611b3c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d638261186b565b9150611d6e8361186b565b925082611d7e57611d7d611d2c565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611dbd601f83611787565b9150611dc882611d89565b602082019050919050565b5f6020820190508181035f830152611dea81611db1565b9050919050565b7f4369726375697420627265616b657220697320616374697665000000000000005f82015250565b5f611e25601983611787565b9150611e3082611df1565b602082019050919050565b5f6020820190508181035f830152611e5281611e19565b9050919050565b7f4275726e2076616c756520696e76616c696400000000000000000000000000005f82015250565b5f611e8d601283611787565b9150611e9882611e59565b602082019050919050565b5f6020820190508181035f830152611eba81611e81565b9050919050565b5f606082019050611ed45f830186611a11565b611ee1602083018561190f565b611eee604083018461190f565b94935050505056fea26469706673582212209c63ad704e6f86fa39459134d6c5ea5abecb7923385f4e9acf1dcf228a3f91fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xAFE8289A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x407 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA64254C3 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x52756986 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x285 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x21208FA2 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x1C5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH2 0x4DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH2 0x8E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x387 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x432 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x480 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BD PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA DUP2 DUP6 DUP6 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E6 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x509 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x511 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x9 PUSH0 PUSH2 0x51C PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x5A4 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x5FE PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x687 JUMPI PUSH0 PUSH1 0xA PUSH0 PUSH2 0x649 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x699 ADDRESS PUSH2 0x693 PUSH2 0x828 JUMP JUMPDEST DUP4 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x1048 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AE PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BB DUP6 DUP3 DUP6 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x6C6 DUP6 DUP6 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F8 PUSH2 0x6F2 PUSH2 0xE80 JUMP JUMPDEST DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x706 CALLER ADDRESS DUP4 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FD PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x806 PUSH0 PUSH2 0x1163 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x81A DUP3 PUSH2 0x814 PUSH2 0xE80 JUMP JUMPDEST DUP4 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x824 DUP3 DUP3 PUSH2 0x10E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90E PUSH2 0xE80 JUMP JUMPDEST SWAP1 POP PUSH2 0x91B DUP2 DUP6 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92E PUSH2 0xE99 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x93A PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH0 PUSH2 0x994 PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9DB ADDRESS DUP3 PUSH2 0x1226 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAB2 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAFE CALLER PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH2 0xB0C PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST GT ISZERO PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB61 CALLER DUP3 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xB6C ADDRESS CALLER DUP5 PUSH2 0xF6F JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC4A JUMPI PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC8D JUMP JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xC96 PUSH2 0x1048 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST TIMESTAMP LT PUSH2 0xD71 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 PUSH2 0xD57 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST GT PUSH2 0xD6F JUMPI DUP1 SWAP2 POP POP PUSH2 0xD75 JUMP JUMPDEST POP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xE99 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0x1163 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE94 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEA1 PUSH2 0xE80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEBF PUSH2 0x828 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF1E JUMPI PUSH2 0xEE2 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5C SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP1 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFDD SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST DUP4 EQ PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1023 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1037 DUP6 DUP6 DUP4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x1041 DUP6 DUP4 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x105D DUP5 DUP5 PUSH2 0xD7A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x10DE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10CF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10DD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12A5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x115F DUP3 PUSH0 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1296 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128D SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 PUSH0 DUP4 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1315 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1385 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x146E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1554 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155F DUP4 DUP4 DUP4 PUSH2 0x1564 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15A8 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1682 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x163D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16C9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1713 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17BF DUP3 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x17C9 DUP2 DUP6 PUSH2 0x1787 JUMP JUMPDEST SWAP4 POP PUSH2 0x17D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1797 JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1805 DUP2 DUP5 PUSH2 0x17B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x183A DUP3 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP2 EQ PUSH2 0x1854 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1865 DUP2 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187D DUP2 PUSH2 0x186B JUMP JUMPDEST DUP2 EQ PUSH2 0x1887 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1898 DUP2 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C1 DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18D2 DUP6 DUP3 DUP7 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F0 DUP2 PUSH2 0x18DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x186B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1931 PUSH0 DUP4 ADD DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1959 DUP5 DUP3 DUP6 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1978 PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1986 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1997 DUP7 DUP3 DUP8 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19A8 DUP7 DUP3 DUP8 ADD PUSH2 0x188A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C7 DUP2 PUSH2 0x19B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH2 0x19FA PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A08 DUP5 DUP3 DUP6 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A1A DUP2 PUSH2 0x1830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x180D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5C DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ABB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1A77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B08 PUSH1 0x14 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B35 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B73 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B96 JUMPI PUSH2 0x1B95 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA6 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB1 DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C4F PUSH1 0x46 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP3 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7C DUP2 PUSH2 0x1C43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB7 PUSH1 0x19 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE4 DUP2 PUSH2 0x1CAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF5 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D0E DUP2 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x1B3C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D63 DUP3 PUSH2 0x186B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x186B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7E JUMPI PUSH2 0x1D7D PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBD PUSH1 0x1F DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DEA DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4369726375697420627265616B65722069732061637469766500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E25 PUSH1 0x19 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E30 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E52 DUP2 PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8D PUSH1 0x12 DUP4 PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E98 DUP3 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EBA DUP2 PUSH2 0x1E81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ED4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x1EE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x1EEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x190F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH4 0xAD704E6F DUP7 STATICCALL CODECOPY GASLIMIT SWAP2 CALLVALUE 0xD6 0xC5 0xEA GAS 0xBE 0xCB PUSH26 0x23385F4E9ACF1DCF228A3F91FE64736F6C634300081A00330000 ",
							"sourceMap": "301:4105:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2092:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1640:99:0;;;:::i;:::-;;4020:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3987:244:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:105:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2386:227:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;432:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2247:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;1021:158:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1537:97:0;;;:::i;:::-;;2558:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3792:220:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2621:818;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3447:337;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2794:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1022:89:4;1067:13;1099:5;1092:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:89;:::o;3241:186::-;3314:4;3330:13;3346:12;:10;:12::i;:::-;3330:28;;3368:31;3377:5;3384:7;3393:5;3368:8;:31::i;:::-;3416:4;3409:11;;;3241:186;;;;:::o;2092:97::-;2144:7;2170:12;;2163:19;;2092:97;:::o;1640:99:0:-;1531:13:1;:11;:13::i;:::-;1726:5:0::1;1701:22;;:30;;;;;;;;;;;;;;;;;;1640:99::o:0;4020:381::-;1531:13:1;:11;:13::i;:::-;2261:21:3::1;:19;:21::i;:::-;4125:18:0::2;:27;4144:7;:5;:7::i;:::-;4125:27;;;;;;;;;;;;;;;;4115:6;:37;;4107:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4219:6;4188:18;:27;4207:7;:5;:7::i;:::-;4188:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4271:1;4240:18;:27;4259:7;:5;:7::i;:::-;4240:27;;;;;;;;;;;;;;;;:32:::0;4236:105:::2;;4328:1;4289:27;:36;4317:7;:5;:7::i;:::-;4289:36;;;;;;;;;;;;;;;:40;;;;4236:105;4351:41;4369:4;4376:7;:5;:7::i;:::-;4385:6;4351:9;:41::i;:::-;2303:20:3::1;:18;:20::i;:::-;4020:381:0::0;:::o;3987:244:4:-;4074:4;4090:15;4108:12;:10;:12::i;:::-;4090:30;;4130:37;4146:4;4152:7;4161:5;4130:15;:37::i;:::-;4177:26;4187:4;4193:2;4197:5;4177:9;:26::i;:::-;4220:4;4213:11;;;3987:244;;;;;:::o;1089:105:0:-;1147:5;1172:14;;;;;;;;;;;1165:21;;1089:105;:::o;618:87:6:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2386:227:0:-;2442:44;2452:10;2472:4;2479:6;2442:9;:44::i;:::-;2531:6;2497:18;:30;2516:10;2497:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;2590:15;2548:27;:39;2576:10;2548:39;;;;;;;;;;;;;;;:57;;;;2386:227;:::o;432:27::-;;;;;;;;;;;;;:::o;2247:116:4:-;2312:7;2338:9;:18;2348:7;2338:18;;;;;;;;;;;;;;;;2331:25;;2247:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:6:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1224:93:4:-;1271:13;1303:7;1296:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:93;:::o;1537:97:0:-;1531:13:1;:11;:13::i;:::-;1622:4:0::1;1597:22;;:29;;;;;;;;;;;;;;;;;;1537:97::o:0;2558:178:4:-;2627:4;2643:13;2659:12;:10;:12::i;:::-;2643:28;;2681:27;2691:5;2698:2;2702:5;2681:9;:27::i;:::-;2725:4;2718:11;;;2558:178;;;;:::o;3792:220:0:-;1531:13:1;:11;:13::i;:::-;3894:6:0::1;3863:18;:27;3882:7;:5;:7::i;:::-;3863:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;3950:15;3911:27;:36;3939:7;:5;:7::i;:::-;3911:36;;;;;;;;;;;;;;;:54;;;;3976:28;3990:4;3997:6;3976:5;:28::i;:::-;3792:220:::0;:::o;2621:818::-;2261:21:3;:19;:21::i;:::-;2726:18:0::1;:30;2745:10;2726:30;;;;;;;;;;;;;;;;2716:6;:40;;2708:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2861:7;2819:27;:39;2847:10;2819:39;;;;;;;;;;;;;;;;:49;;;;:::i;:::-;2800:15;:68;;2792:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;2956:14;2973:27;2989:10;2973:15;:27::i;:::-;2956:44;;3045:9;;3035:6;3019:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;3011:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3093:25;3099:10;3111:6;3093:5;:25::i;:::-;3126:44;3144:4;3151:10;3163:6;3126:9;:44::i;:::-;3212:6;3178:18;:30;3197:10;3178:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;3267:1;3233:18;:30;3252:10;3233:30;;;;;;;;;;;;;;;;:35:::0;3229:203:::1;;3327:1;3285:27;:39;3313:10;3285:39;;;;;;;;;;;;;;;:43;;;;3229:203;;;3404:15;3362:27;:39;3390:10;3362:39;;;;;;;;;;;;;;;:57;;;;3229:203;2697:742;2303:20:3::0;:18;:20::i;:::-;2621:818:0;:::o;394:24::-;;;;:::o;3447:337::-;3507:7;3582;3546:27;:33;3574:4;3546:33;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;3527:15;:62;3523:239;;3602:14;3652:3;3647:1;3620:18;:24;3639:4;3620:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;3619:36;;;;:::i;:::-;3602:53;;3704:9;;3694:6;3678:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;3674:81;;3737:6;3730:13;;;;;3674:81;3591:171;3523:239;3775:1;3768:8;;3447:337;;;;:::o;2794:140:4:-;2874:7;2900:11;:18;2912:5;2900:18;;;;;;;;;;;;;;;:27;2919:7;2900:27;;;;;;;;;;;;;;;;2893:34;;2794:140;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8090:128:4:-;8174:37;8183:5;8190:7;8199:5;8206:4;8174:8;:37::i;:::-;8090:128;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1747:388:0:-;1459:22;;;;;;;;;;;1458:23;1450:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1870:18:::1;1900:6;1891;:15;;;;:::i;:::-;1870:36;;1917:18;1947:10;1938:6;:19;;;;:::i;:::-;1917:40;;1999:10;1986;:23;;;;:::i;:::-;1976:6;:33;1968:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2045:46;2061:6;2069:9;2080:10;2045:15;:46::i;:::-;2102:25;2108:6;2116:10;2102:5;:25::i;:::-;1859:276;;1747:388:::0;;;:::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;9764:477:4:-;9863:24;9890:25;9900:5;9907:7;9890:9;:25::i;:::-;9863:52;;9949:17;9929:16;:37;9925:310;;10005:5;9986:16;:24;9982:130;;;10064:7;10073:16;10091:5;10037:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;9982:130;10153:57;10162:5;10169:7;10197:5;10178:16;:24;10204:5;10153:8;:57::i;:::-;9925:310;9853:388;9764:477;;;:::o;7212:206::-;7301:1;7282:21;;:7;:21;;;7278:89;;7353:1;7326:30;;;;;;;;;;;:::i;:::-;;;;;;;;7278:89;7376:35;7384:7;7401:1;7405:5;7376:7;:35::i;:::-;7212:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6677:217:4:-;6775:1;6756:21;;:7;:21;;;6752:91;;6829:1;6800:32;;;;;;;;;;;:::i;:::-;;;;;;;;6752:91;6852:35;6868:1;6872:7;6881:5;6852:7;:35::i;:::-;6677:217;;:::o;9050:432::-;9179:1;9162:19;;:5;:19;;;9158:89;;9233:1;9204:32;;;;;;;;;;;:::i;:::-;;;;;;;;9158:89;9279:1;9260:21;;:7;:21;;;9256:90;;9332:1;9304:31;;;;;;;;;;;:::i;:::-;;;;;;;;9256:90;9385:5;9355:11;:18;9367:5;9355:18;;;;;;;;;;;;;;;:27;9374:7;9355:27;;;;;;;;;;;;;;;:35;;;;9404:9;9400:76;;;9450:7;9434:31;;9443:5;9434:31;;;9459:5;9434:31;;;;;;:::i;:::-;;;;;;;;9400:76;9050:432;;;;:::o;4604:308::-;4711:1;4695:18;;:4;:18;;;4691:86;;4763:1;4736:30;;;;;;;;;;;:::i;:::-;;;;;;;;4691:86;4804:1;4790:16;;:2;:16;;;4786:86;;4858:1;4829:32;;;;;;;;;;;:::i;:::-;;;;;;;;4786:86;4881:24;4889:4;4895:2;4899:5;4881:7;:24::i;:::-;4604:308;;;:::o;5227:1107::-;5332:1;5316:18;;:4;:18;;;5312:540;;5468:5;5452:12;;:21;;;;;;;:::i;:::-;;;;;;;;5312:540;;;5504:19;5526:9;:15;5536:4;5526:15;;;;;;;;;;;;;;;;5504:37;;5573:5;5559:11;:19;5555:115;;;5630:4;5636:11;5649:5;5605:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5555:115;5822:5;5808:11;:19;5790:9;:15;5800:4;5790:15;;;;;;;;;;;;;;;:37;;;;5490:362;5312:540;5880:1;5866:16;;:2;:16;;;5862:425;;6045:5;6029:12;;:21;;;;;;;;;;;5862:425;;;6257:5;6240:9;:13;6250:2;6240:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;5862:425;6317:2;6302:25;;6311:4;6302:25;;;6321:5;6302:25;;;;;;:::i;:::-;;;;;;;;5227:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:170::-;6900:22;6896:1;6888:6;6884:14;6877:46;6760:170;:::o;6936:366::-;7078:3;7099:67;7163:2;7158:3;7099:67;:::i;:::-;7092:74;;7175:93;7264:3;7175:93;:::i;:::-;7293:2;7288:3;7284:12;7277:19;;6936:366;;;:::o;7308:419::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7561:9;7555:4;7551:20;7547:1;7536:9;7532:17;7525:47;7589:131;7715:4;7589:131;:::i;:::-;7581:139;;7308:419;;;:::o;7733:180::-;7781:77;7778:1;7771:88;7878:4;7875:1;7868:15;7902:4;7899:1;7892:15;7919:194;7959:4;7979:20;7997:1;7979:20;:::i;:::-;7974:25;;8013:20;8031:1;8013:20;:::i;:::-;8008:25;;8057:1;8054;8050:9;8042:17;;8081:1;8075:4;8072:11;8069:37;;;8086:18;;:::i;:::-;8069:37;7919:194;;;;:::o;8119:191::-;8159:3;8178:20;8196:1;8178:20;:::i;:::-;8173:25;;8212:20;8230:1;8212:20;:::i;:::-;8207:25;;8255:1;8252;8248:9;8241:16;;8276:3;8273:1;8270:10;8267:36;;;8283:18;;:::i;:::-;8267:36;8119:191;;;;:::o;8316:294::-;8456:34;8452:1;8444:6;8440:14;8433:58;8525:34;8520:2;8512:6;8508:15;8501:59;8594:8;8589:2;8581:6;8577:15;8570:33;8316:294;:::o;8616:366::-;8758:3;8779:67;8843:2;8838:3;8779:67;:::i;:::-;8772:74;;8855:93;8944:3;8855:93;:::i;:::-;8973:2;8968:3;8964:12;8957:19;;8616:366;;;:::o;8988:419::-;9154:4;9192:2;9181:9;9177:18;9169:26;;9241:9;9235:4;9231:20;9227:1;9216:9;9212:17;9205:47;9269:131;9395:4;9269:131;:::i;:::-;9261:139;;8988:419;;;:::o;9413:175::-;9553:27;9549:1;9541:6;9537:14;9530:51;9413:175;:::o;9594:366::-;9736:3;9757:67;9821:2;9816:3;9757:67;:::i;:::-;9750:74;;9833:93;9922:3;9833:93;:::i;:::-;9951:2;9946:3;9942:12;9935:19;;9594:366;;;:::o;9966:419::-;10132:4;10170:2;10159:9;10155:18;10147:26;;10219:9;10213:4;10209:20;10205:1;10194:9;10190:17;10183:47;10247:131;10373:4;10247:131;:::i;:::-;10239:139;;9966:419;;;:::o;10391:410::-;10431:7;10454:20;10472:1;10454:20;:::i;:::-;10449:25;;10488:20;10506:1;10488:20;:::i;:::-;10483:25;;10543:1;10540;10536:9;10565:30;10583:11;10565:30;:::i;:::-;10554:41;;10744:1;10735:7;10731:15;10728:1;10725:22;10705:1;10698:9;10678:83;10655:139;;10774:18;;:::i;:::-;10655:139;10439:362;10391:410;;;;:::o;10807:180::-;10855:77;10852:1;10845:88;10952:4;10949:1;10942:15;10976:4;10973:1;10966:15;10993:185;11033:1;11050:20;11068:1;11050:20;:::i;:::-;11045:25;;11084:20;11102:1;11084:20;:::i;:::-;11079:25;;11123:1;11113:35;;11128:18;;:::i;:::-;11113:35;11170:1;11167;11163:9;11158:14;;10993:185;;;;:::o;11184:181::-;11324:33;11320:1;11312:6;11308:14;11301:57;11184:181;:::o;11371:366::-;11513:3;11534:67;11598:2;11593:3;11534:67;:::i;:::-;11527:74;;11610:93;11699:3;11610:93;:::i;:::-;11728:2;11723:3;11719:12;11712:19;;11371:366;;;:::o;11743:419::-;11909:4;11947:2;11936:9;11932:18;11924:26;;11996:9;11990:4;11986:20;11982:1;11971:9;11967:17;11960:47;12024:131;12150:4;12024:131;:::i;:::-;12016:139;;11743:419;;;:::o;12168:175::-;12308:27;12304:1;12296:6;12292:14;12285:51;12168:175;:::o;12349:366::-;12491:3;12512:67;12576:2;12571:3;12512:67;:::i;:::-;12505:74;;12588:93;12677:3;12588:93;:::i;:::-;12706:2;12701:3;12697:12;12690:19;;12349:366;;;:::o;12721:419::-;12887:4;12925:2;12914:9;12910:18;12902:26;;12974:9;12968:4;12964:20;12960:1;12949:9;12945:17;12938:47;13002:131;13128:4;13002:131;:::i;:::-;12994:139;;12721:419;;;:::o;13146:168::-;13286:20;13282:1;13274:6;13270:14;13263:44;13146:168;:::o;13320:366::-;13462:3;13483:67;13547:2;13542:3;13483:67;:::i;:::-;13476:74;;13559:93;13648:3;13559:93;:::i;:::-;13677:2;13672:3;13668:12;13661:19;;13320:366;;;:::o;13692:419::-;13858:4;13896:2;13885:9;13881:18;13873:26;;13945:9;13939:4;13935:20;13931:1;13920:9;13916:17;13909:47;13973:131;14099:4;13973:131;:::i;:::-;13965:139;;13692:419;;;:::o;14117:442::-;14266:4;14304:2;14293:9;14289:18;14281:26;;14317:71;14385:1;14374:9;14370:17;14361:6;14317:71;:::i;:::-;14398:72;14466:2;14455:9;14451:18;14442:6;14398:72;:::i;:::-;14480;14548:2;14537:9;14533:18;14524:6;14480:72;:::i;:::-;14117:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1596000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"calculateReward(address)": "infinite",
								"decimals()": "2518",
								"decimalsPlaces()": "2577",
								"disableCircuitBreaker()": "infinite",
								"enableCircuitBreaker()": "infinite",
								"maxSupply()": "2491",
								"name()": "infinite",
								"owner()": "2582",
								"ownerAddLiquidity(uint256)": "infinite",
								"ownerRemoveLiquidity(uint256)": "infinite",
								"removeLiquidityAndClaimRewards(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1388,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 601,
									"end": 1081,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 835,
									"end": 850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 813,
									"end": 817,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 819,
									"end": 825,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 910,
									"end": 915,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 910,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 910,
									"end": 923,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 910,
									"end": 923,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 933,
									"end": 940,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 933,
									"end": 950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 933,
									"end": 950,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 933,
									"end": 950,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 844,
									"end": 957,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 888,
									"end": 898,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 871,
									"end": 884,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 871,
									"end": 898,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 871,
									"end": 898,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 863,
									"end": 949,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 863,
									"end": 949,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 960,
									"end": 997,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 966,
									"end": 981,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 983,
									"end": 996,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 965,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 960,
									"end": 997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 960,
									"end": 997,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 960,
									"end": 997,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 997,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 960,
									"end": 997,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1020,
									"end": 1030,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1017,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1008,
									"end": 1030,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1030,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1030,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1008,
									"end": 1030,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1058,
									"end": 1073,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1041,
									"end": 1055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1041,
									"end": 1073,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 1081,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6775,
									"end": 6776,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6756,
									"end": 6763,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6756,
									"end": 6777,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6829,
									"end": 6830,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 6800,
									"end": 6832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6800,
									"end": 6832,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6752,
									"end": 6843,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6868,
									"end": 6869,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6872,
									"end": 6879,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6881,
									"end": 6886,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 6859,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6852,
									"end": 6887,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6894,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5332,
									"end": 5333,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5316,
									"end": 5320,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5468,
									"end": 5473,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5464,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 5452,
									"end": 5464,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 5452,
									"end": 5473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5504,
									"end": 5523,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5536,
									"end": 5540,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 5526,
									"end": 5541,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 5504,
									"end": 5541,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5504,
									"end": 5541,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5559,
									"end": 5570,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5559,
									"end": 5578,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5630,
									"end": 5634,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5636,
									"end": 5647,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5649,
									"end": 5654,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 5605,
									"end": 5655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5605,
									"end": 5655,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 5555,
									"end": 5670,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5822,
									"end": 5827,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5808,
									"end": 5819,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5808,
									"end": 5827,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5799,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5800,
									"end": 5804,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5790,
									"end": 5805,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5790,
									"end": 5827,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5490,
									"end": 5852,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5312,
									"end": 5852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5880,
									"end": 5881,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5866,
									"end": 5868,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5866,
									"end": 5882,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6045,
									"end": 6050,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6041,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6029,
									"end": 6041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6029,
									"end": 6050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6257,
									"end": 6262,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6250,
									"end": 6252,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6253,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6240,
									"end": 6262,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 5862,
									"end": 6287,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6317,
									"end": 6319,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6311,
									"end": 6315,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 6321,
									"end": 6326,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6302,
									"end": 6327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6302,
									"end": 6327,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5227,
									"end": 6334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5227,
									"end": 6334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3016,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2930,
									"end": 3016,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3005,
									"end": 3009,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 2998,
									"end": 3003,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3010,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2983,
									"end": 3010,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2983,
									"end": 3010,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3016,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3016,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3016,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3140,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3022,
									"end": 3140,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3093,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 3109,
									"end": 3114,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3093,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3093,
									"end": 3115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3093,
									"end": 3115,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 3093,
									"end": 3115,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3086,
									"end": 3091,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3083,
									"end": 3116,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3073,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 3073,
									"end": 3134,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3130,
									"end": 3131,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3127,
									"end": 3128,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3120,
									"end": 3132,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3073,
									"end": 3134,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 3073,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3140,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3232,
									"end": 3238,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3226,
									"end": 3239,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3273,
									"end": 3278,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3248,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3248,
									"end": 3279,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 3248,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3335,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3368,
									"end": 3410,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3361,
									"end": 3366,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3357,
									"end": 3411,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3291,
									"end": 3417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3460,
									"end": 3467,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 3507,
									"end": 3512,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3489,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3423,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 3616,
									"end": 3621,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3598,
									"end": 3622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3596,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3623,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3634,
									"end": 3635,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3639,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3747,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3735,
									"end": 3748,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3784,
									"end": 3789,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3757,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3935,
									"end": 3941,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3943,
									"end": 3949,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3951,
									"end": 3957,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3959,
									"end": 3965,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3975,
									"end": 3981,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4027,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 4012,
									"end": 4021,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4010,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 3999,
									"end": 4022,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4028,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4031,
									"end": 4110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 4031,
									"end": 4110,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 3992,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4161,
									"end": 4170,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4157,
									"end": 4174,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4151,
									"end": 4175,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4220,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4194,
									"end": 4200,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4191,
									"end": 4221,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4224,
									"end": 4303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 4224,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 4188,
									"end": 4305,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 4395,
									"end": 4402,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4386,
									"end": 4392,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4384,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4393,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 4329,
									"end": 4403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 4329,
									"end": 4403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4319,
									"end": 4403,
									"name": "SWAP7",
									"source": 9
								},
								{
									"begin": 4319,
									"end": 4403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4122,
									"end": 4413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4473,
									"end": 4475,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4458,
									"end": 4476,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4452,
									"end": 4477,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4522,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4496,
									"end": 4502,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4493,
									"end": 4523,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4526,
									"end": 4605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 4526,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 4490,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 4697,
									"end": 4704,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4688,
									"end": 4694,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4677,
									"end": 4686,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 4673,
									"end": 4695,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 4631,
									"end": 4705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 4631,
									"end": 4705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4705,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4621,
									"end": 4705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4423,
									"end": 4715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4754,
									"end": 4756,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4780,
									"end": 4844,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 4836,
									"end": 4843,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4827,
									"end": 4833,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4816,
									"end": 4825,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 4812,
									"end": 4834,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4844,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4780,
									"end": 4844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4844,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 4780,
									"end": 4844,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4844,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4770,
									"end": 4844,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4725,
									"end": 4854,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4893,
									"end": 4895,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4919,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 4975,
									"end": 4982,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4955,
									"end": 4964,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 4951,
									"end": 4973,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4919,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4919,
									"end": 4983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4919,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 4919,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4909,
									"end": 4983,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4909,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4864,
									"end": 4993,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5032,
									"end": 5035,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 5059,
									"end": 5121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5113,
									"end": 5120,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5104,
									"end": 5110,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 5089,
									"end": 5111,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5059,
									"end": 5121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5121,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 5059,
									"end": 5121,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5049,
									"end": 5121,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5049,
									"end": 5121,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5003,
									"end": 5131,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5253,
									"end": 5260,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5244,
									"end": 5250,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP11",
									"source": 9
								},
								{
									"begin": 5229,
									"end": 5251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 5197,
									"end": 5261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 5197,
									"end": 5261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5261,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5187,
									"end": 5261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5141,
									"end": 5271,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3802,
									"end": 5278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5336,
									"end": 5342,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5370,
									"end": 5375,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5364,
									"end": 5376,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5354,
									"end": 5376,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5354,
									"end": 5376,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5284,
									"end": 5383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5284,
									"end": 5383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5389,
									"end": 5569,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5389,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5437,
									"end": 5514,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5434,
									"end": 5435,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5427,
									"end": 5515,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5534,
									"end": 5538,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 5531,
									"end": 5532,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5524,
									"end": 5539,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5555,
									"end": 5556,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5548,
									"end": 5563,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5619,
									"end": 5625,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5657,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5650,
									"end": 5654,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5658,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 5636,
									"end": 5658,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5636,
									"end": 5658,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5703,
									"end": 5704,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5693,
									"end": 5705,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5724,
									"end": 5742,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 5772,
									"end": 5778,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5768,
									"end": 5785,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5758,
									"end": 5785,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5758,
									"end": 5785,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 5714,
									"end": 5795,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5842,
									"end": 5844,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5834,
									"end": 5840,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5831,
									"end": 5845,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5808,
									"end": 5846,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 5861,
									"end": 5879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 5861,
									"end": 5879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 5805,
									"end": 5889,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5626,
									"end": 5895,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5895,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5950,
									"end": 5954,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5973,
									"end": 5976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5965,
									"end": 5976,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5965,
									"end": 5976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5996,
									"end": 5999,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5993,
									"end": 5994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5986,
									"end": 6000,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6027,
									"end": 6028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 6009,
									"end": 6035,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6009,
									"end": 6035,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5901,
									"end": 6042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5901,
									"end": 6042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6085,
									"end": 6091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6132,
									"end": 6134,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6127,
									"end": 6129,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6120,
									"end": 6125,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6116,
									"end": 6130,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6112,
									"end": 6135,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 6102,
									"end": 6135,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6102,
									"end": 6135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6141,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6191,
									"end": 6199,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6235,
									"end": 6239,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6231,
									"end": 6247,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 6210,
									"end": 6247,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6210,
									"end": 6247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6147,
									"end": 6254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6329,
									"end": 6335,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6379,
									"end": 6380,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6367,
									"end": 6377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6363,
									"end": 6381,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 6432,
									"end": 6498,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6421,
									"end": 6430,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6402,
									"end": 6499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 6402,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6539,
									"end": 6548,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6520,
									"end": 6559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 6520,
									"end": 6559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6508,
									"end": 6559,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 6508,
									"end": 6559,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6592,
									"end": 6596,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6588,
									"end": 6597,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6581,
									"end": 6586,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6577,
									"end": 6598,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6568,
									"end": 6598,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6568,
									"end": 6598,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6641,
									"end": 6645,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6631,
									"end": 6639,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6627,
									"end": 6646,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6620,
									"end": 6625,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6617,
									"end": 6647,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 6607,
									"end": 6647,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6607,
									"end": 6647,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6260,
									"end": 6653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6687,
									"end": 6690,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6701,
									"end": 6713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6659,
									"end": 6719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 6853,
									"end": 6858,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 6835,
									"end": 6859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 6835,
									"end": 6859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 6826,
									"end": 6860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 6826,
									"end": 6860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 6808,
									"end": 6861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 6808,
									"end": 6861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6795,
									"end": 6861,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6795,
									"end": 6861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6725,
									"end": 6867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6725,
									"end": 6867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6916,
									"end": 6919,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6937,
									"end": 6942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6930,
									"end": 6942,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6930,
									"end": 6942,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6873,
									"end": 6948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6873,
									"end": 6948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 7095,
									"end": 7102,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 7064,
									"end": 7103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 7064,
									"end": 7103,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7198,
									"end": 7214,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 7174,
									"end": 7215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 7174,
									"end": 7215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7166,
									"end": 7172,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7159,
									"end": 7163,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7125,
									"end": 7216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 7125,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7119,
									"end": 7123,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7112,
									"end": 7217,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7030,
									"end": 7223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 7223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6954,
									"end": 7223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7274,
									"end": 7277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7229,
									"end": 7302,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7229,
									"end": 7302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 7385,
									"end": 7417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 7385,
									"end": 7417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7484,
									"end": 7490,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7476,
									"end": 7482,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7474,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 7426,
									"end": 7491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 7426,
									"end": 7491,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7361,
									"end": 7497,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7308,
									"end": 7497,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7308,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7580,
									"end": 7583,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7578,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7570,
									"end": 7584,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 7671,
									"end": 7672,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7669,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 7634,
									"end": 7673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 7634,
									"end": 7673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7607,
									"end": 7608,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7605,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7596,
									"end": 7609,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7587,
									"end": 7609,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7587,
									"end": 7609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 7563,
									"end": 7683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7503,
									"end": 7689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7503,
									"end": 7689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7796,
									"end": 7798,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7791,
									"end": 7794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7788,
									"end": 7799,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7862,
									"end": 7867,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 7830,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7830,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 7932,
									"end": 7942,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 7914,
									"end": 7943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 7914,
									"end": 7943,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 7912,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7900,
									"end": 7944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8097,
									"end": 8099,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8085,
									"end": 8095,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8082,
									"end": 8100,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8118,
									"end": 8126,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8126,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8126,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 8079,
									"end": 8128,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8215,
									"end": 8218,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 8197,
									"end": 8219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 8197,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8187,
									"end": 8195,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8183,
									"end": 8220,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8170,
									"end": 8181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 8141,
									"end": 8221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 8141,
									"end": 8221,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7800,
									"end": 8231,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7800,
									"end": 8231,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 7785,
									"end": 8231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 8238,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 8238,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8298,
									"end": 8306,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8348,
									"end": 8353,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8342,
									"end": 8346,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8338,
									"end": 8354,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 8317,
									"end": 8354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8317,
									"end": 8354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8244,
									"end": 8361,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8411,
									"end": 8417,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 8492,
									"end": 8493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8488,
									"end": 8494,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8480,
									"end": 8485,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8477,
									"end": 8478,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 8473,
									"end": 8486,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 8444,
									"end": 8495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 8444,
									"end": 8495,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8440,
									"end": 8496,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8525,
									"end": 8529,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 8519,
									"end": 8523,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8515,
									"end": 8530,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8505,
									"end": 8530,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8505,
									"end": 8530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8418,
									"end": 8536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8367,
									"end": 8536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8617,
									"end": 8621,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 8788,
									"end": 8791,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8782,
									"end": 8786,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 8763,
									"end": 8792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "tag",
									"source": 9,
									"value": "196"
								},
								{
									"begin": 8763,
									"end": 8792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8755,
									"end": 8792,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8755,
									"end": 8792,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8822,
									"end": 8823,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8818,
									"end": 8829,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8812,
									"end": 8816,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8809,
									"end": 8830,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 8801,
									"end": 8830,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8801,
									"end": 8830,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8541,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 8958,
									"end": 8995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 8958,
									"end": 8995,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9060,
									"end": 9078,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9052,
									"end": 9058,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9049,
									"end": 9079,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 9082,
									"end": 9100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 9046,
									"end": 9102,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9158,
									"end": 9162,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9152,
									"end": 9163,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 9126,
									"end": 9164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 9126,
									"end": 9164,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9271,
									"end": 9277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9263,
									"end": 9269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9257,
									"end": 9261,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 9211,
									"end": 9278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "tag",
									"source": 9,
									"value": "202"
								},
								{
									"begin": 9211,
									"end": 9278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9305,
									"end": 9306,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9329,
									"end": 9333,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9316,
									"end": 9333,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9316,
									"end": 9333,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9361,
									"end": 9363,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 9353,
									"end": 9359,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9350,
									"end": 9364,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9379,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10035,
									"end": 10036,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10052,
									"end": 10058,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10101,
									"end": 10110,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10096,
									"end": 10099,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 10092,
									"end": 10111,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10086,
									"end": 10112,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 10077,
									"end": 10112,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10077,
									"end": 10112,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 10049,
									"end": 10126,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 10212,
									"end": 10218,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10205,
									"end": 10210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 10152,
									"end": 10219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "tag",
									"source": 9,
									"value": "206"
								},
								{
									"begin": 10152,
									"end": 10219,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10146,
									"end": 10150,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10139,
									"end": 10220,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 10008,
									"end": 10230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 9373,
									"end": 9991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9425,
									"end": 9429,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 9421,
									"end": 9430,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 9413,
									"end": 9419,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9409,
									"end": 9431,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 9491,
									"end": 9495,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 9459,
									"end": 9496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 9459,
									"end": 9496,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9518,
									"end": 9519,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9546,
									"end": 9553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9543,
									"end": 9544,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9540,
									"end": 9554,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9625,
									"end": 9634,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9620,
									"end": 9623,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9616,
									"end": 9635,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9610,
									"end": 9636,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9602,
									"end": 9608,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9595,
									"end": 9637,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9676,
									"end": 9677,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9668,
									"end": 9674,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9664,
									"end": 9678,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9654,
									"end": 9678,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9654,
									"end": 9678,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9723,
									"end": 9725,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9712,
									"end": 9721,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9708,
									"end": 9726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9726,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9569,
									"end": 9573,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9566,
									"end": 9567,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9562,
									"end": 9574,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9557,
									"end": 9574,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9557,
									"end": 9574,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "tag",
									"source": 9,
									"value": "210"
								},
								{
									"begin": 9532,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9768,
									"end": 9774,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9759,
									"end": 9766,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9756,
									"end": 9775,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9826,
									"end": 9835,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9821,
									"end": 9824,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9817,
									"end": 9836,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9811,
									"end": 9837,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 9911,
									"end": 9915,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 9903,
									"end": 9909,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9899,
									"end": 9916,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9888,
									"end": 9897,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 9869,
									"end": 9917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "tag",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 9869,
									"end": 9917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9861,
									"end": 9867,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9854,
									"end": 9918,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9776,
									"end": 9932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 9753,
									"end": 9932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9974,
									"end": 9975,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 9966,
									"end": 9972,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9962,
									"end": 9976,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9958,
									"end": 9980,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9952,
									"end": 9956,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9945,
									"end": 9981,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9380,
									"end": 9991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9343,
									"end": 10230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8933,
									"end": 10236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8841,
									"end": 10236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8841,
									"end": 10236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10242,
									"end": 10360,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 10242,
									"end": 10360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10329,
									"end": 10353,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10347,
									"end": 10352,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10329,
									"end": 10353,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 10329,
									"end": 10353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10329,
									"end": 10353,
									"name": "tag",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 10329,
									"end": 10353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10327,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10317,
									"end": 10354,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10242,
									"end": 10360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10242,
									"end": 10360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10242,
									"end": 10360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10459,
									"end": 10463,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10497,
									"end": 10499,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10486,
									"end": 10495,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10482,
									"end": 10500,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10474,
									"end": 10500,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10474,
									"end": 10500,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 10578,
									"end": 10579,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10567,
									"end": 10576,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10563,
									"end": 10580,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10554,
									"end": 10560,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 10510,
									"end": 10581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 10510,
									"end": 10581,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10366,
									"end": 10588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10678,
									"end": 10689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10712,
									"end": 10718,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10707,
									"end": 10710,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10700,
									"end": 10719,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10752,
									"end": 10756,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10747,
									"end": 10750,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10743,
									"end": 10757,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10757,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10728,
									"end": 10757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10594,
									"end": 10763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10769,
									"end": 11002,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 10769,
									"end": 11002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10909,
									"end": 10943,
									"name": "PUSH",
									"source": 9,
									"value": "496E697469616C20737570706C792063616E6E6F74206265206D6F7265207468"
								},
								{
									"begin": 10905,
									"end": 10906,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10897,
									"end": 10903,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10893,
									"end": 10907,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10886,
									"end": 10944,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10978,
									"end": 10994,
									"name": "PUSH",
									"source": 9,
									"value": "616E206D617820737570706C792E000000000000000000000000000000000000"
								},
								{
									"begin": 10973,
									"end": 10975,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10965,
									"end": 10971,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10961,
									"end": 10976,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10954,
									"end": 10995,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10769,
									"end": 11002,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10769,
									"end": 11002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11008,
									"end": 11374,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 11008,
									"end": 11374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11150,
									"end": 11153,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11171,
									"end": 11238,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 11235,
									"end": 11237,
									"name": "PUSH",
									"source": 9,
									"value": "2E"
								},
								{
									"begin": 11230,
									"end": 11233,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11171,
									"end": 11238,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 11171,
									"end": 11238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11171,
									"end": 11238,
									"name": "tag",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 11171,
									"end": 11238,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11164,
									"end": 11238,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11164,
									"end": 11238,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11247,
									"end": 11340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 11336,
									"end": 11339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11247,
									"end": 11340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 11247,
									"end": 11340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11247,
									"end": 11340,
									"name": "tag",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 11247,
									"end": 11340,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11365,
									"end": 11367,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 11360,
									"end": 11363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11356,
									"end": 11368,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11349,
									"end": 11368,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11349,
									"end": 11368,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11008,
									"end": 11374,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11008,
									"end": 11374,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11008,
									"end": 11374,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11008,
									"end": 11374,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11380,
									"end": 11799,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 11380,
									"end": 11799,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11546,
									"end": 11550,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11584,
									"end": 11586,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11573,
									"end": 11582,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11569,
									"end": 11587,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11561,
									"end": 11587,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11561,
									"end": 11587,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11633,
									"end": 11642,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11627,
									"end": 11631,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11623,
									"end": 11643,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 11619,
									"end": 11620,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11608,
									"end": 11617,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11604,
									"end": 11621,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11597,
									"end": 11644,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11661,
									"end": 11792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 11787,
									"end": 11791,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11661,
									"end": 11792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 11661,
									"end": 11792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11661,
									"end": 11792,
									"name": "tag",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 11661,
									"end": 11792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11653,
									"end": 11792,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11653,
									"end": 11792,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11380,
									"end": 11799,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11380,
									"end": 11799,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11380,
									"end": 11799,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11380,
									"end": 11799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11805,
									"end": 11985,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 11805,
									"end": 11985,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11853,
									"end": 11930,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11850,
									"end": 11851,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11843,
									"end": 11931,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11950,
									"end": 11954,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 11947,
									"end": 11948,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 11940,
									"end": 11955,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11974,
									"end": 11978,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 11971,
									"end": 11972,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11964,
									"end": 11979,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12031,
									"end": 12034,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12050,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 12068,
									"end": 12069,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12050,
									"end": 12070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 12050,
									"end": 12070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12050,
									"end": 12070,
									"name": "tag",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 12050,
									"end": 12070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12045,
									"end": 12070,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12045,
									"end": 12070,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12084,
									"end": 12104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 12102,
									"end": 12103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12084,
									"end": 12104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 12084,
									"end": 12104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12084,
									"end": 12104,
									"name": "tag",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 12084,
									"end": 12104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12079,
									"end": 12104,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12079,
									"end": 12104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12127,
									"end": 12128,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12124,
									"end": 12125,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12120,
									"end": 12129,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12113,
									"end": 12129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12113,
									"end": 12129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12148,
									"end": 12151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 12145,
									"end": 12146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12142,
									"end": 12152,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12175,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12175,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 12139,
									"end": 12175,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12155,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 12155,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 12155,
									"end": 12173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12155,
									"end": 12173,
									"name": "tag",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 12155,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12139,
									"end": 12175,
									"name": "tag",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 12139,
									"end": 12175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11991,
									"end": 12182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12188,
									"end": 12306,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 12188,
									"end": 12306,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12275,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 12293,
									"end": 12298,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12275,
									"end": 12299,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 12275,
									"end": 12299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12275,
									"end": 12299,
									"name": "tag",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 12275,
									"end": 12299,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12270,
									"end": 12273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12263,
									"end": 12300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 12188,
									"end": 12306,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12188,
									"end": 12306,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12188,
									"end": 12306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12461,
									"end": 12465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12499,
									"end": 12501,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 12488,
									"end": 12497,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12484,
									"end": 12502,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12476,
									"end": 12502,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12476,
									"end": 12502,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12512,
									"end": 12583,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 12580,
									"end": 12581,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12569,
									"end": 12578,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12565,
									"end": 12582,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12556,
									"end": 12562,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 12512,
									"end": 12583,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 12512,
									"end": 12583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12512,
									"end": 12583,
									"name": "tag",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 12512,
									"end": 12583,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12593,
									"end": 12665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 12661,
									"end": 12663,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12650,
									"end": 12659,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12646,
									"end": 12664,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12637,
									"end": 12643,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 12593,
									"end": 12665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 12593,
									"end": 12665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12593,
									"end": 12665,
									"name": "tag",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 12593,
									"end": 12665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12675,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "235"
								},
								{
									"begin": 12743,
									"end": 12745,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 12732,
									"end": 12741,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12728,
									"end": 12746,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12719,
									"end": 12725,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12675,
									"end": 12747,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 12675,
									"end": 12747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12675,
									"end": 12747,
									"name": "tag",
									"source": 9,
									"value": "235"
								},
								{
									"begin": 12675,
									"end": 12747,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12312,
									"end": 12754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12853,
									"end": 12857,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12891,
									"end": 12893,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 12880,
									"end": 12889,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12876,
									"end": 12894,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12868,
									"end": 12894,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12868,
									"end": 12894,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12904,
									"end": 12975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 12972,
									"end": 12973,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12961,
									"end": 12970,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12957,
									"end": 12974,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12948,
									"end": 12954,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12904,
									"end": 12975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 12904,
									"end": 12975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12904,
									"end": 12975,
									"name": "tag",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 12904,
									"end": 12975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12760,
									"end": 12982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 4406,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c63ad704e6f86fa39459134d6c5ea5abecb7923385f4e9acf1dcf228a3f91fe64736f6c634300081a0033",
									".code": [
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "AFE8289A"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "AFE8289A"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "C8052107"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "D5ABEB01"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "D82E3962"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "A64254C3"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "51C6590A"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "52756986"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "21208FA2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "2254B79C"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 301,
											"end": 4406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1640,
											"end": 1739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4020,
											"end": 4401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4020,
											"end": 4401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1089,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1089,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2386,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2386,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 432,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 432,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1537,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3792,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3792,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2621,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2621,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 394,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 394,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3447,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3447,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3447,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1092,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1092,
											"end": 1104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3346,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3346,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3368,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3420,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2170,
											"end": 2182,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2092,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1640,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1701,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4151,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4144,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4144,
											"end": 4151,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4144,
											"end": 4151,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4144,
											"end": 4151,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4152,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4121,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4152,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4152,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4107,
											"end": 4177,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4107,
											"end": 4177,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4225,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4206,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4207,
											"end": 4212,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4207,
											"end": 4214,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4207,
											"end": 4214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4188,
											"end": 4225,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4188,
											"end": 4225,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4258,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4266,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4259,
											"end": 4264,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4259,
											"end": 4266,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4266,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4259,
											"end": 4266,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4267,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4341,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4236,
											"end": 4341,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4329,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4324,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4317,
											"end": 4322,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4317,
											"end": 4324,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4317,
											"end": 4324,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4317,
											"end": 4324,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4325,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4329,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4329,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4329,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4329,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4341,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4236,
											"end": 4341,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4392,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4369,
											"end": 4373,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4383,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4376,
											"end": 4381,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4376,
											"end": 4383,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4383,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4376,
											"end": 4383,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4391,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4360,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4351,
											"end": 4392,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4392,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4351,
											"end": 4392,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4108,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4108,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4130,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4130,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4177,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4177,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1147,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1172,
											"end": 1186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2442,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2486,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2442,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2526,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2497,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2605,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2548,
											"end": 2605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 432,
											"end": 459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 432,
											"end": 459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2355,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1296,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1296,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1537,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1597,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1597,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1626,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2659,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2659,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2659,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2691,
											"end": 2696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2681,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2681,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2729,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3882,
											"end": 3887,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3882,
											"end": 3889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 3889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3882,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3863,
											"end": 3900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3950,
											"end": 3965,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3939,
											"end": 3944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3946,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3946,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3939,
											"end": 3946,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3947,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3990,
											"end": 3994,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4003,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3976,
											"end": 4004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3976,
											"end": 4004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 4012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2755,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2756,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2756,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2756,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2708,
											"end": 2781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2708,
											"end": 2781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 2819,
											"end": 2846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2857,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2819,
											"end": 2868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2819,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2815,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2868,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2792,
											"end": 2943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2792,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2989,
											"end": 2999,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2973,
											"end": 3000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2973,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3045,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3019,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3019,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3019,
											"end": 3041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3019,
											"end": 3041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3054,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3054,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3011,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3011,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3099,
											"end": 3109,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3093,
											"end": 3118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3093,
											"end": 3118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3144,
											"end": 3148,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3161,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3126,
											"end": 3170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3126,
											"end": 3170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3207,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3178,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3178,
											"end": 3218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3267,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3262,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3233,
											"end": 3268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3323,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3324,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3328,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3328,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3419,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3400,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3401,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3419,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3229,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 3439,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 3439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 394,
											"end": 418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3589,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 3546,
											"end": 3573,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3546,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3546,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3523,
											"end": 3762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3655,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3643,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3620,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3620,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3619,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3619,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3678,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3678,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3713,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3674,
											"end": 3755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3730,
											"end": 3743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3755,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3674,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3523,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3523,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8183,
											"end": 8188,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8190,
											"end": 8197,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8199,
											"end": 8204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8174,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8174,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8174,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1747,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1450,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1450,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 1891,
											"end": 1897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1891,
											"end": 1906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1891,
											"end": 1906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1938,
											"end": 1957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1938,
											"end": 1957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1917,
											"end": 1957,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1986,
											"end": 2009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1986,
											"end": 2009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 2009,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1968,
											"end": 2032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1968,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2045,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2061,
											"end": 2067,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2078,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2090,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2045,
											"end": 2060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2045,
											"end": 2091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2045,
											"end": 2091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2045,
											"end": 2091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2108,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2102,
											"end": 2127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2102,
											"end": 2127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 2135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 2135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 2135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 2135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 2135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9863,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 9900,
											"end": 9905,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9914,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9890,
											"end": 9915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 9890,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9863,
											"end": 9915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9863,
											"end": 9915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 9966,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9929,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9929,
											"end": 9966,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10005,
											"end": 10010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9986,
											"end": 10002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9986,
											"end": 10010,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10071,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10073,
											"end": 10089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10037,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10037,
											"end": 10097,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 9982,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10162,
											"end": 10167,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10169,
											"end": 10176,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10197,
											"end": 10202,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10194,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 10209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10153,
											"end": 10210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10153,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9925,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 10241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 10241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 10241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7282,
											"end": 7303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7326,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7356,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7278,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7384,
											"end": 7391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 7376,
											"end": 7411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7376,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6800,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6752,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6868,
											"end": 6869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6852,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9167,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9204,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9204,
											"end": 9236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9158,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9267,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9281,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9332,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9304,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9335,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9256,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9385,
											"end": 9390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9366,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9372,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9382,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9355,
											"end": 9390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9443,
											"end": 9448,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9459,
											"end": 9464,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9434,
											"end": 9465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9434,
											"end": 9465,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9400,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9050,
											"end": 9482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4736,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 4691,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4829,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 4786,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4899,
											"end": 4904,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 4881,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 4881,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5452,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5540,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5526,
											"end": 5541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5578,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 5605,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5655,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 5555,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 5827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5808,
											"end": 5819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5808,
											"end": 5827,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5790,
											"end": 5805,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5490,
											"end": 5852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 5312,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5880,
											"end": 5881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6029,
											"end": 6041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5862,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6321,
											"end": 6326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 6302,
											"end": 6327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6327,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 6334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 6334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6900,
											"end": 6922,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7099,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7264,
											"end": 7267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 7175,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7549,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7525,
											"end": 7572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7589,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7781,
											"end": 7858,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7902,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7907,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7979,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8013,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8072,
											"end": 8083,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 8086,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8178,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8212,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8252,
											"end": 8253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8280,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 8283,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8456,
											"end": 8490,
											"name": "PUSH",
											"source": 9,
											"value": "4C6971756964697479206D7573742062652070726F766964656420666F722061"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8440,
											"end": 8454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8433,
											"end": 8491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8559,
											"name": "PUSH",
											"source": 9,
											"value": "74206C65617374203330206461797320746F207175616C69667920666F722072"
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8602,
											"name": "PUSH",
											"source": 9,
											"value": "6577617264730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 8843,
											"end": 8845,
											"name": "PUSH",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 8838,
											"end": 8841,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8779,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8944,
											"end": 8947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8855,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8968,
											"end": 8971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8964,
											"end": 8976,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9235,
											"end": 9239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9251,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9227,
											"end": 9228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9395,
											"end": 9399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9269,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9580,
											"name": "PUSH",
											"source": 9,
											"value": "5265776172642065786365656473206D617820737570706C7900000000000000"
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9581,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9757,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9833,
											"end": 9926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9946,
											"end": 9949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10219,
											"end": 10228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10190,
											"end": 10207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10373,
											"end": 10377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10247,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 10454,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 10488,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10545,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10583,
											"end": 10594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 10565,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10747,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10678,
											"end": 10761,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10774,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10855,
											"end": 10932,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 10956,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10942,
											"end": 10957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 10980,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10981,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 11050,
											"end": 11070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 11084,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 11128,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11167,
											"end": 11168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11324,
											"end": 11357,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11358,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11184,
											"end": 11365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11598,
											"end": 11600,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11593,
											"end": 11596,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11534,
											"end": 11601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 11610,
											"end": 11703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11719,
											"end": 11731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 11913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11947,
											"end": 11949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11986,
											"end": 12006,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 11984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11960,
											"end": 12007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 12150,
											"end": 12154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 12024,
											"end": 12155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12308,
											"end": 12335,
											"name": "PUSH",
											"source": 9,
											"value": "4369726375697420627265616B65722069732061637469766500000000000000"
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12292,
											"end": 12306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12285,
											"end": 12336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12168,
											"end": 12343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12576,
											"end": 12578,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 12571,
											"end": 12574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12512,
											"end": 12579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 12512,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12677,
											"end": 12680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12588,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 12588,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12706,
											"end": 12708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12697,
											"end": 12709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12349,
											"end": 12715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12887,
											"end": 12891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12925,
											"end": 12927,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 12928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12902,
											"end": 12928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12964,
											"end": 12984,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12960,
											"end": 12961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12945,
											"end": 12962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12938,
											"end": 12985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 13128,
											"end": 13132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 13002,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 13002,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12994,
											"end": 13133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 13140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12721,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13286,
											"end": 13306,
											"name": "PUSH",
											"source": 9,
											"value": "4275726E2076616C756520696E76616C69640000000000000000000000000000"
										},
										{
											"begin": 13282,
											"end": 13283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13274,
											"end": 13280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13270,
											"end": 13284,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13263,
											"end": 13307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13146,
											"end": 13314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 13547,
											"end": 13549,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13542,
											"end": 13545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 13483,
											"end": 13550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 13483,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13476,
											"end": 13550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13476,
											"end": 13550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 13648,
											"end": 13651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 13559,
											"end": 13652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 13559,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13677,
											"end": 13679,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13668,
											"end": 13680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13661,
											"end": 13680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13858,
											"end": 13862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13881,
											"end": 13899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13873,
											"end": 13899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13873,
											"end": 13899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13945,
											"end": 13954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13931,
											"end": 13932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13916,
											"end": 13933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13956,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 14099,
											"end": 14103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 13973,
											"end": 14104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 13973,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13965,
											"end": 14104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13965,
											"end": 14104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 14111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13692,
											"end": 14111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14266,
											"end": 14270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14304,
											"end": 14306,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14293,
											"end": 14302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14289,
											"end": 14307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14281,
											"end": 14307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 14385,
											"end": 14386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14374,
											"end": 14383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14370,
											"end": 14387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14361,
											"end": 14367,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14317,
											"end": 14388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 14317,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14466,
											"end": 14468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14455,
											"end": 14464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14451,
											"end": 14469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14448,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 14398,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 14398,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14548,
											"end": 14550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14537,
											"end": 14546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14524,
											"end": 14530,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 14480,
											"end": 14552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 14480,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14117,
											"end": 14559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"GenericLayout.sol",
								"contracts/access/Ownable.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/security/ReentrancyGuard.sol",
								"contracts/token/ERC20/ERC20.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"calculateReward(address)": "d82e3962",
							"decimals()": "313ce567",
							"decimalsPlaces()": "52756986",
							"disableCircuitBreaker()": "21208fa2",
							"enableCircuitBreaker()": "a64254c3",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerAddLiquidity(uint256)": "afe8289a",
							"ownerRemoveLiquidity(uint256)": "2254b79c",
							"removeLiquidityAndClaimRewards(uint256)": "c8052107",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_decimalsPlaces\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"deployerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalsPlaces\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableCircuitBreaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerRemoveLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityAndClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GenericLayout.sol\":\"GenericLayout\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GenericLayout.sol\":{\"keccak256\":\"0xf1446e533e69937c86f5a5e620b6539ac176366e466e8302c1547cbf3b4e6f3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a8536050e76e27ab8414f503a2cf84c3b4aedad58987d5f9acb06d358c0e51\",\"dweb:/ipfs/QmXnb5rPM7PV1STpifYTrzDzXzvHRxy46oVrDjygpY1Hek\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 801,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 807,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 809,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 813,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 438,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 725,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "maxSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "decimalsPlaces",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							},
							{
								"astId": 21,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_liquidityProvided",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_liquidityProvidedTimestamp",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 80,
								"contract": "GenericLayout.sol:GenericLayout",
								"label": "_circuitBreakerEnabled",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 438,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 725,
								"contract": "contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 801,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 807,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 809,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 813,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x28816fe28a16adf79ea8b1e65ad9364c060d8bd27b9556047c160ad628fec02b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0d6cd6afac3ef23d784b473048b9cf2a7f4b030f1ce87dc47a1a0f6f9fd137\",\"dweb:/ipfs/QmQQmZzgg7DqScr336vudetQCf6iAo9Dnj54vRieno5kfH\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 801,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 807,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 809,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 813,
								"contract": "contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GenericLayout.sol": {
				"ast": {
					"absolutePath": "GenericLayout.sol",
					"exportedSymbols": {
						"Context": [
							1483
						],
						"ERC20": [
							1303
						],
						"ERC20Burnable": [
							1427
						],
						"GenericLayout": [
							429
						],
						"IERC20": [
							1381
						],
						"IERC20Errors": [
							619
						],
						"IERC20Metadata": [
							1453
						],
						"Ownable": [
							577
						],
						"ReentrancyGuard": [
							779
						]
					},
					"id": 430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 1304,
							"src": "59:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 1428,
							"src": "102:60:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 578,
							"src": "164:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/security/ReentrancyGuard.sol",
							"file": "contracts/security/ReentrancyGuard.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 430,
							"sourceUnit": 780,
							"src": "249:48:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"327:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1303,
										"src": "327:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "327:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "ERC20Burnable",
										"nameLocations": [
											"334:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1427,
										"src": "334:13:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "334:13:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "Ownable",
										"nameLocations": [
											"362:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "362:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "362:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"371:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "371:15:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "371:15:0"
								}
							],
							"canonicalName": "GenericLayout",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429,
								779,
								577,
								1427,
								1303,
								619,
								1453,
								1381,
								1483
							],
							"name": "GenericLayout",
							"nameLocation": "310:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 15,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "409:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "394:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "394:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52756986",
									"id": 17,
									"mutability": "mutable",
									"name": "decimalsPlaces",
									"nameLocation": "445:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "432:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 16,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "432:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_liquidityProvided",
									"nameLocation": "504:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "468:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "468:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "487:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_liquidityProvidedTimestamp",
									"nameLocation": "565:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "529:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "537:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "529:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "548:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "852:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 48,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "871:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 49,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "888:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "871:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20737570706c792063616e6e6f74206265206d6f7265207468616e206d617820737570706c792e",
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "900:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809",
																"typeString": "literal_string \"Initial supply cannot be more than max supply.\""
															},
															"value": "Initial supply cannot be more than max supply."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c63c285dd01b9720b5828eccf38d507ee0ba8e7718c8fc6a3bd9fa0326c2809",
																"typeString": "literal_string \"Initial supply cannot be more than max supply.\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "863:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 55,
															"name": "deployerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "966:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 56,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "983:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 54,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "960:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "960:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "960:37:0"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1008:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1020:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1008:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1008:22:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "decimalsPlaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1041:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "_decimalsPlaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1058:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1041:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1041:32:0"
											}
										]
									},
									"id": 68,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 40,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 41,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "819:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 42,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 39,
												"name": "ERC20",
												"nameLocations": [
													"807:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1303,
												"src": "807:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "807:19:0"
										},
										{
											"arguments": [
												{
													"id": 44,
													"name": "deployerAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "835:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 45,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 43,
												"name": "Ownable",
												"nameLocations": [
													"827:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 577,
												"src": "827:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "827:24:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "637:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "623:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 26,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "666:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "652:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "691:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "683:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "723:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "715:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_decimalsPlaces",
												"nameLocation": "750:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "744:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 34,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "deployerAddress",
												"nameLocation": "784:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "776:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:194:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:0:0"
									},
									"scope": 429,
									"src": "601:480:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										857
									],
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1154:40:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"name": "decimalsPlaces",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "1172:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 73,
												"id": 75,
												"nodeType": "Return",
												"src": "1165:21:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1098:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 70,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1129:8:0"
									},
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1147:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 71,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:7:0"
									},
									"scope": 429,
									"src": "1089:105:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "_circuitBreakerEnabled",
									"nameLocation": "1363:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 429,
									"src": "1350:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 78,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1350:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1388:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1439:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1458:23:0",
															"subExpression": {
																"id": 83,
																"name": "_circuitBreakerEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1459:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4369726375697420627265616b657220697320616374697665",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1483:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																"typeString": "literal_string \"Circuit breaker is active\""
															},
															"value": "Circuit breaker is active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7112a1eaf1bd0e43974370626fed93d124534b3437949b347d8b0d49348072dc",
																"typeString": "literal_string \"Circuit breaker is active\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1450:61:0"
											},
											{
												"id": 88,
												"nodeType": "PlaceholderStatement",
												"src": "1522:1:0"
											}
										]
									},
									"id": 90,
									"name": "circuitBreakerNotActive",
									"nameLocation": "1413:23:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:0"
									},
									"src": "1404:127:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1586:48:0",
										"statements": [
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "_circuitBreakerEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1597:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1622:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1597:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1597:29:0"
											}
										]
									},
									"functionSelector": "a64254c3",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"1576:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "1576:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1576:9:0"
										}
									],
									"name": "enableCircuitBreaker",
									"nameLocation": "1546:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1586:0:0"
									},
									"scope": 429,
									"src": "1537:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1690:49:0",
										"statements": [
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "_circuitBreakerEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1701:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1726:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1701:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1701:30:0"
											}
										]
									},
									"functionSelector": "21208fa2",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 102,
												"name": "onlyOwner",
												"nameLocations": [
													"1680:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "1680:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1680:9:0"
										}
									],
									"name": "disableCircuitBreaker",
									"nameLocation": "1649:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1690:0:0"
									},
									"scope": 429,
									"src": "1640:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1023
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1859:276:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1878:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "1870:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 124,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1891:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030303030",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "1891:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1870:36:0"
											},
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "1925:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "1917:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1917:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 130,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1938:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 131,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1947:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1938:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1917:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1976:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 136,
																	"name": "sendAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1986:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 137,
																	"name": "burnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1999:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1986:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1976:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e2076616c756520696e76616c6964",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2011:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															},
															"value": "Burn value invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1968:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1968:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 147,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "2069:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 148,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2080:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 143,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2045:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GenericLayout_$429_$",
																"typeString": "type(contract super GenericLayout)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2051:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1023,
														"src": "2045:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2045:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2045:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2108:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2116:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 151,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "2102:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2102:25:0"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "circuitBreakerNotActive",
												"nameLocations": [
													"1835:23:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 90,
												"src": "1835:23:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1835:23:0"
										}
									],
									"name": "_transfer",
									"nameLocation": "1756:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1826:8:0"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1790:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1782:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1809:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1801:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:51:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:0:0"
									},
									"scope": 429,
									"src": "1747:388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1176
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2315:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2353:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2359:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 169,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2326:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GenericLayout_$429_$",
																"typeString": "type(contract super GenericLayout)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2332:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1176,
														"src": "2326:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2326:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2326:44:0"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 165,
												"name": "circuitBreakerNotActive",
												"nameLocations": [
													"2268:23:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 90,
												"src": "2268:23:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2268:23:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "2153:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 167,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2301:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2174:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2196:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2188:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2208:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:42:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2315:0:0"
									},
									"scope": 429,
									"src": "2144:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "2431:182:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2452:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2456:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2452:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2472:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2464:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2464:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2464:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2479:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "2442:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2442:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2442:44:0"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 193,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2497:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 196,
														"indexExpression": {
															"expression": {
																"id": 194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2516:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2520:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2516:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2497:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 197,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2531:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2497:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2497:40:0"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 200,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2548:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 203,
														"indexExpression": {
															"expression": {
																"id": 201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2576:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2580:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2576:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2548:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 204,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2596:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2590:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2548:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2548:57:0"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2395:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2416:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2408:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:16:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:0"
									},
									"scope": 429,
									"src": "2386:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2697:742:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 218,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "2726:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 221,
																"indexExpression": {
																	"expression": {
																		"id": 219,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2745:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2749:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2745:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2726:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2716:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2758:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2708:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 227,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2806:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2800:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 229,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "2819:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 232,
																	"indexExpression": {
																		"expression": {
																			"id": 230,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2847:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2851:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2847:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2819:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2861:7:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "2819:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2800:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f72206174206c65617374203330206461797320746f207175616c69667920666f722072657761726473",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2870:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															},
															"value": "Liquidity must be provided for at least 30 days to qualify for rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2792:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2792:151:0"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2964:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "2956:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 242,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2989:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2993:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2989:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 241,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "2973:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2956:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 247,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "3019:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3019:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 249,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "3035:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3019:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 251,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "3045:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3019:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642065786365656473206d617820737570706c79",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3056:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															},
															"value": "Reward exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3011:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3011:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3103:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3111:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 256,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "3093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3093:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "3093:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 265,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3144:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3136:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3136:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3151:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3155:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3163:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "3126:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "3126:44:0"
											},
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 272,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "3178:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 275,
														"indexExpression": {
															"expression": {
																"id": 273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3197:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3201:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3197:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3178:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 276,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3212:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3178:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "3178:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 279,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "3233:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"expression": {
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3252:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3256:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3252:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3233:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "3347:85:0",
													"statements": [
														{
															"expression": {
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 293,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "3362:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"expression": {
																			"id": 294,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3390:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3394:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3390:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3362:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 297,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3404:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3410:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3404:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3362:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 300,
															"nodeType": "ExpressionStatement",
															"src": "3362:57:0"
														}
													]
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "3229:203:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "3270:71:0",
													"statements": [
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 285,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "3285:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 288,
																	"indexExpression": {
																		"expression": {
																			"id": 286,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3313:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3317:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3313:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3285:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3285:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "3285:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c8052107",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 213,
												"name": "nonReentrant",
												"nameLocations": [
													"2684:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 744,
												"src": "2684:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2684:12:0"
										}
									],
									"name": "removeLiquidityAndClaimRewards",
									"nameLocation": "2630:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2669:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2661:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:16:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2697:0:0"
									},
									"scope": 429,
									"src": "2621:818:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "3516:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 311,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3533:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3527:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 313,
																"name": "_liquidityProvidedTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3546:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 315,
															"indexExpression": {
																"id": 314,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3574:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3546:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3330",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3582:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "3546:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3527:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "3523:239:0",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "3591:171:0",
													"statements": [
														{
															"assignments": [
																320
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 320,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "3610:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 340,
																	"src": "3602:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 319,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3602:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 329,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 321,
																					"name": "_liquidityProvided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 21,
																					"src": "3620:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 323,
																				"indexExpression": {
																					"id": 322,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 306,
																					"src": "3639:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3620:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3647:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "3620:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3619:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3652:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3619:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3602:53:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 330,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "3678:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3678:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 332,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "3694:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3678:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 334,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "3704:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3678:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 339,
															"nodeType": "IfStatement",
															"src": "3674:81:0",
															"trueBody": {
																"id": 338,
																"nodeType": "Block",
																"src": "3715:40:0",
																"statements": [
																	{
																		"expression": {
																			"id": 336,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 320,
																			"src": "3737:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 310,
																		"id": 337,
																		"nodeType": "Return",
																		"src": "3730:13:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3775:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 310,
												"id": 343,
												"nodeType": "Return",
												"src": "3768:8:0"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3456:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3472:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:14:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3507:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3506:9:0"
									},
									"scope": 429,
									"src": "3447:337:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "3852:160:0",
										"statements": [
											{
												"expression": {
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 352,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "3863:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 355,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3882:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3882:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3863:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 356,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3894:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3863:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3863:37:0"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 359,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3911:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 362,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 360,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3939:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3939:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3911:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 363,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3950:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3956:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3950:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3911:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "3911:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 370,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3990:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3982:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3982:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3997:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 367,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "3976:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "3976:28:0"
											}
										]
									},
									"functionSelector": "afe8289a",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 349,
												"name": "onlyOwner",
												"nameLocations": [
													"3842:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "3842:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3842:9:0"
										}
									],
									"name": "ownerAddLiquidity",
									"nameLocation": "3801:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3827:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3819:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:16:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:0:0"
									},
									"scope": 429,
									"src": "3792:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "4096:305:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 386,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "4115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 387,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "4125:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 390,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 388,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "4144:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4144:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4125:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4115:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4154:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4107:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "4107:70:0"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 395,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4188:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 398,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 396,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4207:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4207:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4188:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 399,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "4219:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4188:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "4188:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 402,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4240:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 405,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 403,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4259:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4240:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4240:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "4236:105:0",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "4274:67:0",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 408,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "4289:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 411,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 409,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "4317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4289:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4289:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "4289:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4369:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GenericLayout_$429",
																		"typeString": "contract GenericLayout"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4361:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4361:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4361:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 422,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "4376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4376:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "4385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															157
														],
														"referencedDeclaration": 157,
														"src": "4351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4351:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "4351:41:0"
											}
										]
									},
									"functionSelector": "2254b79c",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 380,
												"name": "onlyOwner",
												"nameLocations": [
													"4073:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4073:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4073:9:0"
										},
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "nonReentrant",
												"nameLocations": [
													"4083:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 744,
												"src": "4083:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4083:12:0"
										}
									],
									"name": "ownerRemoveLiquidity",
									"nameLocation": "4029:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4058:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4049:16:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4096:0:0"
									},
									"scope": 429,
									"src": "4020:381:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 430,
							"src": "301:4105:0",
							"usedErrors": [
								443,
								448,
								589,
								594,
								599,
								608,
								613,
								618
							],
							"usedEvents": [
								454,
								1315,
								1324
							]
						}
					],
					"src": "33:4375:0"
				},
				"id": 0
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1483
						],
						"Ownable": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 1484,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 432,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1483,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 435,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "692:7:1"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577,
								1483
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 437,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 443,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 448,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 454,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 460,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 467,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 466,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 472,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 480,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 577,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 488,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 494,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 493,
												"id": 495,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 577,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 501,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 503,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 507,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1465,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 506,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 510,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 577,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 517,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 577,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 537,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 543,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 542,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 548,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 551,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 533,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 577,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 562,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"id": 564,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 438,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 567,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 571,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 577,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "663:2438:1",
							"usedErrors": [
								443,
								448
							],
							"usedEvents": [
								454
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							714
						],
						"IERC20Errors": [
							619
						],
						"IERC721Errors": [
							667
						]
					},
					"id": 715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 619,
							"linearizedBaseContracts": [
								619
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 589,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 594,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 599,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 608,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 613,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 618,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 715,
							"src": "278:1764:2",
							"usedErrors": [
								589,
								594,
								599,
								608,
								613,
								618
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 620,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 667,
							"linearizedBaseContracts": [
								667
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 625,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 630,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 639,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 644,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 649,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 656,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 661,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 666,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 715,
							"src": "2186:2092:2",
							"usedErrors": [
								625,
								630,
								639,
								644,
								649,
								656,
								661,
								666
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 714,
							"linearizedBaseContracts": [
								714
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 679,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 684,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 689,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 696,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 701,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 706,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 713,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 715,
							"src": "4424:2107:2",
							"usedErrors": [
								679,
								684,
								689,
								696,
								701,
								706,
								713
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 720,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 718,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 723,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 725,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 779,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 728,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 729,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 733,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 779,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 739,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 740,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 744,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 749,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 755,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 779,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 763,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 779,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 774,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 772,
												"id": 776,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 779,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 780,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1483
						],
						"ERC20": [
							1303
						],
						"IERC20": [
							1381
						],
						"IERC20Errors": [
							619
						],
						"IERC20Metadata": [
							1453
						]
					},
					"id": 1304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1304,
							"sourceUnit": 1382,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 782,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1381,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 785,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1304,
							"sourceUnit": 1454,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 784,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1453,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 787,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1304,
							"sourceUnit": 1484,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 786,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1483,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1304,
							"sourceUnit": 715,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 619,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "Context",
										"nameLocations": [
											"376:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "376:7:4"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "376:7:4"
								},
								{
									"baseName": {
										"id": 792,
										"name": "IERC20",
										"nameLocations": [
											"385:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1381,
										"src": "385:6:4"
									},
									"id": 793,
									"nodeType": "InheritanceSpecifier",
									"src": "385:6:4"
								},
								{
									"baseName": {
										"id": 794,
										"name": "IERC20Metadata",
										"nameLocations": [
											"393:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1453,
										"src": "393:14:4"
									},
									"id": 795,
									"nodeType": "InheritanceSpecifier",
									"src": "393:14:4"
								},
								{
									"baseName": {
										"id": 796,
										"name": "IERC20Errors",
										"nameLocations": [
											"409:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 619,
										"src": "409:12:4"
									},
									"id": 797,
									"nodeType": "InheritanceSpecifier",
									"src": "409:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1303,
							"linearizedBaseContracts": [
								1303,
								619,
								1453,
								1381,
								1483
							],
							"name": "ERC20",
							"nameLocation": "367:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 801,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "472:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "428:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 800,
										"keyName": "account",
										"keyNameLocation": "444:7:4",
										"keyType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "436:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "428:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "455:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 807,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "560:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "488:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 806,
										"keyName": "account",
										"keyNameLocation": "504:7:4",
										"keyType": {
											"id": 802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "496:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "488:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"keyName": "spender",
											"keyNameLocation": "531:7:4",
											"keyType": {
												"id": 803,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "523:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "515:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 804,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "542:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 809,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "594:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "578:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 808,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 811,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "628:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "613:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 810,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "613:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 813,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "654:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1303,
									"src": "639:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 812,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "639:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "900:57:4",
										"statements": [
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "910:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "918:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "910:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "910:13:4"
											},
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 825,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "933:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 826,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "943:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "933:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "933:17:4"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "668:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 830,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "870:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "856:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 815,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "891:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "877:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:44:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "900:0:4"
									},
									"scope": 1303,
									"src": "844:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1440
									],
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "1082:29:4",
										"statements": [
											{
												"expression": {
													"id": 836,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 811,
													"src": "1099:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 835,
												"id": 837,
												"nodeType": "Return",
												"src": "1092:12:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "963:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1031:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:2:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1067:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1067:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:15:4"
									},
									"scope": 1303,
									"src": "1022:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1446
									],
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1286:31:4",
										"statements": [
											{
												"expression": {
													"id": 845,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 813,
													"src": "1303:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 844,
												"id": 846,
												"nodeType": "Return",
												"src": "1296:14:4"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "1117:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1233:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1271:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1271:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:15:4"
									},
									"scope": 1303,
									"src": "1224:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1452
									],
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2006:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2023:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 853,
												"id": 855,
												"nodeType": "Return",
												"src": "2016:9:4"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1323:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1959:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:2:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1999:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 851,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1999:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:7:4"
									},
									"scope": 1303,
									"src": "1950:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1330
									],
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "2153:36:4",
										"statements": [
											{
												"expression": {
													"id": 863,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "2170:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 864,
												"nodeType": "Return",
												"src": "2163:19:4"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2038:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2101:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:2:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "2144:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:9:4"
									},
									"scope": 1303,
									"src": "2092:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1338
									],
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2321:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 874,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "2338:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 876,
													"indexExpression": {
														"id": 875,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2348:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2338:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 873,
												"id": 877,
												"nodeType": "Return",
												"src": "2331:25:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "2195:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2266:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:17:4"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2312:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:9:4"
									},
									"scope": 1303,
									"src": "2247:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2633:103:4",
										"statements": [
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2651:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "2643:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 889,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2643:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 891,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "2659:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2659:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2643:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "2691:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "2698:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "2702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2681:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2681:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2725:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 888,
												"id": 901,
												"nodeType": "Return",
												"src": "2718:11:4"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2369:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2567:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2584:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2576:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2588:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:27:4"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2627:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2627:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:6:4"
									},
									"scope": 1303,
									"src": "2558:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2883:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 913,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "2900:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 915,
														"indexExpression": {
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "2912:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2900:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 917,
													"indexExpression": {
														"id": 916,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "2919:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2900:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 912,
												"id": 918,
												"nodeType": "Return",
												"src": "2893:34:4"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "2742:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2803:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2821:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "2813:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2836:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "2828:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:32:4"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "2874:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:9:4"
									},
									"scope": 1303,
									"src": "2794:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1368
									],
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "3320:107:4",
										"statements": [
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3338:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 943,
														"src": "3330:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3330:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 932,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3346:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3346:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3330:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "3377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "3384:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3393:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1194,
															1254
														],
														"referencedDeclaration": 1194,
														"src": "3368:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "3368:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3416:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 929,
												"id": 942,
												"nodeType": "Return",
												"src": "3409:11:4"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2940:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3250:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3266:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3258:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3283:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3275:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3275:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3257:32:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3314:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3314:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:6:4"
									},
									"scope": 1303,
									"src": "3241:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1380
									],
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "4080:151:4",
										"statements": [
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4098:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "4090:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 956,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4090:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "4108:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4090:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4146:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "4152:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4161:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "4130:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4130:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "4130:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4187:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "4193:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 967,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4177:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "4177:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4220:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 955,
												"id": 974,
												"nodeType": "Return",
												"src": "4213:11:4"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3433:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3996:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4017:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "4009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4031:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "4023:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4043:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "4035:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:41:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "4074:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4074:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4073:6:4"
									},
									"scope": 1303,
									"src": "3987:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "4681:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "4695:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4711:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4703:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 987,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4703:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4703:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4695:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "4691:86:4",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "4715:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4763:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4755:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 993,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4755:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4755:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 992,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "4736:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4736:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 998,
															"nodeType": "RevertStatement",
															"src": "4729:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "4790:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4804:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4796:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1002,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4796:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4796:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4790:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "4786:86:4",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "4808:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4858:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4850:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1008,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4850:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4850:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1007,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "4829:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4829:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1013,
															"nodeType": "RevertStatement",
															"src": "4822:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4889:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "4895:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4899:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "4881:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "4881:24:4"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "4237:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "4613:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4631:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4623:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4645:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4637:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4657:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "4649:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4622:41:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4681:0:4"
									},
									"scope": 1303,
									"src": "4604:308:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "5302:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "5316:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5332:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5324:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1034,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5324:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5324:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5316:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1070,
													"nodeType": "Block",
													"src": "5490:362:4",
													"statements": [
														{
															"assignments": [
																1045
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1045,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "5512:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1070,
																	"src": "5504:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1044,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5504:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1049,
															"initialValue": {
																"baseExpression": {
																	"id": 1046,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "5526:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1048,
																"indexExpression": {
																	"id": 1047,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "5536:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5526:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5504:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1050,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "5559:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1051,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "5573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5559:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1060,
															"nodeType": "IfStatement",
															"src": "5555:115:4",
															"trueBody": {
																"id": 1059,
																"nodeType": "Block",
																"src": "5580:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1054,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "5630:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1055,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1045,
																					"src": "5636:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1056,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "5649:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1053,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "5605:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5605:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1058,
																		"nodeType": "RevertStatement",
																		"src": "5598:57:4"
																	}
																]
															}
														},
														{
															"id": 1069,
															"nodeType": "UncheckedBlock",
															"src": "5683:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1061,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "5790:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1063,
																			"indexExpression": {
																				"id": 1062,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1026,
																				"src": "5800:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5790:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1064,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "5808:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1065,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1030,
																				"src": "5822:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5808:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5790:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1068,
																	"nodeType": "ExpressionStatement",
																	"src": "5790:37:4"
																}
															]
														}
													]
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "5312:540:4",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "5336:148:4",
													"statements": [
														{
															"expression": {
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1039,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "5452:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1040,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "5468:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5452:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"nodeType": "ExpressionStatement",
															"src": "5452:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "5866:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5880:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5872:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1073,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5872:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5872:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5866:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "6081:206:4",
													"statements": [
														{
															"id": 1090,
															"nodeType": "UncheckedBlock",
															"src": "6095:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1084,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "6240:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1086,
																			"indexExpression": {
																				"id": 1085,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "6250:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6240:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1087,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1030,
																			"src": "6257:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6240:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "6240:22:4"
																}
															]
														}
													]
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "5862:425:4",
												"trueBody": {
													"id": 1083,
													"nodeType": "Block",
													"src": "5884:191:4",
													"statements": [
														{
															"id": 1082,
															"nodeType": "UncheckedBlock",
															"src": "5898:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1078,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "6029:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1079,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1030,
																			"src": "6045:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6029:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1081,
																	"nodeType": "ExpressionStatement",
																	"src": "6029:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1094,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "6317:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "6321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "6302:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6302:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "6297:30:4"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "4918:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5236:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5252:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "5244:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5266:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "5258:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5278:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "5270:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:41:4"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5302:0:4"
									},
									"scope": 1303,
									"src": "5227:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "6742:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "6756:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6767:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1109,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6767:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6767:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6756:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "IfStatement",
												"src": "6752:91:4",
												"trueBody": {
													"id": 1121,
													"nodeType": "Block",
													"src": "6779:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6829:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6821:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1115,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6821:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6821:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1114,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "6800:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6800:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1120,
															"nodeType": "RevertStatement",
															"src": "6793:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6868:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6860:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6860:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6860:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "6872:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "6881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "6852:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "6852:35:4"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "6340:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6686:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6700:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6692:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6717:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6709:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:32:4"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6742:0:4"
									},
									"scope": 1303,
									"src": "6677:217:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "7268:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1141,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "7282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7301:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7293:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1142,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7293:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7293:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7282:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "IfStatement",
												"src": "7278:89:4",
												"trueBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "7305:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7353:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7345:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1148,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7345:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7345:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1147,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7326:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7326:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1153,
															"nodeType": "RevertStatement",
															"src": "7319:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "7384:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7401:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7393:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7393:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7393:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1162,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "7405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "7376:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7376:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "7376:35:4"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "6900:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7221:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "7227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "7244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7226:32:4"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:4"
									},
									"scope": 1303,
									"src": "7212:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "7512:41:4",
										"statements": []
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7433:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7462:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "7454:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7476:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "7468:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7468:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7488:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "7480:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:41:4"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7512:0:4"
									},
									"scope": 1303,
									"src": "7424:129:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "8164:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1187,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8183:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "8190:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "8199:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8206:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1186,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1194,
															1254
														],
														"referencedDeclaration": 1254,
														"src": "8174:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "8174:37:4"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "7560:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8099:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8148:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8140:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8107:47:4"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8164:0:4"
									},
									"scope": 1303,
									"src": "8090:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "9148:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1206,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "9162:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9179:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1207,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9171:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9171:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9162:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "9158:89:4",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "9183:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9233:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9225:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1213,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9225:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9225:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1212,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "9204:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9204:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1218,
															"nodeType": "RevertStatement",
															"src": "9197:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1221,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "9260:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9279:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9271:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1222,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9271:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9271:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9260:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "9256:90:4",
												"trueBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "9283:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9332:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9324:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1228,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9324:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9324:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1227,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "9304:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9304:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1233,
															"nodeType": "RevertStatement",
															"src": "9297:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1236,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "9355:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1239,
															"indexExpression": {
																"id": 1237,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "9367:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9355:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1240,
														"indexExpression": {
															"id": 1238,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "9374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9355:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9385:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9355:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "9355:35:4"
											},
											{
												"condition": {
													"id": 1244,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1203,
													"src": "9404:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "9400:76:4",
												"trueBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "9415:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1246,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "9443:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "9450:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "9459:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1245,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "9434:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9434:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "EmitStatement",
															"src": "9429:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "8224:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9059:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9076:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "9068:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9068:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9091:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "9083:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9108:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "9100:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9120:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "9115:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9115:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9067:63:4"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9148:0:4"
									},
									"scope": 1303,
									"src": "9050:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "9853:388:4",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9871:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "9863:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9863:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"arguments": [
														{
															"id": 1267,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "9900:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "9907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1266,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "9890:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9890:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9863:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "9929:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9954:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1273,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9954:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1272,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9949:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9963:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9949:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9929:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "9925:310:4",
												"trueBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "9968:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9986:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "10005:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9986:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1288,
															"nodeType": "IfStatement",
															"src": "9982:130:4",
															"trueBody": {
																"id": 1287,
																"nodeType": "Block",
																"src": "10012:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1282,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "10064:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1283,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "10073:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1284,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "10091:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1281,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "10037:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10037:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1286,
																		"nodeType": "RevertStatement",
																		"src": "10030:67:4"
																	}
																]
															}
														},
														{
															"id": 1298,
															"nodeType": "UncheckedBlock",
															"src": "10125:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1290,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1257,
																				"src": "10162:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1291,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "10169:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1292,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1265,
																					"src": "10178:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1293,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1261,
																					"src": "10197:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10178:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10204:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1289,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1194,
																				1254
																			],
																			"referencedDeclaration": 1254,
																			"src": "10153:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10153:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1297,
																	"nodeType": "ExpressionStatement",
																	"src": "10153:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "9488:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "9773:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9797:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "9789:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9789:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9812:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "9804:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9804:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9829:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "9821:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9788:47:4"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9853:0:4"
									},
									"scope": 1303,
									"src": "9764:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1304,
							"src": "349:9894:4",
							"usedErrors": [
								589,
								594,
								599,
								608,
								613,
								618
							],
							"usedEvents": [
								1315,
								1324
							]
						}
					],
					"src": "105:10139:4"
				},
				"id": 4
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1306,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1381,
							"linearizedBaseContracts": [
								1381
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1315,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1324,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1381,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1381,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1381,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1381,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1381,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1381,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1382,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1315,
								1324
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1483
						],
						"ERC20": [
							1303
						],
						"ERC20Burnable": [
							1427
						]
					},
					"id": 1428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1304,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1384,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1303,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1428,
							"sourceUnit": 1484,
							"src": "186:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1386,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1483,
										"src": "194:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1389,
										"name": "Context",
										"nameLocations": [
											"483:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "483:7:6"
									},
									"id": 1390,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:6"
								},
								{
									"baseName": {
										"id": 1391,
										"name": "ERC20",
										"nameLocations": [
											"492:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1303,
										"src": "492:5:6"
									},
									"id": 1392,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:6"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1427,
							"linearizedBaseContracts": [
								1427,
								1303,
								619,
								1453,
								1381,
								1483
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "662:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1399,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "678:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "672:26:6"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:6",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "632:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:6"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:6"
									},
									"scope": 1427,
									"src": "618:87:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "1086:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "1112:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "1121:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "1135:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1413,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "1096:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "1157:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "1166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:6"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "1039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "1056:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:6"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:6"
									},
									"scope": 1427,
									"src": "1021:158:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1428,
							"src": "448:733:6",
							"usedErrors": [
								589,
								594,
								599,
								608,
								613,
								618
							],
							"usedEvents": [
								1315,
								1324
							]
						}
					],
					"src": "124:1058:6"
				},
				"id": 6
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1381
						],
						"IERC20Metadata": [
							1453
						]
					},
					"id": 1454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1454,
							"sourceUnit": 1382,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1430,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1381,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1433,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1381,
										"src": "305:6:7"
									},
									"id": 1434,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1432,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1453,
							"linearizedBaseContracts": [
								1453,
								1381
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1453,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1453,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1453,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1454,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1315,
								1324
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1483
						]
					},
					"id": 1484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1456,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1483,
							"linearizedBaseContracts": [
								1483
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1461,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1463,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1483,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1470,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1472,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1483,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1478,
												"id": 1480,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1483,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1484,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			}
		}
	}
}