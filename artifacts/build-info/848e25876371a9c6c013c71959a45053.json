{
	"id": "848e25876371a9c6c013c71959a45053",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tweet_On_Base(latest)_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal virtual  {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual {\n        // Hook logic (if needed)\n    }\n\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/security/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n\n// File: Tweet_On_Base(latest).sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n\ncontract Tweet_On_Base is ERC20, ERC20Burnable, Ownable, ReentrancyGuard { \n    uint256 public constant INITIAL_SUPPLY = 10_000_000 * (10 ** 2);\n    uint256 public constant MAX_SUPPLY = 50_000_000_000 * (10 ** 2); \n    mapping(address => uint256) private _liquidityProvided;\n    mapping(address => uint256) private _liquidityProvidedTimestamp;\n\n    function decimals() public view virtual override returns (uint8) {\n        return 2;\n    }\n        \n    constructor() ERC20(\"Tweet On Base\", \"Tweets\") Ownable(msg.sender) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\n    uint256 burnAmount = amount / 100000; \n    uint256 sendAmount = amount - burnAmount; \n    require(amount == sendAmount + burnAmount, \"Burn value invalid\");\n\n   \n    if (sender != msg.sender) {\n        super._burn(sender, burnAmount);\n    }\n\n    super._transfer(sender, recipient, sendAmount);\n}\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n    internal\n    override\n{\n    super._beforeTokenTransfer(from, to, amount);\n}\n\n\n    function addLiquidity(uint256 amount) public {\n        _transfer(msg.sender, address(this), amount);\n        _liquidityProvided[msg.sender] += amount;\n        _liquidityProvidedTimestamp[msg.sender] = block.timestamp;\n    }\n    function undoAddLiquidity(uint256 amount) public {\n        _transfer(address(this), msg.sender, amount);\n        _liquidityProvided[msg.sender] -= amount;\n        _liquidityProvidedTimestamp[msg.sender] = block.timestamp;\n    }\n\n    event RewardClaimed(address indexed user, uint256 reward);\n\n    function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {\n        require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\");\n        require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\");\n\n        uint256 reward = calculateReward(msg.sender);\n        require(totalSupply() + reward <= MAX_SUPPLY, \"Reward exceeds max supply\");\n\n        // Mint the reward tokens only after the 30-day period\n        if (reward > 0) {\n            _mint(msg.sender, reward);\n            emit RewardClaimed(msg.sender, reward); // Emit the event\n        }\n\n        _transfer(address(this), msg.sender, amount);\n        _liquidityProvided[msg.sender] -= amount;\n\n        if (_liquidityProvided[msg.sender] == 0) {\n            _liquidityProvidedTimestamp[msg.sender] = 0;\n        } else {\n            _liquidityProvidedTimestamp[msg.sender] = block.timestamp;\n        }\n    }\n\n    function calculateReward(address user) public view returns (uint256) {\n        if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {\n            uint256 reward = (_liquidityProvided[user] * 5) / 100;\n            if (totalSupply() + reward <= MAX_SUPPLY) {\n                return reward;\n            }\n        }\n        return 0;\n    }\n    function ownerAddLiquidity(uint256 amount) public onlyOwner {\n        _liquidityProvided[owner()] += amount;\n        _liquidityProvidedTimestamp[owner()] = block.timestamp;\n        _mint(address(this), amount);\n    }\n\n    function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {\n        require(amount <= _liquidityProvided[owner()], \"Insufficient balance\");\n        _liquidityProvided[owner()] -= amount;\n        if (_liquidityProvided[owner()] == 0) {\n            _liquidityProvidedTimestamp[owner()] = 0;\n        }\n        _transfer(address(this), owner(), amount); \n    }\n\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Tweet_On_Base(latest)_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 278,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 284,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 286,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 288,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 290,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 278,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 284,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 286,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 288,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 290,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 827,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 976,
								"contract": "Tweet_On_Base(latest)_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Tweet_On_Base": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerAddLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ownerRemoveLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityAndClaimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "undoAddLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tweet_On_Base(latest)_flattened.sol\":28471:32071  contract Tweet_On_Base is ERC20, ERC20Burnable, Ownable, ReentrancyGuard { ... */\n  mstore(0x40, 0x80)\n    /* \"Tweet_On_Base(latest)_flattened.sol\":28924:29041  constructor() ERC20(\"Tweet On Base\", \"Tweets\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":28979:28989  msg.sender */\n  caller\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11666:11779  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x5477656574204f6e204261736500000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x5477656574730000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11740:11745  name_ */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11732:11737  _name */\n  0x03\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11732:11745  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11765:11772  symbol_ */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11755:11762  _symbol */\n  0x04\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11755:11772  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":11666:11779  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23452:23453  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23428:23454  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23428:23440  initialOwner */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23428:23454  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23424:23519  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23505:23506  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23477:23508  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23424:23519  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23528:23560  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23547:23559  initialOwner */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23528:23546  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23528:23560  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":23380:23567  constructor(address initialOwner) {... */\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":26992:26993  1 */\n  0x01\n    /* \"Tweet_On_Base(latest)_flattened.sol\":27097:27104  _status */\n  0x06\n    /* \"Tweet_On_Base(latest)_flattened.sol\":27097:27119  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":29001:29034  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_18\n    /* \"Tweet_On_Base(latest)_flattened.sol\":29007:29017  msg.sender */\n  caller\n    /* \"Tweet_On_Base(latest)_flattened.sol\":28592:28614  10_000_000 * (10 ** 2) */\n  0x3b9aca00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":29001:29006  _mint */\n  shl(0x20, tag_19)\n    /* \"Tweet_On_Base(latest)_flattened.sol\":29001:29034  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":28471:32071  contract Tweet_On_Base is ERC20, ERC20Burnable, Ownable, ReentrancyGuard { ... */\n  jump(tag_20)\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25067:25254  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25140:25156  address oldOwner */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25159:25165  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25140:25165  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25184:25192  newOwner */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25175:25181  _owner */\n  0x05\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25175:25192  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25238:25246  newOwner */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25207:25247  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25228:25236  oldOwner */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25207:25247  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25130:25254  {... */\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":25067:25254  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17499:17716  function _mint(address account, uint256 value) internal virtual  {... */\ntag_19:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17597:17598  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17599  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17585  account */\n  dup3\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17599  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17574:17665  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17651:17652  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17622:17654  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17574:17665  if (account == address(0)) {... */\ntag_23:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17709  _update(address(0), account, value) */\n  tag_25\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17690:17691  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17694:17701  account */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17703:17708  value */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17681  _update */\n  shl(0x20, tag_26)\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17709  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17499:17716  function _mint(address account, uint256 value) internal virtual  {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16049:17156  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16154:16155  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16156  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16142  from */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16156  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16290:16295  value */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16274:16286  _totalSupply */\n  0x02\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16274:16295  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16326:16345  uint256 fromBalance */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16357  _balances */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16363  _balances[from] */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16358:16362  from */\n  dup6\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16363  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16326:16363  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16395:16400  value */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16381:16392  fromBalance */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16381:16400  fromBalance < value */\n  lt\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16377:16492  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16452:16456  from */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16458:16469  fromBalance */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16471:16476  value */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16427:16477  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16377:16492  if (fromBalance < value) {... */\ntag_32:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16644:16649  value */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16630:16641  fromBalance */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16630:16649  fromBalance - value */\n  sub\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16621  _balances */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16627  _balances[from] */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16622:16626  from */\n  dup7\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16627  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16649  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16312:16674  {... */\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\ntag_31:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16702:16703  0 */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16704  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16690  to */\n  dup3\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16704  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16867:16872  value */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16851:16863  _totalSupply */\n  0x02\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16851:16872  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17079:17084  value */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17071  _balances */\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17075  _balances[to] */\n  dup1\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17072:17074  to */\n  dup5\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17075  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17084  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\ntag_36:\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17139:17141  to */\n  dup2\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17133:17137  from */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17143:17148  value */\n  dup4\n    /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Tweet_On_Base(latest)_flattened.sol\":16049:17156  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_39:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_40:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_41:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_42:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_69:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_71\n  tag_41\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":714:798   */\ntag_70:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_43:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_44:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_45:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_46:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_76\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1429:1468   */\n  tag_77\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_47:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_48:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_49:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_81\n    /* \"#utility.yul\":1818:1852   */\n  tag_82\n    /* \"#utility.yul\":1827:1851   */\n  tag_83\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_50:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_51:\n    /* \"#utility.yul\":2056:2095   */\n  tag_86\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2117:2208   */\n  tag_87\n    /* \"#utility.yul\":2166:2207   */\n  tag_88\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_46\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_52:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_53:\n    /* \"#utility.yul\":2377:2409   */\n  tag_91\n  tag_52\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2418:2483   */\n  tag_92\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_51\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_54:\n    /* \"#utility.yul\":2555:2675   */\ntag_94:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_97\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_53\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_55:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_100\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_43\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2906:2935   */\n  tag_101\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_44\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_102:\n    /* \"#utility.yul\":3133:3213   */\n  tag_103\n    /* \"#utility.yul\":3189:3211   */\n  tag_104\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_99:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_56:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_57:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_107\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_56\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_58:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_109\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_111\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_39\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_113\n  tag_40\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4038:4094   */\ntag_112:\n    /* \"#utility.yul\":4118:4156   */\n  tag_114\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_42\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4203:4270   */\n  tag_115\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_118:\n    /* \"#utility.yul\":5144:5211   */\n  tag_119\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_116)\n    /* \"#utility.yul\":4365:4983   */\ntag_117:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_120\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_43\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_121:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_125\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_57\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_124:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_116:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_59:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_60:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_128\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_59\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_61:\n    /* \"#utility.yul\":5555:5579   */\n  tag_130\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_60\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_132\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_61\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_62:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_30:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_135\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_47\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_136\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_47\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_138\n  tag_62\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6154:6190   */\ntag_137:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_63:\n    /* \"#utility.yul\":6290:6314   */\n  tag_140\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_47\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_34:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_142\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_61\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6608:6680   */\n  tag_143\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_63\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6690:6762   */\n  tag_144\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_38:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_146\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_63\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Tweet_On_Base(latest)_flattened.sol\":28471:32071  contract Tweet_On_Base is ERC20, ERC20Burnable, Ownable, ReentrancyGuard { ... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28471:32071  contract Tweet_On_Base is ERC20, ERC20Burnable, Ownable, ReentrancyGuard { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xafe8289a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xafe8289a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc8052107\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfc6d483a\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2254b79c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11844:11933  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14063:14249  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12914:13011  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31693:32067  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14809:15053  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28551:28614  uint256 public constant INITIAL_SUPPLY = 10_000_000 * (10 ** 2) */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28820:28910  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28620:28683  uint256 public constant MAX_SUPPLY = 50_000_000_000 * (10 ** 2) */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21628:21715  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29598:29821  function addLiquidity(uint256 amount) public {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13069:13185  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24448:24549  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22031:22189  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23793:23878  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12046:12139  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13380:13558  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31471:31687  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30123:31110  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31116:31466  function calculateReward(address user) public view returns (uint256) {... */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13616:13756  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24698:24913  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29826:30053  function undoAddLiquidity(uint256 amount) public {... */\n    tag_24:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11844:11933  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11889:11902  string memory */\n      0x60\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11921:11926  _name */\n      0x03\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11914:11926  return _name */\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_111\n      jump\t// in\n    tag_112:\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_114\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_113)\n    tag_114:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_115:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_115\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":11844:11933  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14063:14249  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14136:14140  bool */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14152:14165  address owner */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14168:14180  _msgSender() */\n      tag_117\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14168:14178  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14168:14180  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14152:14180  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14190:14221  _approve(owner, spender, value) */\n      tag_119\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14199:14204  owner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14206:14213  spender */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14215:14220  value */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14190:14198  _approve */\n      tag_120\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14190:14221  _approve(owner, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14238:14242  true */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14231:14242  return true */\n      swap2\n      pop\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14063:14249  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12914:13011  function totalSupply() public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12966:12973  uint256 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12992:13004  _totalSupply */\n      sload(0x02)\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12985:13004  return _totalSupply */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12914:13011  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31693:32067  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n    tag_45:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      tag_123\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23697  _checkOwner */\n      tag_124\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27558  _nonReentrantBefore() */\n      tag_126\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27556  _nonReentrantBefore */\n      tag_127\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27558  _nonReentrantBefore() */\n      jump\t// in\n    tag_126:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31797:31815  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31797:31824  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31816:31823  owner() */\n      tag_129\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31816:31821  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31816:31823  owner() */\n      jump\t// in\n    tag_129:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31797:31824  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31787:31793  amount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31787:31824  amount <= _liquidityProvided[owner()] */\n      gt\n      iszero\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31779:31849  require(amount <= _liquidityProvided[owner()], \"Insufficient balance\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31890:31896  amount */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31859:31877  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31859:31886  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31878:31885  owner() */\n      tag_133\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31878:31883  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31878:31885  owner() */\n      jump\t// in\n    tag_133:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31859:31886  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31859:31896  _liquidityProvided[owner()] -= amount */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31941:31942  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31910:31928  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31910:31937  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31929:31936  owner() */\n      tag_136\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31929:31934  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31929:31936  owner() */\n      jump\t// in\n    tag_136:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31910:31937  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31910:31942  _liquidityProvided[owner()] == 0 */\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31906:32009  if (_liquidityProvided[owner()] == 0) {... */\n      tag_137\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31997:31998  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31958:31985  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31958:31994  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31986:31993  owner() */\n      tag_138\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31986:31991  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31986:31993  owner() */\n      jump\t// in\n    tag_138:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31958:31994  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31958:31998  _liquidityProvidedTimestamp[owner()] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31906:32009  if (_liquidityProvided[owner()] == 0) {... */\n    tag_137:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32018:32059  _transfer(address(this), owner(), amount) */\n      tag_139\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32036:32040  this */\n      address\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32043:32050  owner() */\n      tag_140\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32043:32048  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32043:32050  owner() */\n      jump\t// in\n    tag_140:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32052:32058  amount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32018:32027  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":32018:32059  _transfer(address(this), owner(), amount) */\n      jump\t// in\n    tag_139:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27599  _nonReentrantAfter() */\n      tag_142\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27597  _nonReentrantAfter */\n      tag_143\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27599  _nonReentrantAfter() */\n      jump\t// in\n    tag_142:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31693:32067  function ownerRemoveLiquidity(uint256 amount) public onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14809:15053  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14896:14900  bool */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14912:14927  address spender */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14930:14942  _msgSender() */\n      tag_145\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14930:14940  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14930:14942  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14912:14942  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14952:14989  _spendAllowance(from, spender, value) */\n      tag_146\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14968:14972  from */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14974:14981  spender */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14983:14988  value */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14952:14967  _spendAllowance */\n      tag_147\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14952:14989  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14999:15025  _transfer(from, to, value) */\n      tag_148\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15009:15013  from */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15015:15017  to */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15019:15024  value */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14999:15008  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14999:15025  _transfer(from, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15042:15046  true */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15035:15046  return true */\n      swap2\n      pop\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":14809:15053  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28551:28614  uint256 public constant INITIAL_SUPPLY = 10_000_000 * (10 ** 2) */\n    tag_52:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28592:28614  10_000_000 * (10 ** 2) */\n      0x3b9aca00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28551:28614  uint256 public constant INITIAL_SUPPLY = 10_000_000 * (10 ** 2) */\n      dup2\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28820:28910  function decimals() public view virtual override returns (uint8) {... */\n    tag_55:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28878:28883  uint8 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28902:28903  2 */\n      0x02\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28895:28903  return 2 */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28820:28910  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28620:28683  uint256 public constant MAX_SUPPLY = 50_000_000_000 * (10 ** 2) */\n    tag_59:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28657:28683  50_000_000_000 * (10 ** 2) */\n      0x048c27395000\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28620:28683  uint256 public constant MAX_SUPPLY = 50_000_000_000 * (10 ** 2) */\n      dup2\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21628:21715  function burn(uint256 value) public virtual {... */\n    tag_63:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21682:21708  _burn(_msgSender(), value) */\n      tag_151\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21688:21700  _msgSender() */\n      tag_152\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21688:21698  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21688:21700  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21702:21707  value */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21682:21687  _burn */\n      tag_153\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21682:21708  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_151:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21628:21715  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29598:29821  function addLiquidity(uint256 amount) public {... */\n    tag_66:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29653:29697  _transfer(msg.sender, address(this), amount) */\n      tag_155\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29663:29673  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29683:29687  this */\n      address\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29690:29696  amount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29653:29662  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29653:29697  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_155:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29741:29747  amount */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29707:29725  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29707:29737  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29726:29736  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29707:29737  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29707:29747  _liquidityProvided[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29799:29814  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29757:29784  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29757:29796  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29785:29795  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29757:29796  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29757:29814  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29598:29821  function addLiquidity(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13069:13185  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13134:13141  uint256 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13160:13169  _balances */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13160:13178  _balances[account] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13170:13177  account */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13160:13178  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13153:13178  return _balances[account] */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13069:13185  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24448:24549  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      tag_160\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23697  _checkOwner */\n      tag_124\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24512:24542  _transferOwnership(address(0)) */\n      tag_162\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24539:24540  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24512:24530  _transferOwnership */\n      tag_163\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24512:24542  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_162:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24448:24549  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22031:22189  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_76:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22106:22151  _spendAllowance(account, _msgSender(), value) */\n      tag_165\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22122:22129  account */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22131:22143  _msgSender() */\n      tag_166\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22131:22141  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22131:22143  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22145:22150  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22106:22121  _spendAllowance */\n      tag_147\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22106:22151  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_165:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22161:22182  _burn(account, value) */\n      tag_167\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22167:22174  account */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22176:22181  value */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22161:22166  _burn */\n      tag_153\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22161:22182  _burn(account, value) */\n      jump\t// in\n    tag_167:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":22031:22189  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23793:23878  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23839:23846  address */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23865:23871  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23858:23871  return _owner */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23793:23878  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12046:12139  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12093:12106  string memory */\n      0x60\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12125:12132  _symbol */\n      0x04\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12118:12132  return _symbol */\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_111\n      jump\t// in\n    tag_170:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_111\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":12046:12139  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13380:13558  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13449:13453  bool */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13465:13478  address owner */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13481:13493  _msgSender() */\n      tag_176\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13481:13491  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13481:13493  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13465:13493  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13503:13530  _transfer(owner, to, value) */\n      tag_177\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13513:13518  owner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13520:13522  to */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13524:13529  value */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13503:13512  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13503:13530  _transfer(owner, to, value) */\n      jump\t// in\n    tag_177:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13547:13551  true */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13540:13551  return true */\n      swap2\n      pop\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13380:13558  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31471:31687  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n    tag_90:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      tag_179\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23697  _checkOwner */\n      tag_124\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31572:31578  amount */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31541:31559  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31541:31568  _liquidityProvided[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31560:31567  owner() */\n      tag_181\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31560:31565  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31560:31567  owner() */\n      jump\t// in\n    tag_181:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31541:31568  _liquidityProvided[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31541:31578  _liquidityProvided[owner()] += amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31627:31642  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31588:31615  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31588:31624  _liquidityProvidedTimestamp[owner()] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31616:31623  owner() */\n      tag_183\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31616:31621  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31616:31623  owner() */\n      jump\t// in\n    tag_183:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31588:31624  _liquidityProvidedTimestamp[owner()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31588:31642  _liquidityProvidedTimestamp[owner()] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31652:31680  _mint(address(this), amount) */\n      tag_184\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31666:31670  this */\n      address\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31673:31679  amount */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31652:31657  _mint */\n      tag_185\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31652:31680  _mint(address(this), amount) */\n      jump\t// in\n    tag_184:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31471:31687  function ownerAddLiquidity(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30123:31110  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n    tag_93:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27558  _nonReentrantBefore() */\n      tag_187\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27556  _nonReentrantBefore */\n      tag_127\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27537:27558  _nonReentrantBefore() */\n      jump\t// in\n    tag_187:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30227:30245  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30227:30257  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30246:30256  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30227:30257  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30217:30223  amount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30217:30257  amount <= _liquidityProvided[msg.sender] */\n      gt\n      iszero\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30209:30282  require(amount <= _liquidityProvided[msg.sender], \"Insufficient balance\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_132\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30361:30368  30 days */\n      0x278d00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30319:30346  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30319:30358  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30347:30357  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30319:30358  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30319:30368  _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      tag_191\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_191:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30300:30315  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30300:30368  block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days */\n      lt\n      iszero\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30292:30443  require(block.timestamp >= _liquidityProvidedTimestamp[msg.sender] + 30 days, \"Liquidity must be provided for at least 30 days to qualify for rewards\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30454:30468  uint256 reward */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30471:30498  calculateReward(msg.sender) */\n      tag_195\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30487:30497  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30471:30486  calculateReward */\n      tag_96\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30471:30498  calculateReward(msg.sender) */\n      jump\t// in\n    tag_195:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30454:30498  uint256 reward = calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28657:28683  50_000_000_000 * (10 ** 2) */\n      0x048c27395000\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30532:30538  reward */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30516:30529  totalSupply() */\n      tag_196\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30516:30527  totalSupply */\n      tag_39\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30516:30529  totalSupply() */\n      jump\t// in\n    tag_196:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30516:30538  totalSupply() + reward */\n      tag_197\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_197:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30516:30552  totalSupply() + reward <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30508:30582  require(totalSupply() + reward <= MAX_SUPPLY, \"Reward exceeds max supply\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30669:30670  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30660:30666  reward */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30660:30670  reward > 0 */\n      gt\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30656:30792  if (reward > 0) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30686:30711  _mint(msg.sender, reward) */\n      tag_202\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30692:30702  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30704:30710  reward */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30686:30691  _mint */\n      tag_185\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30686:30711  _mint(msg.sender, reward) */\n      jump\t// in\n    tag_202:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30744:30754  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30730:30763  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30756:30762  reward */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30730:30763  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30656:30792  if (reward > 0) {... */\n    tag_201:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30802:30846  _transfer(address(this), msg.sender, amount) */\n      tag_204\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30820:30824  this */\n      address\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30827:30837  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30839:30845  amount */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30802:30811  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30802:30846  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_204:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30890:30896  amount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30856:30874  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30856:30886  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30875:30885  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30856:30886  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30856:30896  _liquidityProvided[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30945:30946  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30911:30929  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30911:30941  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30930:30940  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30911:30941  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30911:30946  _liquidityProvided[msg.sender] == 0 */\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30907:31104  if (_liquidityProvided[msg.sender] == 0) {... */\n      tag_206\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31004:31005  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30962:30989  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30962:31001  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30990:31000  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30962:31001  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30962:31005  _liquidityProvidedTimestamp[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30907:31104  if (_liquidityProvided[msg.sender] == 0) {... */\n      jump(tag_207)\n    tag_206:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31078:31093  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31036:31063  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31036:31075  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31064:31074  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31036:31075  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31036:31093  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30907:31104  if (_liquidityProvided[msg.sender] == 0) {... */\n    tag_207:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30199:31110  {... */\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27599  _nonReentrantAfter() */\n      tag_208\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27597  _nonReentrantAfter */\n      tag_143\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27579:27599  _nonReentrantAfter() */\n      jump\t// in\n    tag_208:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30123:31110  function removeLiquidityAndClaimRewards(uint256 amount) public nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31116:31466  function calculateReward(address user) public view returns (uint256) {... */\n    tag_96:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31176:31183  uint256 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31254:31261  30 days */\n      0x278d00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31218:31245  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31218:31251  _liquidityProvidedTimestamp[user] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31246:31250  user */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31218:31251  _liquidityProvidedTimestamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31218:31261  _liquidityProvidedTimestamp[user] + 30 days */\n      tag_210\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_210:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31199:31214  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31199:31261  block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days */\n      lt\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31195:31442  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n      tag_211\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31277:31291  uint256 reward */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31327:31330  100 */\n      0x64\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31322:31323  5 */\n      0x05\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31295:31313  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31295:31319  _liquidityProvided[user] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31314:31318  user */\n      dup7\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31295:31319  _liquidityProvided[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31295:31323  _liquidityProvided[user] * 5 */\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31294:31330  (_liquidityProvided[user] * 5) / 100 */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31277:31330  uint256 reward = (_liquidityProvided[user] * 5) / 100 */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28657:28683  50_000_000_000 * (10 ** 2) */\n      0x048c27395000\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31364:31370  reward */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31348:31361  totalSupply() */\n      tag_216\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31348:31359  totalSupply */\n      tag_39\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31348:31361  totalSupply() */\n      jump\t// in\n    tag_216:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31348:31370  totalSupply() + reward */\n      tag_217\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31348:31384  totalSupply() + reward <= MAX_SUPPLY */\n      gt\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31344:31432  if (totalSupply() + reward <= MAX_SUPPLY) {... */\n      tag_218\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31411:31417  reward */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31404:31417  return reward */\n      swap2\n      pop\n      pop\n      jump(tag_209)\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31344:31432  if (totalSupply() + reward <= MAX_SUPPLY) {... */\n    tag_218:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31263:31442  {... */\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31195:31442  if (block.timestamp >= _liquidityProvidedTimestamp[user] + 30 days) {... */\n    tag_211:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31458:31459  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31451:31459  return 0 */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":31116:31466  function calculateReward(address user) public view returns (uint256) {... */\n    tag_209:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13616:13756  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_101:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13696:13703  uint256 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13722:13733  _allowances */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13722:13740  _allowances[owner] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13734:13739  owner */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13722:13740  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13722:13749  _allowances[owner][spender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13741:13748  spender */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13722:13749  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13715:13749  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":13616:13756  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24698:24913  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      tag_221\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23697  _checkOwner */\n      tag_124\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23686:23699  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24802:24803  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24782:24804  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24782:24790  newOwner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24782:24804  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24778:24869  if (newOwner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24855:24856  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24827:24858  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24778:24869  if (newOwner == address(0)) {... */\n    tag_223:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24878:24906  _transferOwnership(newOwner) */\n      tag_225\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24897:24905  newOwner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24878:24896  _transferOwnership */\n      tag_163\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24878:24906  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_225:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24698:24913  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29826:30053  function undoAddLiquidity(uint256 amount) public {... */\n    tag_108:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29885:29929  _transfer(address(this), msg.sender, amount) */\n      tag_227\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29903:29907  this */\n      address\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29910:29920  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29922:29928  amount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29885:29894  _transfer */\n      tag_141\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29885:29929  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_227:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29973:29979  amount */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29939:29957  _liquidityProvided */\n      0x07\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29939:29969  _liquidityProvided[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29958:29968  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29939:29969  _liquidityProvided[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29939:29979  _liquidityProvided[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_228:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30031:30046  block.timestamp */\n      timestamp\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29989:30016  _liquidityProvidedTimestamp */\n      0x08\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29989:30028  _liquidityProvidedTimestamp[msg.sender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":30017:30027  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29989:30028  _liquidityProvidedTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29989:30046  _liquidityProvidedTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29826:30053  function undoAddLiquidity(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":4164:4260  function _msgSender() internal view virtual returns (address) {... */\n    tag_118:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":4217:4224  address */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":4243:4253  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":4236:4253  return msg.sender */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":4164:4260  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18912:19040  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_120:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18996:19033  _approve(owner, spender, value, true) */\n      tag_231\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19005:19010  owner */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19012:19019  spender */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19021:19026  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19028:19032  true */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18996:19004  _approve */\n      tag_232\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18996:19033  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_231:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18912:19040  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23951:24113  function _checkOwner() internal view virtual {... */\n    tag_124:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24021:24033  _msgSender() */\n      tag_234\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24021:24031  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24021:24033  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24010:24033  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24010:24017  owner() */\n      tag_235\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24010:24015  owner */\n      tag_78\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24010:24017  owner() */\n      jump\t// in\n    tag_235:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24010:24033  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24006:24107  if (owner() != _msgSender()) {... */\n      tag_236\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24083:24095  _msgSender() */\n      tag_237\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24083:24093  _msgSender */\n      tag_118\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24083:24095  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24056:24096  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":24006:24107  if (owner() != _msgSender()) {... */\n    tag_236:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":23951:24113  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27612:27899  function _nonReentrantBefore() private {... */\n    tag_127:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27035:27036  2 */\n      0x02\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27744:27751  _status */\n      sload(0x06)\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27744:27763  _status != _ENTERED */\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27736:27799  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27035:27036  2 */\n      0x02\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27874:27881  _status */\n      0x06\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27874:27892  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27612:27899  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29046:29434  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n    tag_141:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29140:29158  uint256 burnAmount */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29170:29176  100000 */\n      0x0186a0\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29161:29167  amount */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29161:29176  amount / 100000 */\n      tag_244\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_244:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29140:29176  uint256 burnAmount = amount / 100000 */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29183:29201  uint256 sendAmount */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29213:29223  burnAmount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29204:29210  amount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29204:29223  amount - burnAmount */\n      tag_245\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_245:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29183:29223  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29261:29271  burnAmount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29248:29258  sendAmount */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29248:29271  sendAmount + burnAmount */\n      tag_246\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_246:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29238:29244  amount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29238:29271  amount == sendAmount + burnAmount */\n      eq\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29230:29294  require(amount == sendAmount + burnAmount, \"Burn value invalid\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29319:29329  msg.sender */\n      caller\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29309:29329  sender != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29309:29315  sender */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29309:29329  sender != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29305:29379  if (sender != msg.sender) {... */\n      tag_250\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29341:29372  super._burn(sender, burnAmount) */\n      tag_251\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29353:29359  sender */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29361:29371  burnAmount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29341:29352  super._burn */\n      tag_153\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29341:29372  super._burn(sender, burnAmount) */\n      jump\t// in\n    tag_251:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29305:29379  if (sender != msg.sender) {... */\n    tag_250:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29385:29431  super._transfer(sender, recipient, sendAmount) */\n      tag_252\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29401:29407  sender */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29409:29418  recipient */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29420:29430  sendAmount */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29385:29400  super._transfer */\n      tag_253\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29385:29431  super._transfer(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_252:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29134:29434  {... */\n      pop\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":29046:29434  function _transfer(address sender, address recipient, uint256 amount) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27905:28114  function _nonReentrantAfter() private {... */\n    tag_143:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":26992:26993  1 */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28085:28092  _status */\n      0x06\n        /* \"Tweet_On_Base(latest)_flattened.sol\":28085:28107  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":27905:28114  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20586:21063  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_147:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20685:20709  uint256 currentAllowance */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20712:20737  allowance(owner, spender) */\n      tag_256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20722:20727  owner */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20729:20736  spender */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20712:20721  allowance */\n      tag_101\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20712:20737  allowance(owner, spender) */\n      jump\t// in\n    tag_256:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20685:20737  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20771:20788  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20751:20767  currentAllowance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20751:20788  currentAllowance != type(uint256).max */\n      eq\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20747:21057  if (currentAllowance != type(uint256).max) {... */\n      tag_257\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20827:20832  value */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20808:20824  currentAllowance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20808:20832  currentAllowance < value */\n      lt\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20804:20934  if (currentAllowance < value) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20886:20893  spender */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20895:20911  currentAllowance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20913:20918  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20859:20919  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20804:20934  if (currentAllowance < value) {... */\n    tag_258:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20975:21032  _approve(owner, spender, currentAllowance - value, false) */\n      tag_261\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20984:20989  owner */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20991:20998  spender */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21019:21024  value */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21000:21016  currentAllowance */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21000:21024  currentAllowance - value */\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":21026:21031  false */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20975:20983  _approve */\n      tag_232\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20975:21032  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_261:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20747:21057  if (currentAllowance != type(uint256).max) {... */\n    tag_257:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20675:21063  {... */\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20586:21063  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18034:18240  function _burn(address account, uint256 value) internal {... */\n    tag_153:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18123:18124  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18104:18125  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18104:18111  account */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18104:18125  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18100:18189  if (account == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18175:18176  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18148:18178  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18100:18189  if (account == address(0)) {... */\n    tag_263:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18198:18233  _update(account, address(0), value) */\n      tag_265\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18206:18213  account */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18223:18224  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18227:18232  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18198:18205  _update */\n      tag_266\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18198:18233  _update(account, address(0), value) */\n      jump\t// in\n    tag_265:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":18034:18240  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25067:25254  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_163:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25140:25156  address oldOwner */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25159:25165  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25140:25165  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25184:25192  newOwner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25175:25181  _owner */\n      0x05\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25175:25192  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25238:25246  newOwner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25207:25247  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25228:25236  oldOwner */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25207:25247  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25130:25254  {... */\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":25067:25254  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17499:17716  function _mint(address account, uint256 value) internal virtual  {... */\n    tag_185:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17597:17598  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17599  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17585  account */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17578:17599  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17574:17665  if (account == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17651:17652  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17622:17654  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17574:17665  if (account == address(0)) {... */\n    tag_269:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17709  _update(address(0), account, value) */\n      tag_271\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17690:17691  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17694:17701  account */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17703:17708  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17681  _update */\n      tag_266\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17674:17709  _update(address(0), account, value) */\n      jump\t// in\n    tag_271:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17499:17716  function _mint(address account, uint256 value) internal virtual  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19872:20304  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_232:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20001:20002  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19984:20003  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19984:19989  owner */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19984:20003  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19980:20069  if (owner == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20055:20056  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20026:20058  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19980:20069  if (owner == address(0)) {... */\n    tag_273:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20101:20102  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20082:20103  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20082:20089  spender */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20082:20103  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20078:20168  if (spender == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20154:20155  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20126:20157  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20078:20168  if (spender == address(0)) {... */\n    tag_275:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20207:20212  value */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20188  _allowances */\n      0x01\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20195  _allowances[owner] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20189:20194  owner */\n      dup7\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20195  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20204  _allowances[owner][spender] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20196:20203  spender */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20204  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20177:20212  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20226:20235  emitEvent */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20222:20298  if (emitEvent) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20272:20279  spender */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20256:20287  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20265:20270  owner */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20256:20287  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20281:20286  value */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20256:20287  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":20222:20298  if (emitEvent) {... */\n    tag_277:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":19872:20304  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15426:15734  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_253:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15533:15534  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15517:15535  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15517:15521  from */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15517:15535  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15513:15599  if (from == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15585:15586  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15558:15588  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15513:15599  if (from == address(0)) {... */\n    tag_280:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15626:15627  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15612:15628  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15612:15614  to */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15612:15628  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15608:15694  if (to == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15680:15681  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15651:15683  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15608:15694  if (to == address(0)) {... */\n    tag_282:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15703:15727  _update(from, to, value) */\n      tag_284\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15711:15715  from */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15717:15719  to */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15721:15726  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15703:15710  _update */\n      tag_266\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15703:15727  _update(from, to, value) */\n      jump\t// in\n    tag_284:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":15426:15734  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16049:17156  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_266:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16154:16155  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16156  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16142  from */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16138:16156  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16290:16295  value */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16274:16286  _totalSupply */\n      0x02\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16274:16295  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_287\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_287:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\n      jump(tag_288)\n    tag_286:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16326:16345  uint256 fromBalance */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16357  _balances */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16363  _balances[from] */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16358:16362  from */\n      dup6\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16348:16363  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16326:16363  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16395:16400  value */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16381:16392  fromBalance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16381:16400  fromBalance < value */\n      lt\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16377:16492  if (fromBalance < value) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16452:16456  from */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16458:16469  fromBalance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16471:16476  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16427:16477  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16377:16492  if (fromBalance < value) {... */\n    tag_289:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16644:16649  value */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16630:16641  fromBalance */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16630:16649  fromBalance - value */\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16621  _balances */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16627  _balances[from] */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16622:16626  from */\n      dup7\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16627  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16612:16649  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16312:16674  {... */\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16134:16674  if (from == address(0)) {... */\n    tag_288:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16702:16703  0 */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16704  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16690  to */\n      dup3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16688:16704  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16867:16872  value */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16851:16863  _totalSupply */\n      0x02\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16851:16872  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\n      jump(tag_292)\n    tag_291:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17079:17084  value */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17071  _balances */\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17075  _balances[to] */\n      dup1\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17072:17074  to */\n      dup5\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17075  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17062:17084  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16684:17109  if (to == address(0)) {... */\n    tag_292:\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17139:17141  to */\n      dup2\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17133:17137  from */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17143:17148  value */\n      dup4\n        /* \"Tweet_On_Base(latest)_flattened.sol\":17124:17149  Transfer(from, to, value) */\n      mload(0x40)\n      tag_293\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Tweet_On_Base(latest)_flattened.sol\":16049:17156  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_294:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_295:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_296:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_297:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_298:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_334\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_294\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":711:782   */\n      tag_335\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_295\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_336\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_296\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":881:910   */\n      tag_337\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_297\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_31:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_339\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_298\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_300:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_302:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_303:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_345\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_302\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_304:\n        /* \"#utility.yul\":1876:1900   */\n      tag_347\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_303\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_348:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_305:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_350\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_304\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_306:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_307:\n        /* \"#utility.yul\":2232:2256   */\n      tag_353\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_306\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_354:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_308:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_356\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_307\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_34:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_359\n      tag_300\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2525:2644   */\n    tag_358:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_360\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_305\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_361\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_308\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_309:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_310:\n        /* \"#utility.yul\":3089:3110   */\n      tag_364\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_309\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_37:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_366\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_310\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_311:\n        /* \"#utility.yul\":3426:3450   */\n      tag_368\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_306\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_41:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_370\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_311\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_44:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_373\n      tag_300\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3767:3886   */\n    tag_372:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_374\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_308\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_48:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_377\n      tag_300\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4136:4255   */\n    tag_376:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_378\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_379\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_305\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_380\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_308\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_312:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_313:\n        /* \"#utility.yul\":4826:4848   */\n      tag_383\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_312\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_57:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_385\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_313\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_69:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_388\n      tag_300\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5157:5276   */\n    tag_387:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_389\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_305\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_314:\n        /* \"#utility.yul\":5503:5527   */\n      tag_391\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_303\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_80:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_393\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_314\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_100:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_396\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5861:5980   */\n    tag_395:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_397\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_305\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_398\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_305\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_315:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_111:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_401:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_403\n      tag_315\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6664:6748   */\n    tag_402:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6930   */\n    tag_316:\n        /* \"#utility.yul\":6900:6922   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6923   */\n      mstore\n        /* \"#utility.yul\":6760:6930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6936:7302   */\n    tag_317:\n        /* \"#utility.yul\":7078:7081   */\n      0x00\n        /* \"#utility.yul\":7099:7166   */\n      tag_406\n        /* \"#utility.yul\":7163:7165   */\n      0x14\n        /* \"#utility.yul\":7158:7161   */\n      dup4\n        /* \"#utility.yul\":7099:7166   */\n      tag_295\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7092:7166   */\n      swap2\n      pop\n        /* \"#utility.yul\":7175:7268   */\n      tag_407\n        /* \"#utility.yul\":7264:7267   */\n      dup3\n        /* \"#utility.yul\":7175:7268   */\n      tag_316\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7288:7291   */\n      dup3\n        /* \"#utility.yul\":7284:7296   */\n      add\n        /* \"#utility.yul\":7277:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":6936:7302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7308:7727   */\n    tag_132:\n        /* \"#utility.yul\":7474:7478   */\n      0x00\n        /* \"#utility.yul\":7512:7514   */\n      0x20\n        /* \"#utility.yul\":7501:7510   */\n      dup3\n        /* \"#utility.yul\":7497:7515   */\n      add\n        /* \"#utility.yul\":7489:7515   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7570   */\n      dup2\n        /* \"#utility.yul\":7555:7559   */\n      dup2\n        /* \"#utility.yul\":7551:7571   */\n      sub\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7536:7545   */\n      dup4\n        /* \"#utility.yul\":7532:7549   */\n      add\n        /* \"#utility.yul\":7525:7572   */\n      mstore\n        /* \"#utility.yul\":7589:7720   */\n      tag_409\n        /* \"#utility.yul\":7715:7719   */\n      dup2\n        /* \"#utility.yul\":7589:7720   */\n      tag_317\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7581:7720   */\n      swap1\n      pop\n        /* \"#utility.yul\":7308:7727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:7913   */\n    tag_318:\n        /* \"#utility.yul\":7781:7858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7778:7779   */\n      0x00\n        /* \"#utility.yul\":7771:7859   */\n      mstore\n        /* \"#utility.yul\":7878:7882   */\n      0x11\n        /* \"#utility.yul\":7875:7876   */\n      0x04\n        /* \"#utility.yul\":7868:7883   */\n      mstore\n        /* \"#utility.yul\":7902:7906   */\n      0x24\n        /* \"#utility.yul\":7899:7900   */\n      0x00\n        /* \"#utility.yul\":7892:7907   */\n      revert\n        /* \"#utility.yul\":7919:8113   */\n    tag_135:\n        /* \"#utility.yul\":7959:7963   */\n      0x00\n        /* \"#utility.yul\":7979:7999   */\n      tag_412\n        /* \"#utility.yul\":7997:7998   */\n      dup3\n        /* \"#utility.yul\":7979:7999   */\n      tag_306\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7974:7999   */\n      swap2\n      pop\n        /* \"#utility.yul\":8013:8033   */\n      tag_413\n        /* \"#utility.yul\":8031:8032   */\n      dup4\n        /* \"#utility.yul\":8013:8033   */\n      tag_306\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8008:8033   */\n      swap3\n      pop\n        /* \"#utility.yul\":8057:8058   */\n      dup3\n        /* \"#utility.yul\":8054:8055   */\n      dup3\n        /* \"#utility.yul\":8050:8059   */\n      sub\n        /* \"#utility.yul\":8042:8059   */\n      swap1\n      pop\n        /* \"#utility.yul\":8081:8082   */\n      dup2\n        /* \"#utility.yul\":8075:8079   */\n      dup2\n        /* \"#utility.yul\":8072:8083   */\n      gt\n        /* \"#utility.yul\":8069:8106   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":8086:8104   */\n      tag_415\n      tag_318\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8069:8106   */\n    tag_414:\n        /* \"#utility.yul\":7919:8113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8310   */\n    tag_157:\n        /* \"#utility.yul\":8159:8162   */\n      0x00\n        /* \"#utility.yul\":8178:8198   */\n      tag_417\n        /* \"#utility.yul\":8196:8197   */\n      dup3\n        /* \"#utility.yul\":8178:8198   */\n      tag_306\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8173:8198   */\n      swap2\n      pop\n        /* \"#utility.yul\":8212:8232   */\n      tag_418\n        /* \"#utility.yul\":8230:8231   */\n      dup4\n        /* \"#utility.yul\":8212:8232   */\n      tag_306\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8207:8232   */\n      swap3\n      pop\n        /* \"#utility.yul\":8255:8256   */\n      dup3\n        /* \"#utility.yul\":8252:8253   */\n      dup3\n        /* \"#utility.yul\":8248:8257   */\n      add\n        /* \"#utility.yul\":8241:8257   */\n      swap1\n      pop\n        /* \"#utility.yul\":8276:8279   */\n      dup1\n        /* \"#utility.yul\":8273:8274   */\n      dup3\n        /* \"#utility.yul\":8270:8280   */\n      gt\n        /* \"#utility.yul\":8267:8303   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8283:8301   */\n      tag_420\n      tag_318\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8267:8303   */\n    tag_419:\n        /* \"#utility.yul\":8119:8310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8316:8610   */\n    tag_319:\n        /* \"#utility.yul\":8456:8490   */\n      0x4c6971756964697479206d7573742062652070726f766964656420666f722061\n        /* \"#utility.yul\":8452:8453   */\n      0x00\n        /* \"#utility.yul\":8444:8450   */\n      dup3\n        /* \"#utility.yul\":8440:8454   */\n      add\n        /* \"#utility.yul\":8433:8491   */\n      mstore\n        /* \"#utility.yul\":8525:8559   */\n      0x74206c65617374203330206461797320746f207175616c69667920666f722072\n        /* \"#utility.yul\":8520:8522   */\n      0x20\n        /* \"#utility.yul\":8512:8518   */\n      dup3\n        /* \"#utility.yul\":8508:8523   */\n      add\n        /* \"#utility.yul\":8501:8560   */\n      mstore\n        /* \"#utility.yul\":8594:8602   */\n      0x6577617264730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8589:8591   */\n      0x40\n        /* \"#utility.yul\":8581:8587   */\n      dup3\n        /* \"#utility.yul\":8577:8592   */\n      add\n        /* \"#utility.yul\":8570:8603   */\n      mstore\n        /* \"#utility.yul\":8316:8610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8982   */\n    tag_320:\n        /* \"#utility.yul\":8758:8761   */\n      0x00\n        /* \"#utility.yul\":8779:8846   */\n      tag_423\n        /* \"#utility.yul\":8843:8845   */\n      0x46\n        /* \"#utility.yul\":8838:8841   */\n      dup4\n        /* \"#utility.yul\":8779:8846   */\n      tag_295\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8772:8846   */\n      swap2\n      pop\n        /* \"#utility.yul\":8855:8948   */\n      tag_424\n        /* \"#utility.yul\":8944:8947   */\n      dup3\n        /* \"#utility.yul\":8855:8948   */\n      tag_319\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8973:8975   */\n      0x60\n        /* \"#utility.yul\":8968:8971   */\n      dup3\n        /* \"#utility.yul\":8964:8976   */\n      add\n        /* \"#utility.yul\":8957:8976   */\n      swap1\n      pop\n        /* \"#utility.yul\":8616:8982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8988:9407   */\n    tag_194:\n        /* \"#utility.yul\":9154:9158   */\n      0x00\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"#utility.yul\":9181:9190   */\n      dup3\n        /* \"#utility.yul\":9177:9195   */\n      add\n        /* \"#utility.yul\":9169:9195   */\n      swap1\n      pop\n        /* \"#utility.yul\":9241:9250   */\n      dup2\n        /* \"#utility.yul\":9235:9239   */\n      dup2\n        /* \"#utility.yul\":9231:9251   */\n      sub\n        /* \"#utility.yul\":9227:9228   */\n      0x00\n        /* \"#utility.yul\":9216:9225   */\n      dup4\n        /* \"#utility.yul\":9212:9229   */\n      add\n        /* \"#utility.yul\":9205:9252   */\n      mstore\n        /* \"#utility.yul\":9269:9400   */\n      tag_426\n        /* \"#utility.yul\":9395:9399   */\n      dup2\n        /* \"#utility.yul\":9269:9400   */\n      tag_320\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9261:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":8988:9407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9588   */\n    tag_321:\n        /* \"#utility.yul\":9553:9580   */\n      0x5265776172642065786365656473206d617820737570706c7900000000000000\n        /* \"#utility.yul\":9549:9550   */\n      0x00\n        /* \"#utility.yul\":9541:9547   */\n      dup3\n        /* \"#utility.yul\":9537:9551   */\n      add\n        /* \"#utility.yul\":9530:9581   */\n      mstore\n        /* \"#utility.yul\":9413:9588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9594:9960   */\n    tag_322:\n        /* \"#utility.yul\":9736:9739   */\n      0x00\n        /* \"#utility.yul\":9757:9824   */\n      tag_429\n        /* \"#utility.yul\":9821:9823   */\n      0x19\n        /* \"#utility.yul\":9816:9819   */\n      dup4\n        /* \"#utility.yul\":9757:9824   */\n      tag_295\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9750:9824   */\n      swap2\n      pop\n        /* \"#utility.yul\":9833:9926   */\n      tag_430\n        /* \"#utility.yul\":9922:9925   */\n      dup3\n        /* \"#utility.yul\":9833:9926   */\n      tag_321\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9951:9953   */\n      0x20\n        /* \"#utility.yul\":9946:9949   */\n      dup3\n        /* \"#utility.yul\":9942:9954   */\n      add\n        /* \"#utility.yul\":9935:9954   */\n      swap1\n      pop\n        /* \"#utility.yul\":9594:9960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9966:10385   */\n    tag_200:\n        /* \"#utility.yul\":10132:10136   */\n      0x00\n        /* \"#utility.yul\":10170:10172   */\n      0x20\n        /* \"#utility.yul\":10159:10168   */\n      dup3\n        /* \"#utility.yul\":10155:10173   */\n      add\n        /* \"#utility.yul\":10147:10173   */\n      swap1\n      pop\n        /* \"#utility.yul\":10219:10228   */\n      dup2\n        /* \"#utility.yul\":10213:10217   */\n      dup2\n        /* \"#utility.yul\":10209:10229   */\n      sub\n        /* \"#utility.yul\":10205:10206   */\n      0x00\n        /* \"#utility.yul\":10194:10203   */\n      dup4\n        /* \"#utility.yul\":10190:10207   */\n      add\n        /* \"#utility.yul\":10183:10230   */\n      mstore\n        /* \"#utility.yul\":10247:10378   */\n      tag_432\n        /* \"#utility.yul\":10373:10377   */\n      dup2\n        /* \"#utility.yul\":10247:10378   */\n      tag_322\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10239:10378   */\n      swap1\n      pop\n        /* \"#utility.yul\":9966:10385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10391:10801   */\n    tag_213:\n        /* \"#utility.yul\":10431:10438   */\n      0x00\n        /* \"#utility.yul\":10454:10474   */\n      tag_434\n        /* \"#utility.yul\":10472:10473   */\n      dup3\n        /* \"#utility.yul\":10454:10474   */\n      tag_306\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10449:10474   */\n      swap2\n      pop\n        /* \"#utility.yul\":10488:10508   */\n      tag_435\n        /* \"#utility.yul\":10506:10507   */\n      dup4\n        /* \"#utility.yul\":10488:10508   */\n      tag_306\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10483:10508   */\n      swap3\n      pop\n        /* \"#utility.yul\":10543:10544   */\n      dup3\n        /* \"#utility.yul\":10540:10541   */\n      dup3\n        /* \"#utility.yul\":10536:10545   */\n      mul\n        /* \"#utility.yul\":10565:10595   */\n      tag_436\n        /* \"#utility.yul\":10583:10594   */\n      dup2\n        /* \"#utility.yul\":10565:10595   */\n      tag_306\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10554:10595   */\n      swap2\n      pop\n        /* \"#utility.yul\":10744:10745   */\n      dup3\n        /* \"#utility.yul\":10735:10742   */\n      dup3\n        /* \"#utility.yul\":10731:10746   */\n      div\n        /* \"#utility.yul\":10728:10729   */\n      dup5\n        /* \"#utility.yul\":10725:10747   */\n      eq\n        /* \"#utility.yul\":10705:10706   */\n      dup4\n        /* \"#utility.yul\":10698:10707   */\n      iszero\n        /* \"#utility.yul\":10678:10761   */\n      or\n        /* \"#utility.yul\":10655:10794   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10774:10792   */\n      tag_438\n      tag_318\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10655:10794   */\n    tag_437:\n        /* \"#utility.yul\":10439:10801   */\n      pop\n        /* \"#utility.yul\":10391:10801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10807:10987   */\n    tag_323:\n        /* \"#utility.yul\":10855:10932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10852:10853   */\n      0x00\n        /* \"#utility.yul\":10845:10933   */\n      mstore\n        /* \"#utility.yul\":10952:10956   */\n      0x12\n        /* \"#utility.yul\":10949:10950   */\n      0x04\n        /* \"#utility.yul\":10942:10957   */\n      mstore\n        /* \"#utility.yul\":10976:10980   */\n      0x24\n        /* \"#utility.yul\":10973:10974   */\n      0x00\n        /* \"#utility.yul\":10966:10981   */\n      revert\n        /* \"#utility.yul\":10993:11178   */\n    tag_215:\n        /* \"#utility.yul\":11033:11034   */\n      0x00\n        /* \"#utility.yul\":11050:11070   */\n      tag_441\n        /* \"#utility.yul\":11068:11069   */\n      dup3\n        /* \"#utility.yul\":11050:11070   */\n      tag_306\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11045:11070   */\n      swap2\n      pop\n        /* \"#utility.yul\":11084:11104   */\n      tag_442\n        /* \"#utility.yul\":11102:11103   */\n      dup4\n        /* \"#utility.yul\":11084:11104   */\n      tag_306\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11079:11104   */\n      swap3\n      pop\n        /* \"#utility.yul\":11123:11124   */\n      dup3\n        /* \"#utility.yul\":11113:11148   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11128:11146   */\n      tag_444\n      tag_323\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11113:11148   */\n    tag_443:\n        /* \"#utility.yul\":11170:11171   */\n      dup3\n        /* \"#utility.yul\":11167:11168   */\n      dup3\n        /* \"#utility.yul\":11163:11172   */\n      div\n        /* \"#utility.yul\":11158:11172   */\n      swap1\n      pop\n        /* \"#utility.yul\":10993:11178   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11365   */\n    tag_324:\n        /* \"#utility.yul\":11324:11357   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11320:11321   */\n      0x00\n        /* \"#utility.yul\":11312:11318   */\n      dup3\n        /* \"#utility.yul\":11308:11322   */\n      add\n        /* \"#utility.yul\":11301:11358   */\n      mstore\n        /* \"#utility.yul\":11184:11365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11371:11737   */\n    tag_325:\n        /* \"#utility.yul\":11513:11516   */\n      0x00\n        /* \"#utility.yul\":11534:11601   */\n      tag_447\n        /* \"#utility.yul\":11598:11600   */\n      0x1f\n        /* \"#utility.yul\":11593:11596   */\n      dup4\n        /* \"#utility.yul\":11534:11601   */\n      tag_295\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11527:11601   */\n      swap2\n      pop\n        /* \"#utility.yul\":11610:11703   */\n      tag_448\n        /* \"#utility.yul\":11699:11702   */\n      dup3\n        /* \"#utility.yul\":11610:11703   */\n      tag_324\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11728:11730   */\n      0x20\n        /* \"#utility.yul\":11723:11726   */\n      dup3\n        /* \"#utility.yul\":11719:11731   */\n      add\n        /* \"#utility.yul\":11712:11731   */\n      swap1\n      pop\n        /* \"#utility.yul\":11371:11737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11743:12162   */\n    tag_242:\n        /* \"#utility.yul\":11909:11913   */\n      0x00\n        /* \"#utility.yul\":11947:11949   */\n      0x20\n        /* \"#utility.yul\":11936:11945   */\n      dup3\n        /* \"#utility.yul\":11932:11950   */\n      add\n        /* \"#utility.yul\":11924:11950   */\n      swap1\n      pop\n        /* \"#utility.yul\":11996:12005   */\n      dup2\n        /* \"#utility.yul\":11990:11994   */\n      dup2\n        /* \"#utility.yul\":11986:12006   */\n      sub\n        /* \"#utility.yul\":11982:11983   */\n      0x00\n        /* \"#utility.yul\":11971:11980   */\n      dup4\n        /* \"#utility.yul\":11967:11984   */\n      add\n        /* \"#utility.yul\":11960:12007   */\n      mstore\n        /* \"#utility.yul\":12024:12155   */\n      tag_450\n        /* \"#utility.yul\":12150:12154   */\n      dup2\n        /* \"#utility.yul\":12024:12155   */\n      tag_325\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12016:12155   */\n      swap1\n      pop\n        /* \"#utility.yul\":11743:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12336   */\n    tag_326:\n        /* \"#utility.yul\":12308:12328   */\n      0x4275726e2076616c756520696e76616c69640000000000000000000000000000\n        /* \"#utility.yul\":12304:12305   */\n      0x00\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12292:12306   */\n      add\n        /* \"#utility.yul\":12285:12329   */\n      mstore\n        /* \"#utility.yul\":12168:12336   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12342:12708   */\n    tag_327:\n        /* \"#utility.yul\":12484:12487   */\n      0x00\n        /* \"#utility.yul\":12505:12572   */\n      tag_453\n        /* \"#utility.yul\":12569:12571   */\n      0x12\n        /* \"#utility.yul\":12564:12567   */\n      dup4\n        /* \"#utility.yul\":12505:12572   */\n      tag_295\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12498:12572   */\n      swap2\n      pop\n        /* \"#utility.yul\":12581:12674   */\n      tag_454\n        /* \"#utility.yul\":12670:12673   */\n      dup3\n        /* \"#utility.yul\":12581:12674   */\n      tag_326\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12699:12701   */\n      0x20\n        /* \"#utility.yul\":12694:12697   */\n      dup3\n        /* \"#utility.yul\":12690:12702   */\n      add\n        /* \"#utility.yul\":12683:12702   */\n      swap1\n      pop\n        /* \"#utility.yul\":12342:12708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12714:13133   */\n    tag_249:\n        /* \"#utility.yul\":12880:12884   */\n      0x00\n        /* \"#utility.yul\":12918:12920   */\n      0x20\n        /* \"#utility.yul\":12907:12916   */\n      dup3\n        /* \"#utility.yul\":12903:12921   */\n      add\n        /* \"#utility.yul\":12895:12921   */\n      swap1\n      pop\n        /* \"#utility.yul\":12967:12976   */\n      dup2\n        /* \"#utility.yul\":12961:12965   */\n      dup2\n        /* \"#utility.yul\":12957:12977   */\n      sub\n        /* \"#utility.yul\":12953:12954   */\n      0x00\n        /* \"#utility.yul\":12942:12951   */\n      dup4\n        /* \"#utility.yul\":12938:12955   */\n      add\n        /* \"#utility.yul\":12931:12978   */\n      mstore\n        /* \"#utility.yul\":12995:13126   */\n      tag_456\n        /* \"#utility.yul\":13121:13125   */\n      dup2\n        /* \"#utility.yul\":12995:13126   */\n      tag_327\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12987:13126   */\n      swap1\n      pop\n        /* \"#utility.yul\":12714:13133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13139:13581   */\n    tag_260:\n        /* \"#utility.yul\":13288:13292   */\n      0x00\n        /* \"#utility.yul\":13326:13328   */\n      0x60\n        /* \"#utility.yul\":13315:13324   */\n      dup3\n        /* \"#utility.yul\":13311:13329   */\n      add\n        /* \"#utility.yul\":13303:13329   */\n      swap1\n      pop\n        /* \"#utility.yul\":13339:13410   */\n      tag_458\n        /* \"#utility.yul\":13407:13408   */\n      0x00\n        /* \"#utility.yul\":13396:13405   */\n      dup4\n        /* \"#utility.yul\":13392:13409   */\n      add\n        /* \"#utility.yul\":13383:13389   */\n      dup7\n        /* \"#utility.yul\":13339:13410   */\n      tag_314\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13420:13492   */\n      tag_459\n        /* \"#utility.yul\":13488:13490   */\n      0x20\n        /* \"#utility.yul\":13477:13486   */\n      dup4\n        /* \"#utility.yul\":13473:13491   */\n      add\n        /* \"#utility.yul\":13464:13470   */\n      dup6\n        /* \"#utility.yul\":13420:13492   */\n      tag_311\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13502:13574   */\n      tag_460\n        /* \"#utility.yul\":13570:13572   */\n      0x40\n        /* \"#utility.yul\":13559:13568   */\n      dup4\n        /* \"#utility.yul\":13555:13573   */\n      add\n        /* \"#utility.yul\":13546:13552   */\n      dup5\n        /* \"#utility.yul\":13502:13574   */\n      tag_311\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13139:13581   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122081eda74695bce720927ac57d4cfb6212a2b1fac79dac9d6f1553fcad9efdbed064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1090": {
									"entryPoint": null,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_869": {
									"entryPoint": null,
									"id": 869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_984": {
									"entryPoint": null,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_610": {
									"entryPoint": 515,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_965": {
									"entryPoint": 320,
									"id": 965,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_577": {
									"entryPoint": 648,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:1",
										"nodeType": "YulBlock",
										"src": "0:7000:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											},
											{
												"body": {
													"nativeSrc": "5848:152:1",
													"nodeType": "YulBlock",
													"src": "5848:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:1"
																},
																"nativeSrc": "5858:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:1"
															},
															"nativeSrc": "5858:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:1"
																},
																"nativeSrc": "5955:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:1"
															},
															"nativeSrc": "5955:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:1"
																},
																"nativeSrc": "5979:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:1"
															},
															"nativeSrc": "5979:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:1"
											},
											{
												"body": {
													"nativeSrc": "6050:147:1",
													"nodeType": "YulBlock",
													"src": "6050:147:1",
													"statements": [
														{
															"nativeSrc": "6060:25:1",
															"nodeType": "YulAssignment",
															"src": "6060:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:1"
																},
																"nativeSrc": "6065:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:1"
																}
															]
														},
														{
															"nativeSrc": "6094:25:1",
															"nodeType": "YulAssignment",
															"src": "6094:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:1"
																},
																"nativeSrc": "6099:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:1"
																}
															]
														},
														{
															"nativeSrc": "6128:16:1",
															"nodeType": "YulAssignment",
															"src": "6128:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:1"
																},
																"nativeSrc": "6135:9:1",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:1",
																"nodeType": "YulBlock",
																"src": "6168:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:1"
																			},
																			"nativeSrc": "6170:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:1"
																		},
																		"nativeSrc": "6170:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:1"
																},
																"nativeSrc": "6157:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:1"
															},
															"nativeSrc": "6154:36:1",
															"nodeType": "YulIf",
															"src": "6154:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:1",
														"nodeType": "YulTypedName",
														"src": "6037:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:1",
														"nodeType": "YulTypedName",
														"src": "6040:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:1",
														"nodeType": "YulTypedName",
														"src": "6046:3:1",
														"type": ""
													}
												],
												"src": "6006:191:1"
											},
											{
												"body": {
													"nativeSrc": "6268:53:1",
													"nodeType": "YulBlock",
													"src": "6268:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:1"
																		},
																		"nativeSrc": "6290:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:1"
																},
																"nativeSrc": "6278:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:1"
															},
															"nativeSrc": "6278:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:1",
														"nodeType": "YulTypedName",
														"src": "6256:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:1",
														"nodeType": "YulTypedName",
														"src": "6263:3:1",
														"type": ""
													}
												],
												"src": "6203:118:1"
											},
											{
												"body": {
													"nativeSrc": "6481:288:1",
													"nodeType": "YulBlock",
													"src": "6481:288:1",
													"statements": [
														{
															"nativeSrc": "6491:26:1",
															"nodeType": "YulAssignment",
															"src": "6491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:1"
																},
																"nativeSrc": "6499:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:1"
																		},
																		"nativeSrc": "6580:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:1"
																},
																"nativeSrc": "6527:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:1"
															},
															"nativeSrc": "6527:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:1"
																		},
																		"nativeSrc": "6661:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:1"
																},
																"nativeSrc": "6608:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:1"
															},
															"nativeSrc": "6608:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:1"
																		},
																		"nativeSrc": "6743:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:1"
																},
																"nativeSrc": "6690:72:1",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:1"
															},
															"nativeSrc": "6690:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:1",
														"nodeType": "YulTypedName",
														"src": "6437:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:1",
														"nodeType": "YulTypedName",
														"src": "6449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:1",
														"nodeType": "YulTypedName",
														"src": "6457:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:1",
														"nodeType": "YulTypedName",
														"src": "6465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:1",
														"nodeType": "YulTypedName",
														"src": "6476:4:1",
														"type": ""
													}
												],
												"src": "6327:442:1"
											},
											{
												"body": {
													"nativeSrc": "6873:124:1",
													"nodeType": "YulBlock",
													"src": "6873:124:1",
													"statements": [
														{
															"nativeSrc": "6883:26:1",
															"nodeType": "YulAssignment",
															"src": "6883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:1"
																},
																"nativeSrc": "6891:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:1"
																		},
																		"nativeSrc": "6972:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:1"
																},
																"nativeSrc": "6919:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:1"
															},
															"nativeSrc": "6919:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:1",
														"nodeType": "YulTypedName",
														"src": "6845:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:1",
														"nodeType": "YulTypedName",
														"src": "6857:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:1",
														"nodeType": "YulTypedName",
														"src": "6868:4:1",
														"type": ""
													}
												],
												"src": "6775:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5477656574204F6E204261736500000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5477656574730000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x140 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x13B CALLER PUSH4 0x3B9ACA00 PUSH2 0x203 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x273 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x284 PUSH0 DUP4 DUP4 PUSH2 0x288 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x82F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x361 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x437 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x51C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x4D8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x591 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x59B DUP7 DUP4 PUSH2 0x556 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DF PUSH2 0x5DA PUSH2 0x5D5 DUP5 PUSH2 0x5B3 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F8 DUP4 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x60C PUSH2 0x604 DUP3 PUSH2 0x5E6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x562 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x620 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x62B DUP2 DUP5 DUP5 PUSH2 0x5EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64E JUMPI PUSH2 0x643 PUSH0 DUP3 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x631 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x693 JUMPI PUSH2 0x664 DUP2 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x66D DUP5 PUSH2 0x547 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x67C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x690 PUSH2 0x688 DUP6 PUSH2 0x547 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x630 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x698 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CB DUP4 DUP4 PUSH2 0x6A4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E4 DUP3 PUSH2 0x4A1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6FD JUMPI PUSH2 0x6FC PUSH2 0x4AB JUMP JUMPDEST JUMPDEST PUSH2 0x707 DUP3 SLOAD PUSH2 0x505 JUMP JUMPDEST PUSH2 0x712 DUP3 DUP3 DUP6 PUSH2 0x652 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x743 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x731 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x73B DUP6 DUP3 PUSH2 0x6C0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x751 DUP7 PUSH2 0x535 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x778 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x753 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x795 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x791 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6A4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7D3 DUP3 PUSH2 0x7AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E3 DUP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7FC PUSH0 DUP4 ADD DUP5 PUSH2 0x7DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x839 DUP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x844 DUP4 PUSH2 0x5B3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0x802 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0x5B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x884 PUSH0 DUP4 ADD DUP7 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x891 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x89E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B9 PUSH0 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F4E DUP1 PUSH2 0x8CC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAFE8289A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xFC6D483A EQ PUSH2 0x404 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x320 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x987 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BA PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C7 DUP2 DUP6 DUP6 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x4EB PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH2 0x4F6 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x57E PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x5D8 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x661 JUMPI PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x623 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x673 ADDRESS PUSH2 0x66D PUSH2 0x7F5 JUMP JUMPDEST DUP4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x67B PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x688 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x695 DUP6 DUP3 DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x6A0 DUP6 DUP6 DUP6 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH6 0x48C27395000 DUP2 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x6D1 PUSH2 0xF25 JUMP JUMPDEST DUP3 PUSH2 0x116E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E5 CALLER ADDRESS DUP4 PUSH2 0x1014 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x7D3 PUSH0 PUSH2 0x11ED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH2 0x7E1 PUSH2 0xF25 JUMP JUMPDEST DUP4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x7F1 DUP3 DUP3 PUSH2 0x116E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x82C SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x886 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8B7 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D7 PUSH2 0xF3E JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x8E3 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 PUSH2 0x93D PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x984 ADDRESS DUP3 PUSH2 0x12B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x98F PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAA7 CALLER PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH6 0x48C27395000 DUP2 PUSH2 0xAB9 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST GT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xB65 JUMPI PUSH2 0xB16 CALLER DUP3 PUSH2 0x12B0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0xB70 ADDRESS CALLER DUP5 PUSH2 0x1014 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC4E JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC91 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xC9A PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xD73 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP PUSH6 0x48C27395000 DUP2 PUSH2 0xD59 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST GT PUSH2 0xD71 JUMPI DUP1 SWAP2 POP POP PUSH2 0xD77 JUMP JUMPDEST POP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0xF3E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7F DUP2 PUSH2 0x11ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8D ADDRESS CALLER DUP4 PUSH2 0x1014 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF39 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x132F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF46 PUSH2 0xF25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF64 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC3 JUMPI PUSH2 0xF87 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST DUP4 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C0 JUMPI PUSH2 0x10BF DUP6 DUP4 PUSH2 0x116E JUMP JUMPDEST JUMPDEST PUSH2 0x10CB DUP6 DUP6 DUP4 PUSH2 0x14FE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10E7 DUP5 DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1168 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1159 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1167 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x132F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E9 DUP3 PUSH0 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1320 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132B PUSH0 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14F8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E9 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x163E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x170C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1753 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x179D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 DUP3 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1853 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1863 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x182F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EF DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195C DUP6 DUP3 DUP7 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP5 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A10 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A21 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A32 DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A92 DUP5 DUP3 DUP6 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AF7 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B92 PUSH1 0x14 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFD DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C08 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C30 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 PUSH1 0x46 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D06 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D41 PUSH1 0x19 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4C DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 PUSH2 0x1D35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7F DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8A DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D98 DUP2 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DED DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF8 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E08 JUMPI PUSH2 0x1E07 PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E47 PUSH1 0x1F DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E52 DUP3 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E74 DUP2 PUSH2 0x1E3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAF PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBA DUP3 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EF6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1F03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1F10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xED 0xA7 CHAINID SWAP6 0xBC 0xE7 KECCAK256 SWAP3 PUSH27 0xC57D4CFB6212A2B1FAC79DAC9D6F1553FCAD9EFDBED064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "28471:3600:0:-:0;;;28924:117;;;;;;;;;;28979:10;11666:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11740:5;11732;:13;;;;;;:::i;:::-;;11765:7;11755;:17;;;;;;:::i;:::-;;11666:113;;23452:1;23428:26;;:12;:26;;;23424:95;;23505:1;23477:31;;;;;;;;;;;:::i;:::-;;;;;;;;23424:95;23528:32;23547:12;23528:18;;;:32;;:::i;:::-;23380:187;26992:1;27097:7;:22;;;;29001:33:::2;29007:10;28592:22;29001:5;;;:33;;:::i;:::-;28471:3600:::0;;25067:187;25140:16;25159:6;;;;;;;;;;;25140:25;;25184:8;25175:6;;:17;;;;;;;;;;;;;;;;;;25238:8;25207:40;;25228:8;25207:40;;;;;;;;;;;;25130:124;25067:187;:::o;17499:217::-;17597:1;17578:21;;:7;:21;;;17574:91;;17651:1;17622:32;;;;;;;;;;;:::i;:::-;;;;;;;;17574:91;17674:35;17690:1;17694:7;17703:5;17674:7;;;:35;;:::i;:::-;17499:217;;:::o;16049:1107::-;16154:1;16138:18;;:4;:18;;;16134:540;;16290:5;16274:12;;:21;;;;;;;:::i;:::-;;;;;;;;16134:540;;;16326:19;16348:9;:15;16358:4;16348:15;;;;;;;;;;;;;;;;16326:37;;16395:5;16381:11;:19;16377:115;;;16452:4;16458:11;16471:5;16427:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;16377:115;16644:5;16630:11;:19;16612:9;:15;16622:4;16612:15;;;;;;;;;;;;;;;:37;;;;16312:362;16134:540;16702:1;16688:16;;:2;:16;;;16684:425;;16867:5;16851:12;;:21;;;;;;;;;;;16684:425;;;17079:5;17062:9;:13;17072:2;17062:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;16684:425;17139:2;17124:25;;17133:4;17124:25;;;17143:5;17124:25;;;;;;:::i;:::-;;;;;;;;16049:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;28471:3600:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INITIAL_SUPPLY_1047": {
									"entryPoint": 1708,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_1055": {
									"entryPoint": 1724,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_671": {
									"entryPoint": 3884,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_731": {
									"entryPoint": 4911,
									"id": 731,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_643": {
									"entryPoint": 4462,
									"id": 643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_903": {
									"entryPoint": 3902,
									"id": 903,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_610": {
									"entryPoint": 4784,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 3877,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1018": {
									"entryPoint": 4306,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1010": {
									"entryPoint": 4037,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_779": {
									"entryPoint": 4316,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_965": {
									"entryPoint": 4589,
									"id": 965,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1143": {
									"entryPoint": 4116,
									"id": 1143,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_500": {
									"entryPoint": 5374,
									"id": 500,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_577": {
									"entryPoint": 5614,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1193": {
									"entryPoint": 1754,
									"id": 1193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_397": {
									"entryPoint": 3452,
									"id": 397,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_421": {
									"entryPoint": 1200,
									"id": 421,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_356": {
									"entryPoint": 1917,
									"id": 356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_820": {
									"entryPoint": 2005,
									"id": 820,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_799": {
									"entryPoint": 1734,
									"id": 799,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1377": {
									"entryPoint": 3229,
									"id": 1377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1072": {
									"entryPoint": 1716,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_316": {
									"entryPoint": 1056,
									"id": 316,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerAddLiquidity_1408": {
									"entryPoint": 2255,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ownerRemoveLiquidity_1460": {
									"entryPoint": 1243,
									"id": 1460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_886": {
									"entryPoint": 2037,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidityAndClaimRewards_1336": {
									"entryPoint": 2439,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_917": {
									"entryPoint": 1986,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_325": {
									"entryPoint": 2077,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_343": {
									"entryPoint": 1234,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1662,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_945": {
									"entryPoint": 3582,
									"id": 945,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_380": {
									"entryPoint": 2221,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@undoAddLiquidity_1224": {
									"entryPoint": 3714,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13584:1",
										"nodeType": "YulBlock",
										"src": "0:13584:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3404:53:1",
													"nodeType": "YulBlock",
													"src": "3404:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:1"
																		},
																		"nativeSrc": "3426:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nativeSrc": "3414:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:1"
															},
															"nativeSrc": "3414:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:1",
														"nodeType": "YulTypedName",
														"src": "3392:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:1",
														"nodeType": "YulTypedName",
														"src": "3399:3:1",
														"type": ""
													}
												],
												"src": "3339:118:1"
											},
											{
												"body": {
													"nativeSrc": "3561:124:1",
													"nodeType": "YulBlock",
													"src": "3561:124:1",
													"statements": [
														{
															"nativeSrc": "3571:26:1",
															"nodeType": "YulAssignment",
															"src": "3571:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:1"
																		},
																		"nativeSrc": "3660:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:1"
																},
																"nativeSrc": "3607:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:1"
															},
															"nativeSrc": "3607:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:1",
														"nodeType": "YulTypedName",
														"src": "3533:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:1",
														"nodeType": "YulTypedName",
														"src": "3545:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:1",
														"nodeType": "YulTypedName",
														"src": "3556:4:1",
														"type": ""
													}
												],
												"src": "3463:222:1"
											},
											{
												"body": {
													"nativeSrc": "3757:263:1",
													"nodeType": "YulBlock",
													"src": "3757:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:1",
																"nodeType": "YulBlock",
																"src": "3803:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:1"
																			},
																			"nativeSrc": "3805:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:1"
																		},
																		"nativeSrc": "3805:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:1"
																		},
																		"nativeSrc": "3774:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:1"
																},
																"nativeSrc": "3770:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:1"
															},
															"nativeSrc": "3767:119:1",
															"nodeType": "YulIf",
															"src": "3767:119:1"
														},
														{
															"nativeSrc": "3896:117:1",
															"nodeType": "YulBlock",
															"src": "3896:117:1",
															"statements": [
																{
																	"nativeSrc": "3911:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:1"
																				},
																				"nativeSrc": "3971:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:1"
																		},
																		"nativeSrc": "3950:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:1",
														"nodeType": "YulTypedName",
														"src": "3727:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:1",
														"nodeType": "YulTypedName",
														"src": "3738:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:1",
														"nodeType": "YulTypedName",
														"src": "3750:6:1",
														"type": ""
													}
												],
												"src": "3691:329:1"
											},
											{
												"body": {
													"nativeSrc": "4126:519:1",
													"nodeType": "YulBlock",
													"src": "4126:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:1",
																"nodeType": "YulBlock",
																"src": "4172:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:1"
																			},
																			"nativeSrc": "4174:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:1"
																		},
																		"nativeSrc": "4174:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:1"
																		},
																		"nativeSrc": "4143:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:1"
																},
																"nativeSrc": "4139:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:1"
															},
															"nativeSrc": "4136:119:1",
															"nodeType": "YulIf",
															"src": "4136:119:1"
														},
														{
															"nativeSrc": "4265:117:1",
															"nodeType": "YulBlock",
															"src": "4265:117:1",
															"statements": [
																{
																	"nativeSrc": "4280:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:1"
																				},
																				"nativeSrc": "4340:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:1"
																		},
																		"nativeSrc": "4319:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:1",
															"nodeType": "YulBlock",
															"src": "4392:118:1",
															"statements": [
																{
																	"nativeSrc": "4407:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:1"
																				},
																				"nativeSrc": "4468:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:1"
																		},
																		"nativeSrc": "4447:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:1",
															"nodeType": "YulBlock",
															"src": "4520:118:1",
															"statements": [
																{
																	"nativeSrc": "4535:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:1"
																				},
																				"nativeSrc": "4596:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:1"
																		},
																		"nativeSrc": "4575:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:1",
														"nodeType": "YulTypedName",
														"src": "4080:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:1",
														"nodeType": "YulTypedName",
														"src": "4091:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:1",
														"nodeType": "YulTypedName",
														"src": "4103:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:1",
														"nodeType": "YulTypedName",
														"src": "4111:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:1",
														"nodeType": "YulTypedName",
														"src": "4119:6:1",
														"type": ""
													}
												],
												"src": "4026:619:1"
											},
											{
												"body": {
													"nativeSrc": "4694:43:1",
													"nodeType": "YulBlock",
													"src": "4694:43:1",
													"statements": [
														{
															"nativeSrc": "4704:27:1",
															"nodeType": "YulAssignment",
															"src": "4704:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:1"
																},
																"nativeSrc": "4715:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:1",
														"nodeType": "YulTypedName",
														"src": "4676:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:1",
														"nodeType": "YulTypedName",
														"src": "4686:7:1",
														"type": ""
													}
												],
												"src": "4651:86:1"
											},
											{
												"body": {
													"nativeSrc": "4804:51:1",
													"nodeType": "YulBlock",
													"src": "4804:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:1"
																		},
																		"nativeSrc": "4826:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:1"
																},
																"nativeSrc": "4814:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:1"
															},
															"nativeSrc": "4814:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:1",
														"nodeType": "YulTypedName",
														"src": "4792:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:1",
														"nodeType": "YulTypedName",
														"src": "4799:3:1",
														"type": ""
													}
												],
												"src": "4743:112:1"
											},
											{
												"body": {
													"nativeSrc": "4955:120:1",
													"nodeType": "YulBlock",
													"src": "4955:120:1",
													"statements": [
														{
															"nativeSrc": "4965:26:1",
															"nodeType": "YulAssignment",
															"src": "4965:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:1"
																},
																"nativeSrc": "4973:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:1"
																		},
																		"nativeSrc": "5050:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:1"
																},
																"nativeSrc": "5001:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:1"
															},
															"nativeSrc": "5001:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:1",
														"nodeType": "YulTypedName",
														"src": "4927:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:1",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:1",
														"nodeType": "YulTypedName",
														"src": "4950:4:1",
														"type": ""
													}
												],
												"src": "4861:214:1"
											},
											{
												"body": {
													"nativeSrc": "5147:263:1",
													"nodeType": "YulBlock",
													"src": "5147:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:1",
																"nodeType": "YulBlock",
																"src": "5193:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:1"
																			},
																			"nativeSrc": "5195:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:1"
																		},
																		"nativeSrc": "5195:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:1"
																		},
																		"nativeSrc": "5164:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:1"
																},
																"nativeSrc": "5160:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:1"
															},
															"nativeSrc": "5157:119:1",
															"nodeType": "YulIf",
															"src": "5157:119:1"
														},
														{
															"nativeSrc": "5286:117:1",
															"nodeType": "YulBlock",
															"src": "5286:117:1",
															"statements": [
																{
																	"nativeSrc": "5301:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:1"
																				},
																				"nativeSrc": "5361:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:1"
																		},
																		"nativeSrc": "5340:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:1",
														"nodeType": "YulTypedName",
														"src": "5117:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:1",
														"nodeType": "YulTypedName",
														"src": "5128:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:1",
														"nodeType": "YulTypedName",
														"src": "5140:6:1",
														"type": ""
													}
												],
												"src": "5081:329:1"
											},
											{
												"body": {
													"nativeSrc": "5481:53:1",
													"nodeType": "YulBlock",
													"src": "5481:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:1"
																		},
																		"nativeSrc": "5503:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:1"
																},
																"nativeSrc": "5491:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:1"
															},
															"nativeSrc": "5491:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:1",
														"nodeType": "YulTypedName",
														"src": "5469:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:1",
														"nodeType": "YulTypedName",
														"src": "5476:3:1",
														"type": ""
													}
												],
												"src": "5416:118:1"
											},
											{
												"body": {
													"nativeSrc": "5638:124:1",
													"nodeType": "YulBlock",
													"src": "5638:124:1",
													"statements": [
														{
															"nativeSrc": "5648:26:1",
															"nodeType": "YulAssignment",
															"src": "5648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:1"
																},
																"nativeSrc": "5656:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:1"
																		},
																		"nativeSrc": "5737:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:1"
																},
																"nativeSrc": "5684:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:1"
															},
															"nativeSrc": "5684:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:1",
														"nodeType": "YulTypedName",
														"src": "5610:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:1",
														"nodeType": "YulTypedName",
														"src": "5622:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:1",
														"nodeType": "YulTypedName",
														"src": "5633:4:1",
														"type": ""
													}
												],
												"src": "5540:222:1"
											},
											{
												"body": {
													"nativeSrc": "5851:391:1",
													"nodeType": "YulBlock",
													"src": "5851:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:1",
																"nodeType": "YulBlock",
																"src": "5897:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:1"
																			},
																			"nativeSrc": "5899:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:1"
																		},
																		"nativeSrc": "5899:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:1"
																		},
																		"nativeSrc": "5868:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:1"
																},
																"nativeSrc": "5864:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:1"
															},
															"nativeSrc": "5861:119:1",
															"nodeType": "YulIf",
															"src": "5861:119:1"
														},
														{
															"nativeSrc": "5990:117:1",
															"nodeType": "YulBlock",
															"src": "5990:117:1",
															"statements": [
																{
																	"nativeSrc": "6005:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:1"
																				},
																				"nativeSrc": "6065:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:1"
																		},
																		"nativeSrc": "6044:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:1",
															"nodeType": "YulBlock",
															"src": "6117:118:1",
															"statements": [
																{
																	"nativeSrc": "6132:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:1"
																				},
																				"nativeSrc": "6193:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:1"
																		},
																		"nativeSrc": "6172:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:1",
														"nodeType": "YulTypedName",
														"src": "5813:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:1",
														"nodeType": "YulTypedName",
														"src": "5824:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:1",
														"nodeType": "YulTypedName",
														"src": "5836:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:1",
														"nodeType": "YulTypedName",
														"src": "5844:6:1",
														"type": ""
													}
												],
												"src": "5768:474:1"
											},
											{
												"body": {
													"nativeSrc": "6276:152:1",
													"nodeType": "YulBlock",
													"src": "6276:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																},
																"nativeSrc": "6286:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:1"
															},
															"nativeSrc": "6286:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:1"
																},
																"nativeSrc": "6383:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:1"
															},
															"nativeSrc": "6383:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:1"
																},
																"nativeSrc": "6407:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:1"
															},
															"nativeSrc": "6407:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:1"
											},
											{
												"body": {
													"nativeSrc": "6485:269:1",
													"nodeType": "YulBlock",
													"src": "6485:269:1",
													"statements": [
														{
															"nativeSrc": "6495:22:1",
															"nodeType": "YulAssignment",
															"src": "6495:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:1"
																},
																"nativeSrc": "6505:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:1"
																}
															]
														},
														{
															"nativeSrc": "6526:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:1"
																},
																"nativeSrc": "6552:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:1",
																"nodeType": "YulBlock",
																"src": "6603:51:1",
																"statements": [
																	{
																		"nativeSrc": "6617:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:1"
																			},
																			"nativeSrc": "6627:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:1"
																},
																"nativeSrc": "6576:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:1"
															},
															"nativeSrc": "6573:81:1",
															"nodeType": "YulIf",
															"src": "6573:81:1"
														},
														{
															"body": {
																"nativeSrc": "6706:42:1",
																"nodeType": "YulBlock",
																"src": "6706:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:1"
																			},
																			"nativeSrc": "6720:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:1"
																		},
																		"nativeSrc": "6720:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:1"
																		},
																		"nativeSrc": "6690:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:1"
																},
																"nativeSrc": "6667:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:1"
															},
															"nativeSrc": "6664:84:1",
															"nodeType": "YulIf",
															"src": "6664:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:1",
														"nodeType": "YulTypedName",
														"src": "6469:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:1",
														"nodeType": "YulTypedName",
														"src": "6478:6:1",
														"type": ""
													}
												],
												"src": "6434:320:1"
											},
											{
												"body": {
													"nativeSrc": "6866:64:1",
													"nodeType": "YulBlock",
													"src": "6866:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:1"
																		},
																		"nativeSrc": "6884:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "6900:22:1",
																		"nodeType": "YulLiteral",
																		"src": "6900:22:1",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:1"
																},
																"nativeSrc": "6877:46:1",
																"nodeType": "YulFunctionCall",
																"src": "6877:46:1"
															},
															"nativeSrc": "6877:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "6877:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "6760:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:1",
														"nodeType": "YulTypedName",
														"src": "6858:6:1",
														"type": ""
													}
												],
												"src": "6760:170:1"
											},
											{
												"body": {
													"nativeSrc": "7082:220:1",
													"nodeType": "YulBlock",
													"src": "7082:220:1",
													"statements": [
														{
															"nativeSrc": "7092:74:1",
															"nodeType": "YulAssignment",
															"src": "7092:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7158:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7163:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7099:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7099:58:1"
																},
																"nativeSrc": "7099:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7099:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7092:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7264:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7264:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "7175:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7175:88:1"
																},
																"nativeSrc": "7175:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7175:93:1"
															},
															"nativeSrc": "7175:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7175:93:1"
														},
														{
															"nativeSrc": "7277:19:1",
															"nodeType": "YulAssignment",
															"src": "7277:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7288:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7288:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7293:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7284:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:1"
																},
																"nativeSrc": "7284:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7284:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7277:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7277:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6936:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7070:3:1",
														"nodeType": "YulTypedName",
														"src": "7070:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7078:3:1",
														"nodeType": "YulTypedName",
														"src": "7078:3:1",
														"type": ""
													}
												],
												"src": "6936:366:1"
											},
											{
												"body": {
													"nativeSrc": "7479:248:1",
													"nodeType": "YulBlock",
													"src": "7479:248:1",
													"statements": [
														{
															"nativeSrc": "7489:26:1",
															"nodeType": "YulAssignment",
															"src": "7489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:1"
																},
																"nativeSrc": "7497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7536:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7536:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7547:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7547:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7532:3:1"
																		},
																		"nativeSrc": "7532:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7555:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7555:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7561:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7551:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:1"
																		},
																		"nativeSrc": "7551:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7525:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7525:6:1"
																},
																"nativeSrc": "7525:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7525:47:1"
															},
															"nativeSrc": "7525:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7525:47:1"
														},
														{
															"nativeSrc": "7581:139:1",
															"nodeType": "YulAssignment",
															"src": "7581:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7715:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7715:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7589:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7589:124:1"
																},
																"nativeSrc": "7589:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7589:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7581:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7581:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7308:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7459:9:1",
														"nodeType": "YulTypedName",
														"src": "7459:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7474:4:1",
														"nodeType": "YulTypedName",
														"src": "7474:4:1",
														"type": ""
													}
												],
												"src": "7308:419:1"
											},
											{
												"body": {
													"nativeSrc": "7761:152:1",
													"nodeType": "YulBlock",
													"src": "7761:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7778:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7778:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7781:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7781:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7771:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																},
																"nativeSrc": "7771:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7771:88:1"
															},
															"nativeSrc": "7771:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7771:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7875:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7875:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7878:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:1"
																},
																"nativeSrc": "7868:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7868:15:1"
															},
															"nativeSrc": "7868:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7868:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7902:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7902:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:1"
																},
																"nativeSrc": "7892:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7892:15:1"
															},
															"nativeSrc": "7892:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7892:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7733:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7733:180:1"
											},
											{
												"body": {
													"nativeSrc": "7964:149:1",
													"nodeType": "YulBlock",
													"src": "7964:149:1",
													"statements": [
														{
															"nativeSrc": "7974:25:1",
															"nodeType": "YulAssignment",
															"src": "7974:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7997:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7997:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7979:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7979:17:1"
																},
																"nativeSrc": "7979:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7979:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7974:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7974:1:1"
																}
															]
														},
														{
															"nativeSrc": "8008:25:1",
															"nodeType": "YulAssignment",
															"src": "8008:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8031:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8031:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8013:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8013:17:1"
																},
																"nativeSrc": "8013:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8013:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8008:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8008:1:1"
																}
															]
														},
														{
															"nativeSrc": "8042:17:1",
															"nodeType": "YulAssignment",
															"src": "8042:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8054:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8054:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8057:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8050:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:1"
																},
																"nativeSrc": "8050:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8050:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8042:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8084:22:1",
																"nodeType": "YulBlock",
																"src": "8084:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8086:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8086:16:1"
																			},
																			"nativeSrc": "8086:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8086:18:1"
																		},
																		"nativeSrc": "8086:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8086:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8075:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8081:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8081:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8072:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8072:2:1"
																},
																"nativeSrc": "8072:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8072:11:1"
															},
															"nativeSrc": "8069:37:1",
															"nodeType": "YulIf",
															"src": "8069:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7919:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7950:1:1",
														"nodeType": "YulTypedName",
														"src": "7950:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7953:1:1",
														"nodeType": "YulTypedName",
														"src": "7953:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7959:4:1",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													}
												],
												"src": "7919:194:1"
											},
											{
												"body": {
													"nativeSrc": "8163:147:1",
													"nodeType": "YulBlock",
													"src": "8163:147:1",
													"statements": [
														{
															"nativeSrc": "8173:25:1",
															"nodeType": "YulAssignment",
															"src": "8173:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8196:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8178:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8178:17:1"
																},
																"nativeSrc": "8178:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8178:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8173:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8173:1:1"
																}
															]
														},
														{
															"nativeSrc": "8207:25:1",
															"nodeType": "YulAssignment",
															"src": "8207:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8230:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8230:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8212:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8212:17:1"
																},
																"nativeSrc": "8212:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8212:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8207:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "8207:1:1"
																}
															]
														},
														{
															"nativeSrc": "8241:16:1",
															"nodeType": "YulAssignment",
															"src": "8241:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8252:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8252:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8255:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8255:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8248:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:1"
																},
																"nativeSrc": "8248:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8248:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8241:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8281:22:1",
																"nodeType": "YulBlock",
																"src": "8281:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8283:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8283:16:1"
																			},
																			"nativeSrc": "8283:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8283:18:1"
																		},
																		"nativeSrc": "8283:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8283:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8273:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8273:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8276:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8276:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8270:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8270:2:1"
																},
																"nativeSrc": "8270:10:1",
																"nodeType": "YulFunctionCall",
																"src": "8270:10:1"
															},
															"nativeSrc": "8267:36:1",
															"nodeType": "YulIf",
															"src": "8267:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8119:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8150:1:1",
														"nodeType": "YulTypedName",
														"src": "8150:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8153:1:1",
														"nodeType": "YulTypedName",
														"src": "8153:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8159:3:1",
														"nodeType": "YulTypedName",
														"src": "8159:3:1",
														"type": ""
													}
												],
												"src": "8119:191:1"
											},
											{
												"body": {
													"nativeSrc": "8422:188:1",
													"nodeType": "YulBlock",
													"src": "8422:188:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8444:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8452:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8452:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:1"
																		},
																		"nativeSrc": "8440:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:14:1"
																	},
																	{
																		"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f722061",
																		"kind": "string",
																		"nativeSrc": "8456:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8456:34:1",
																		"type": "",
																		"value": "Liquidity must be provided for a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:1"
																},
																"nativeSrc": "8433:58:1",
																"nodeType": "YulFunctionCall",
																"src": "8433:58:1"
															},
															"nativeSrc": "8433:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "8433:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8512:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8512:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8520:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8520:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:1"
																		},
																		"nativeSrc": "8508:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:15:1"
																	},
																	{
																		"hexValue": "74206c65617374203330206461797320746f207175616c69667920666f722072",
																		"kind": "string",
																		"nativeSrc": "8525:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8525:34:1",
																		"type": "",
																		"value": "t least 30 days to qualify for r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:1"
																},
																"nativeSrc": "8501:59:1",
																"nodeType": "YulFunctionCall",
																"src": "8501:59:1"
															},
															"nativeSrc": "8501:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "8501:59:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8581:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8581:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8589:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8589:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8577:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:1"
																		},
																		"nativeSrc": "8577:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:15:1"
																	},
																	{
																		"hexValue": "657761726473",
																		"kind": "string",
																		"nativeSrc": "8594:8:1",
																		"nodeType": "YulLiteral",
																		"src": "8594:8:1",
																		"type": "",
																		"value": "ewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8570:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8570:6:1"
																},
																"nativeSrc": "8570:33:1",
																"nodeType": "YulFunctionCall",
																"src": "8570:33:1"
															},
															"nativeSrc": "8570:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "8570:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
												"nativeSrc": "8316:294:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8414:6:1",
														"nodeType": "YulTypedName",
														"src": "8414:6:1",
														"type": ""
													}
												],
												"src": "8316:294:1"
											},
											{
												"body": {
													"nativeSrc": "8762:220:1",
													"nodeType": "YulBlock",
													"src": "8762:220:1",
													"statements": [
														{
															"nativeSrc": "8772:74:1",
															"nodeType": "YulAssignment",
															"src": "8772:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8838:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8838:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8843:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8843:2:1",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8779:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8779:58:1"
																},
																"nativeSrc": "8779:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8779:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8944:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8944:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																	"nativeSrc": "8855:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "8855:88:1"
																},
																"nativeSrc": "8855:93:1",
																"nodeType": "YulFunctionCall",
																"src": "8855:93:1"
															},
															"nativeSrc": "8855:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "8855:93:1"
														},
														{
															"nativeSrc": "8957:19:1",
															"nodeType": "YulAssignment",
															"src": "8957:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8968:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8973:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8973:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8964:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:1"
																},
																"nativeSrc": "8964:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8964:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8957:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8616:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8750:3:1",
														"nodeType": "YulTypedName",
														"src": "8750:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8758:3:1",
														"nodeType": "YulTypedName",
														"src": "8758:3:1",
														"type": ""
													}
												],
												"src": "8616:366:1"
											},
											{
												"body": {
													"nativeSrc": "9159:248:1",
													"nodeType": "YulBlock",
													"src": "9159:248:1",
													"statements": [
														{
															"nativeSrc": "9169:26:1",
															"nodeType": "YulAssignment",
															"src": "9169:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9177:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9177:3:1"
																},
																"nativeSrc": "9177:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9177:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9169:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9169:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9216:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9216:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9227:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9227:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:1"
																		},
																		"nativeSrc": "9212:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9212:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9235:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9235:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9241:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9231:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:1"
																		},
																		"nativeSrc": "9231:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9231:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:1"
																},
																"nativeSrc": "9205:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9205:47:1"
															},
															"nativeSrc": "9205:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9205:47:1"
														},
														{
															"nativeSrc": "9261:139:1",
															"nodeType": "YulAssignment",
															"src": "9261:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9395:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9395:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9269:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9269:124:1"
																},
																"nativeSrc": "9269:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9269:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9261:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8988:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9139:9:1",
														"nodeType": "YulTypedName",
														"src": "9139:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9154:4:1",
														"nodeType": "YulTypedName",
														"src": "9154:4:1",
														"type": ""
													}
												],
												"src": "8988:419:1"
											},
											{
												"body": {
													"nativeSrc": "9519:69:1",
													"nodeType": "YulBlock",
													"src": "9519:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9541:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9541:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9549:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9549:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:1"
																		},
																		"nativeSrc": "9537:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:14:1"
																	},
																	{
																		"hexValue": "5265776172642065786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "9553:27:1",
																		"nodeType": "YulLiteral",
																		"src": "9553:27:1",
																		"type": "",
																		"value": "Reward exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9530:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:1"
																},
																"nativeSrc": "9530:51:1",
																"nodeType": "YulFunctionCall",
																"src": "9530:51:1"
															},
															"nativeSrc": "9530:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "9530:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
												"nativeSrc": "9413:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9511:6:1",
														"nodeType": "YulTypedName",
														"src": "9511:6:1",
														"type": ""
													}
												],
												"src": "9413:175:1"
											},
											{
												"body": {
													"nativeSrc": "9740:220:1",
													"nodeType": "YulBlock",
													"src": "9740:220:1",
													"statements": [
														{
															"nativeSrc": "9750:74:1",
															"nodeType": "YulAssignment",
															"src": "9750:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9816:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9816:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9821:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9821:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9757:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9757:58:1"
																},
																"nativeSrc": "9757:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9757:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9750:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9922:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9922:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																	"nativeSrc": "9833:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9833:88:1"
																},
																"nativeSrc": "9833:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9833:93:1"
															},
															"nativeSrc": "9833:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9833:93:1"
														},
														{
															"nativeSrc": "9935:19:1",
															"nodeType": "YulAssignment",
															"src": "9935:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9946:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9946:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9951:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9942:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:1"
																},
																"nativeSrc": "9942:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9942:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9935:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9594:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9728:3:1",
														"nodeType": "YulTypedName",
														"src": "9728:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9736:3:1",
														"nodeType": "YulTypedName",
														"src": "9736:3:1",
														"type": ""
													}
												],
												"src": "9594:366:1"
											},
											{
												"body": {
													"nativeSrc": "10137:248:1",
													"nodeType": "YulBlock",
													"src": "10137:248:1",
													"statements": [
														{
															"nativeSrc": "10147:26:1",
															"nodeType": "YulAssignment",
															"src": "10147:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10159:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10159:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10155:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10155:3:1"
																},
																"nativeSrc": "10155:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10155:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10147:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10147:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10194:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10194:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10205:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10205:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10190:3:1"
																		},
																		"nativeSrc": "10190:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10190:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10213:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10213:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10219:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10219:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10209:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:1"
																		},
																		"nativeSrc": "10209:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10209:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10183:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:1"
																},
																"nativeSrc": "10183:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10183:47:1"
															},
															"nativeSrc": "10183:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10183:47:1"
														},
														{
															"nativeSrc": "10239:139:1",
															"nodeType": "YulAssignment",
															"src": "10239:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10373:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10373:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10247:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10247:124:1"
																},
																"nativeSrc": "10247:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10247:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10239:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10239:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9966:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10117:9:1",
														"nodeType": "YulTypedName",
														"src": "10117:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10132:4:1",
														"nodeType": "YulTypedName",
														"src": "10132:4:1",
														"type": ""
													}
												],
												"src": "9966:419:1"
											},
											{
												"body": {
													"nativeSrc": "10439:362:1",
													"nodeType": "YulBlock",
													"src": "10439:362:1",
													"statements": [
														{
															"nativeSrc": "10449:25:1",
															"nodeType": "YulAssignment",
															"src": "10449:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10472:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10472:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10454:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10454:17:1"
																},
																"nativeSrc": "10454:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10454:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10449:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10449:1:1"
																}
															]
														},
														{
															"nativeSrc": "10483:25:1",
															"nodeType": "YulAssignment",
															"src": "10483:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10506:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10506:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10488:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10488:17:1"
																},
																"nativeSrc": "10488:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10488:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10483:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10483:1:1"
																}
															]
														},
														{
															"nativeSrc": "10517:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10517:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10540:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10540:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10543:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10543:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10536:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10536:3:1"
																},
																"nativeSrc": "10536:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10536:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10521:11:1",
																	"nodeType": "YulTypedName",
																	"src": "10521:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10554:41:1",
															"nodeType": "YulAssignment",
															"src": "10554:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10583:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "10583:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10565:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10565:17:1"
																},
																"nativeSrc": "10565:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10565:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10554:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "10554:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10772:22:1",
																"nodeType": "YulBlock",
																"src": "10772:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10774:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10774:16:1"
																			},
																			"nativeSrc": "10774:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10774:18:1"
																		},
																		"nativeSrc": "10774:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10774:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10705:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "10705:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10698:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "10698:6:1"
																				},
																				"nativeSrc": "10698:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10698:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10728:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "10728:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10735:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "10735:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10744:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "10744:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10731:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10731:3:1"
																						},
																						"nativeSrc": "10731:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10731:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10725:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10725:2:1"
																				},
																				"nativeSrc": "10725:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10725:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10678:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10678:2:1"
																		},
																		"nativeSrc": "10678:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10678:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10658:6:1"
																},
																"nativeSrc": "10658:113:1",
																"nodeType": "YulFunctionCall",
																"src": "10658:113:1"
															},
															"nativeSrc": "10655:139:1",
															"nodeType": "YulIf",
															"src": "10655:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10391:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10422:1:1",
														"nodeType": "YulTypedName",
														"src": "10422:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10425:1:1",
														"nodeType": "YulTypedName",
														"src": "10425:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10431:7:1",
														"nodeType": "YulTypedName",
														"src": "10431:7:1",
														"type": ""
													}
												],
												"src": "10391:410:1"
											},
											{
												"body": {
													"nativeSrc": "10835:152:1",
													"nodeType": "YulBlock",
													"src": "10835:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10852:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10855:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10855:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10845:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10845:6:1"
																},
																"nativeSrc": "10845:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10845:88:1"
															},
															"nativeSrc": "10845:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10845:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10949:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10949:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10952:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10952:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10942:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:1"
																},
																"nativeSrc": "10942:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10942:15:1"
															},
															"nativeSrc": "10942:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10942:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10973:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10973:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10976:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10976:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:1"
																},
																"nativeSrc": "10966:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10966:15:1"
															},
															"nativeSrc": "10966:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10966:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10807:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10807:180:1"
											},
											{
												"body": {
													"nativeSrc": "11035:143:1",
													"nodeType": "YulBlock",
													"src": "11035:143:1",
													"statements": [
														{
															"nativeSrc": "11045:25:1",
															"nodeType": "YulAssignment",
															"src": "11045:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11068:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11068:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11050:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11050:17:1"
																},
																"nativeSrc": "11050:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11050:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11045:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11045:1:1"
																}
															]
														},
														{
															"nativeSrc": "11079:25:1",
															"nodeType": "YulAssignment",
															"src": "11079:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11102:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11102:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11084:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11084:17:1"
																},
																"nativeSrc": "11084:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11084:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11079:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11079:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11126:22:1",
																"nodeType": "YulBlock",
																"src": "11126:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11128:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11128:16:1"
																			},
																			"nativeSrc": "11128:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11128:18:1"
																		},
																		"nativeSrc": "11128:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11128:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11123:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11123:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11116:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:1"
																},
																"nativeSrc": "11116:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11116:9:1"
															},
															"nativeSrc": "11113:35:1",
															"nodeType": "YulIf",
															"src": "11113:35:1"
														},
														{
															"nativeSrc": "11158:14:1",
															"nodeType": "YulAssignment",
															"src": "11158:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11167:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11167:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11170:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11163:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:1"
																},
																"nativeSrc": "11163:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11163:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11158:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11158:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10993:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11024:1:1",
														"nodeType": "YulTypedName",
														"src": "11024:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11027:1:1",
														"nodeType": "YulTypedName",
														"src": "11027:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11033:1:1",
														"nodeType": "YulTypedName",
														"src": "11033:1:1",
														"type": ""
													}
												],
												"src": "10993:185:1"
											},
											{
												"body": {
													"nativeSrc": "11290:75:1",
													"nodeType": "YulBlock",
													"src": "11290:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11312:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11312:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11320:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11320:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11308:3:1"
																		},
																		"nativeSrc": "11308:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11308:14:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11324:33:1",
																		"nodeType": "YulLiteral",
																		"src": "11324:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11301:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11301:6:1"
																},
																"nativeSrc": "11301:57:1",
																"nodeType": "YulFunctionCall",
																"src": "11301:57:1"
															},
															"nativeSrc": "11301:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "11301:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11184:181:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11282:6:1",
														"nodeType": "YulTypedName",
														"src": "11282:6:1",
														"type": ""
													}
												],
												"src": "11184:181:1"
											},
											{
												"body": {
													"nativeSrc": "11517:220:1",
													"nodeType": "YulBlock",
													"src": "11517:220:1",
													"statements": [
														{
															"nativeSrc": "11527:74:1",
															"nodeType": "YulAssignment",
															"src": "11527:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11593:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11598:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11534:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11534:58:1"
																},
																"nativeSrc": "11534:67:1",
																"nodeType": "YulFunctionCall",
																"src": "11534:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11527:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11699:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11699:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11610:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "11610:88:1"
																},
																"nativeSrc": "11610:93:1",
																"nodeType": "YulFunctionCall",
																"src": "11610:93:1"
															},
															"nativeSrc": "11610:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "11610:93:1"
														},
														{
															"nativeSrc": "11712:19:1",
															"nodeType": "YulAssignment",
															"src": "11712:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11723:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11723:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11728:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11728:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11719:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:1"
																},
																"nativeSrc": "11719:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11719:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11712:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11712:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11371:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11505:3:1",
														"nodeType": "YulTypedName",
														"src": "11505:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11513:3:1",
														"nodeType": "YulTypedName",
														"src": "11513:3:1",
														"type": ""
													}
												],
												"src": "11371:366:1"
											},
											{
												"body": {
													"nativeSrc": "11914:248:1",
													"nodeType": "YulBlock",
													"src": "11914:248:1",
													"statements": [
														{
															"nativeSrc": "11924:26:1",
															"nodeType": "YulAssignment",
															"src": "11924:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11936:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11936:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11947:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11947:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:1"
																},
																"nativeSrc": "11932:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11932:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11924:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11924:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11971:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11971:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11982:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11982:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11967:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:1"
																		},
																		"nativeSrc": "11967:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11967:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11990:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11990:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11996:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:1"
																		},
																		"nativeSrc": "11986:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11986:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11960:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:1"
																},
																"nativeSrc": "11960:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11960:47:1"
															},
															"nativeSrc": "11960:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11960:47:1"
														},
														{
															"nativeSrc": "12016:139:1",
															"nodeType": "YulAssignment",
															"src": "12016:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12150:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12150:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12024:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "12024:124:1"
																},
																"nativeSrc": "12024:131:1",
																"nodeType": "YulFunctionCall",
																"src": "12024:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12016:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12016:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11743:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11894:9:1",
														"nodeType": "YulTypedName",
														"src": "11894:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11909:4:1",
														"nodeType": "YulTypedName",
														"src": "11909:4:1",
														"type": ""
													}
												],
												"src": "11743:419:1"
											},
											{
												"body": {
													"nativeSrc": "12274:62:1",
													"nodeType": "YulBlock",
													"src": "12274:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12296:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12296:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12304:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12304:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:1"
																		},
																		"nativeSrc": "12292:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12292:14:1"
																	},
																	{
																		"hexValue": "4275726e2076616c756520696e76616c6964",
																		"kind": "string",
																		"nativeSrc": "12308:20:1",
																		"nodeType": "YulLiteral",
																		"src": "12308:20:1",
																		"type": "",
																		"value": "Burn value invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12285:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12285:6:1"
																},
																"nativeSrc": "12285:44:1",
																"nodeType": "YulFunctionCall",
																"src": "12285:44:1"
															},
															"nativeSrc": "12285:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "12285:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
												"nativeSrc": "12168:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12266:6:1",
														"nodeType": "YulTypedName",
														"src": "12266:6:1",
														"type": ""
													}
												],
												"src": "12168:168:1"
											},
											{
												"body": {
													"nativeSrc": "12488:220:1",
													"nodeType": "YulBlock",
													"src": "12488:220:1",
													"statements": [
														{
															"nativeSrc": "12498:74:1",
															"nodeType": "YulAssignment",
															"src": "12498:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12564:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12564:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12569:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12569:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12505:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "12505:58:1"
																},
																"nativeSrc": "12505:67:1",
																"nodeType": "YulFunctionCall",
																"src": "12505:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12498:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12670:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12670:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																	"nativeSrc": "12581:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "12581:88:1"
																},
																"nativeSrc": "12581:93:1",
																"nodeType": "YulFunctionCall",
																"src": "12581:93:1"
															},
															"nativeSrc": "12581:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "12581:93:1"
														},
														{
															"nativeSrc": "12683:19:1",
															"nodeType": "YulAssignment",
															"src": "12683:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12694:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12694:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12699:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12699:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12690:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12690:3:1"
																},
																"nativeSrc": "12690:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12690:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12683:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12683:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12342:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12476:3:1",
														"nodeType": "YulTypedName",
														"src": "12476:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12484:3:1",
														"nodeType": "YulTypedName",
														"src": "12484:3:1",
														"type": ""
													}
												],
												"src": "12342:366:1"
											},
											{
												"body": {
													"nativeSrc": "12885:248:1",
													"nodeType": "YulBlock",
													"src": "12885:248:1",
													"statements": [
														{
															"nativeSrc": "12895:26:1",
															"nodeType": "YulAssignment",
															"src": "12895:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12907:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12907:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12918:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12918:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12903:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12903:3:1"
																},
																"nativeSrc": "12903:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12903:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12895:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12895:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12942:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12942:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12953:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12953:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12938:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12938:3:1"
																		},
																		"nativeSrc": "12938:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12938:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12961:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "12961:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12967:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12967:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12957:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12957:3:1"
																		},
																		"nativeSrc": "12957:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12957:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12931:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12931:6:1"
																},
																"nativeSrc": "12931:47:1",
																"nodeType": "YulFunctionCall",
																"src": "12931:47:1"
															},
															"nativeSrc": "12931:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "12931:47:1"
														},
														{
															"nativeSrc": "12987:139:1",
															"nodeType": "YulAssignment",
															"src": "12987:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13121:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13121:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12995:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "12995:124:1"
																},
																"nativeSrc": "12995:131:1",
																"nodeType": "YulFunctionCall",
																"src": "12995:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12987:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12987:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12714:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12865:9:1",
														"nodeType": "YulTypedName",
														"src": "12865:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12880:4:1",
														"nodeType": "YulTypedName",
														"src": "12880:4:1",
														"type": ""
													}
												],
												"src": "12714:419:1"
											},
											{
												"body": {
													"nativeSrc": "13293:288:1",
													"nodeType": "YulBlock",
													"src": "13293:288:1",
													"statements": [
														{
															"nativeSrc": "13303:26:1",
															"nodeType": "YulAssignment",
															"src": "13303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13315:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13315:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13326:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13326:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13311:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:1"
																},
																"nativeSrc": "13311:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13303:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13303:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13383:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13383:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13396:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13396:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13407:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13407:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13392:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13392:3:1"
																		},
																		"nativeSrc": "13392:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13392:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13339:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13339:43:1"
																},
																"nativeSrc": "13339:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13339:71:1"
															},
															"nativeSrc": "13339:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13339:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13464:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13464:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13488:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13473:3:1"
																		},
																		"nativeSrc": "13473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13473:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13420:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13420:43:1"
																},
																"nativeSrc": "13420:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13420:72:1"
															},
															"nativeSrc": "13420:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13420:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13546:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13546:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13559:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13559:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13570:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13570:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:1"
																		},
																		"nativeSrc": "13555:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13555:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13502:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13502:43:1"
																},
																"nativeSrc": "13502:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13502:72:1"
															},
															"nativeSrc": "13502:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13502:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13139:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13249:9:1",
														"nodeType": "YulTypedName",
														"src": "13249:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13261:6:1",
														"nodeType": "YulTypedName",
														"src": "13261:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13269:6:1",
														"nodeType": "YulTypedName",
														"src": "13269:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13277:6:1",
														"nodeType": "YulTypedName",
														"src": "13277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13288:4:1",
														"nodeType": "YulTypedName",
														"src": "13288:4:1",
														"type": ""
													}
												],
												"src": "13139:442:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity must be provided for a\")\n\n        mstore(add(memPtr, 32), \"t least 30 days to qualify for r\")\n\n        mstore(add(memPtr, 64), \"ewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 70)\n        store_literal_in_memory_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(memPtr) {\n\n        mstore(add(memPtr, 0), \"Burn value invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xAFE8289A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xAFE8289A EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xC8052107 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xFC6D483A EQ PUSH2 0x404 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x320 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2254B79C EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CC JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x8CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0x987 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0xDFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BA PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C7 DUP2 DUP6 DUP6 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x4EB PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x7 PUSH0 PUSH2 0x4F6 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x57E PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x5D8 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x661 JUMPI PUSH0 PUSH1 0x8 PUSH0 PUSH2 0x623 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x673 ADDRESS PUSH2 0x66D PUSH2 0x7F5 JUMP JUMPDEST DUP4 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x67B PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x688 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x695 DUP6 DUP3 DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x6A0 DUP6 DUP6 DUP6 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH6 0x48C27395000 DUP2 JUMP JUMPDEST PUSH2 0x6D7 PUSH2 0x6D1 PUSH2 0xF25 JUMP JUMPDEST DUP3 PUSH2 0x116E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E5 CALLER ADDRESS DUP4 PUSH2 0x1014 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x7D3 PUSH0 PUSH2 0x11ED JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7E7 DUP3 PUSH2 0x7E1 PUSH2 0xF25 JUMP JUMPDEST DUP4 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x7F1 DUP3 DUP3 PUSH2 0x116E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x82C SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x87A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x886 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8B7 PUSH2 0xF25 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C4 DUP2 DUP6 DUP6 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D7 PUSH2 0xF3E JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x8E3 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 PUSH2 0x93D PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x984 ADDRESS DUP3 PUSH2 0x12B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x98F PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAA7 CALLER PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH6 0x48C27395000 DUP2 PUSH2 0xAB9 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST GT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xB65 JUMPI PUSH2 0xB16 CALLER DUP3 PUSH2 0x12B0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH2 0xB70 ADDRESS CALLER DUP5 PUSH2 0x1014 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC4E JUMPI PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC91 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0xC9A PUSH2 0x10D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH3 0x278D00 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xD73 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xD47 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP PUSH6 0x48C27395000 DUP2 PUSH2 0xD59 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST GT PUSH2 0xD71 JUMPI DUP1 SWAP2 POP POP PUSH2 0xD77 JUMP JUMPDEST POP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE06 PUSH2 0xF3E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7F DUP2 PUSH2 0x11ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE8D ADDRESS CALLER DUP4 PUSH2 0x1014 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF39 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x132F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF46 PUSH2 0xF25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF64 PUSH2 0x7F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC3 JUMPI PUSH2 0xF87 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x186A0 DUP3 PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST DUP4 EQ PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C0 JUMPI PUSH2 0x10BF DUP6 DUP4 PUSH2 0x116E JUMP JUMPDEST JUMPDEST PUSH2 0x10CB DUP6 DUP6 DUP4 PUSH2 0x14FE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10E7 DUP5 DUP5 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1168 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1159 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1167 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x132F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D5 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E9 DUP3 PUSH0 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1320 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132B PUSH0 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x139F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1406 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14F8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x156E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1565 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D5 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E9 DUP4 DUP4 DUP4 PUSH2 0x15EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x163E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x170C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1753 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x179D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1849 DUP3 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x1853 DUP2 DUP6 PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP PUSH2 0x1863 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1821 JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x182F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188F DUP2 DUP5 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C4 DUP3 PUSH2 0x189B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP2 EQ PUSH2 0x18DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18EF DUP2 PUSH2 0x18CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195C DUP6 DUP3 DUP7 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197A DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1993 PUSH0 DUP4 ADD DUP5 PUSH2 0x1971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19A2 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19BB PUSH0 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A10 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A21 DUP7 DUP3 DUP8 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A32 DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A85 JUMPI PUSH2 0x1A84 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A92 DUP5 DUP3 DUP6 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x18BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH0 DUP4 ADD DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD9 JUMPI PUSH2 0x1AD8 PUSH2 0x1897 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE6 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AF7 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B45 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B92 PUSH1 0x14 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BFD DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C08 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C30 DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6971756964697479206D7573742062652070726F766964656420666F722061 PUSH0 DUP3 ADD MSTORE PUSH32 0x74206C65617374203330206461797320746F207175616C69667920666F722072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6577617264730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 PUSH1 0x46 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D06 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265776172642065786365656473206D617820737570706C7900000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D41 PUSH1 0x19 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4C DUP3 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6E DUP2 PUSH2 0x1D35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7F DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8A DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D98 DUP2 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1DAF JUMPI PUSH2 0x1DAE PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DED DUP3 PUSH2 0x18F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF8 DUP4 PUSH2 0x18F5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E08 JUMPI PUSH2 0x1E07 PUSH2 0x1DB6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E47 PUSH1 0x1F DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E52 DUP3 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E74 DUP2 PUSH2 0x1E3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4275726E2076616C756520696E76616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAF PUSH1 0x12 DUP4 PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBA DUP3 PUSH2 0x1E7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDC DUP2 PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EF6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A9B JUMP JUMPDEST PUSH2 0x1F03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1999 JUMP JUMPDEST PUSH2 0x1F10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1999 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xED 0xA7 CHAINID SWAP6 0xBC 0xE7 KECCAK256 SWAP3 PUSH27 0xC57D4CFB6212A2B1FAC79DAC9D6F1553FCAD9EFDBED064736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "28471:3600:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11844:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14063:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12914:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31693:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14809:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28551:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28820:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28620:63;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21628:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29598:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13069:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24448:101;;;:::i;:::-;;22031:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23793:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12046:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13380:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31471:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30123:987;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31116:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13616:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24698:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29826:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11844:89;11889:13;11921:5;11914:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11844:89;:::o;14063:186::-;14136:4;14152:13;14168:12;:10;:12::i;:::-;14152:28;;14190:31;14199:5;14206:7;14215:5;14190:8;:31::i;:::-;14238:4;14231:11;;;14063:186;;;;:::o;12914:97::-;12966:7;12992:12;;12985:19;;12914:97;:::o;31693:374::-;23686:13;:11;:13::i;:::-;27537:21:::1;:19;:21::i;:::-;31797:18:::2;:27;31816:7;:5;:7::i;:::-;31797:27;;;;;;;;;;;;;;;;31787:6;:37;;31779:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;31890:6;31859:18;:27;31878:7;:5;:7::i;:::-;31859:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;31941:1;31910:18;:27;31929:7;:5;:7::i;:::-;31910:27;;;;;;;;;;;;;;;;:32:::0;31906:103:::2;;31997:1;31958:27;:36;31986:7;:5;:7::i;:::-;31958:36;;;;;;;;;;;;;;;:40;;;;31906:103;32018:41;32036:4;32043:7;:5;:7::i;:::-;32052:6;32018:9;:41::i;:::-;27579:20:::1;:18;:20::i;:::-;31693:374:::0;:::o;14809:244::-;14896:4;14912:15;14930:12;:10;:12::i;:::-;14912:30;;14952:37;14968:4;14974:7;14983:5;14952:15;:37::i;:::-;14999:26;15009:4;15015:2;15019:5;14999:9;:26::i;:::-;15042:4;15035:11;;;14809:244;;;;;:::o;28551:63::-;28592:22;28551:63;:::o;28820:90::-;28878:5;28902:1;28895:8;;28820:90;:::o;28620:63::-;28657:26;28620:63;:::o;21628:87::-;21682:26;21688:12;:10;:12::i;:::-;21702:5;21682;:26::i;:::-;21628:87;:::o;29598:223::-;29653:44;29663:10;29683:4;29690:6;29653:9;:44::i;:::-;29741:6;29707:18;:30;29726:10;29707:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;29799:15;29757:27;:39;29785:10;29757:39;;;;;;;;;;;;;;;:57;;;;29598:223;:::o;13069:116::-;13134:7;13160:9;:18;13170:7;13160:18;;;;;;;;;;;;;;;;13153:25;;13069:116;;;:::o;24448:101::-;23686:13;:11;:13::i;:::-;24512:30:::1;24539:1;24512:18;:30::i;:::-;24448:101::o:0;22031:158::-;22106:45;22122:7;22131:12;:10;:12::i;:::-;22145:5;22106:15;:45::i;:::-;22161:21;22167:7;22176:5;22161;:21::i;:::-;22031:158;;:::o;23793:85::-;23839:7;23865:6;;;;;;;;;;;23858:13;;23793:85;:::o;12046:93::-;12093:13;12125:7;12118:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12046:93;:::o;13380:178::-;13449:4;13465:13;13481:12;:10;:12::i;:::-;13465:28;;13503:27;13513:5;13520:2;13524:5;13503:9;:27::i;:::-;13547:4;13540:11;;;13380:178;;;;:::o;31471:216::-;23686:13;:11;:13::i;:::-;31572:6:::1;31541:18;:27;31560:7;:5;:7::i;:::-;31541:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;31627:15;31588:27;:36;31616:7;:5;:7::i;:::-;31588:36;;;;;;;;;;;;;;;:54;;;;31652:28;31666:4;31673:6;31652:5;:28::i;:::-;31471:216:::0;:::o;30123:987::-;27537:21;:19;:21::i;:::-;30227:18:::1;:30;30246:10;30227:30;;;;;;;;;;;;;;;;30217:6;:40;;30209:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;30361:7;30319:27;:39;30347:10;30319:39;;;;;;;;;;;;;;;;:49;;;;:::i;:::-;30300:15;:68;;30292:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;30454:14;30471:27;30487:10;30471:15;:27::i;:::-;30454:44;;28657:26;30532:6;30516:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;30508:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;30669:1;30660:6;:10;30656:136;;;30686:25;30692:10;30704:6;30686:5;:25::i;:::-;30744:10;30730:33;;;30756:6;30730:33;;;;;;:::i;:::-;;;;;;;;30656:136;30802:44;30820:4;30827:10;30839:6;30802:9;:44::i;:::-;30890:6;30856:18;:30;30875:10;30856:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;30945:1;30911:18;:30;30930:10;30911:30;;;;;;;;;;;;;;;;:35:::0;30907:197:::1;;31004:1;30962:27;:39;30990:10;30962:39;;;;;;;;;;;;;;;:43;;;;30907:197;;;31078:15;31036:27;:39;31064:10;31036:39;;;;;;;;;;;;;;;:57;;;;30907:197;30199:911;27579:20:::0;:18;:20::i;:::-;30123:987;:::o;31116:350::-;31176:7;31254;31218:27;:33;31246:4;31218:33;;;;;;;;;;;;;;;;:43;;;;:::i;:::-;31199:15;:62;31195:247;;31277:14;31327:3;31322:1;31295:18;:24;31314:4;31295:24;;;;;;;;;;;;;;;;:28;;;;:::i;:::-;31294:36;;;;:::i;:::-;31277:53;;28657:26;31364:6;31348:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;31344:88;;31411:6;31404:13;;;;;31344:88;31263:179;31195:247;31458:1;31451:8;;31116:350;;;;:::o;13616:140::-;13696:7;13722:11;:18;13734:5;13722:18;;;;;;;;;;;;;;;:27;13741:7;13722:27;;;;;;;;;;;;;;;;13715:34;;13616:140;;;;:::o;24698:215::-;23686:13;:11;:13::i;:::-;24802:1:::1;24782:22;;:8;:22;;::::0;24778:91:::1;;24855:1;24827:31;;;;;;;;;;;:::i;:::-;;;;;;;;24778:91;24878:28;24897:8;24878:18;:28::i;:::-;24698:215:::0;:::o;29826:227::-;29885:44;29903:4;29910:10;29922:6;29885:9;:44::i;:::-;29973:6;29939:18;:30;29958:10;29939:30;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;30031:15;29989:27;:39;30017:10;29989:39;;;;;;;;;;;;;;;:57;;;;29826:227;:::o;4164:96::-;4217:7;4243:10;4236:17;;4164:96;:::o;18912:128::-;18996:37;19005:5;19012:7;19021:5;19028:4;18996:8;:37::i;:::-;18912:128;;;:::o;23951:162::-;24021:12;:10;:12::i;:::-;24010:23;;:7;:5;:7::i;:::-;:23;;;24006:101;;24083:12;:10;:12::i;:::-;24056:40;;;;;;;;;;;:::i;:::-;;;;;;;;24006:101;23951:162::o;27612:287::-;27035:1;27744:7;;:19;27736:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;27035:1;27874:7;:18;;;;27612:287::o;29046:388::-;29140:18;29170:6;29161;:15;;;;:::i;:::-;29140:36;;29183:18;29213:10;29204:6;:19;;;;:::i;:::-;29183:40;;29261:10;29248;:23;;;;:::i;:::-;29238:6;:33;29230:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;29319:10;29309:20;;:6;:20;;;29305:74;;29341:31;29353:6;29361:10;29341:11;:31::i;:::-;29305:74;29385:46;29401:6;29409:9;29420:10;29385:15;:46::i;:::-;29134:300;;29046:388;;;:::o;27905:209::-;26992:1;28085:7;:22;;;;27905:209::o;20586:477::-;20685:24;20712:25;20722:5;20729:7;20712:9;:25::i;:::-;20685:52;;20771:17;20751:16;:37;20747:310;;20827:5;20808:16;:24;20804:130;;;20886:7;20895:16;20913:5;20859:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;20804:130;20975:57;20984:5;20991:7;21019:5;21000:16;:24;21026:5;20975:8;:57::i;:::-;20747:310;20675:388;20586:477;;;:::o;18034:206::-;18123:1;18104:21;;:7;:21;;;18100:89;;18175:1;18148:30;;;;;;;;;;;:::i;:::-;;;;;;;;18100:89;18198:35;18206:7;18223:1;18227:5;18198:7;:35::i;:::-;18034:206;;:::o;25067:187::-;25140:16;25159:6;;;;;;;;;;;25140:25;;25184:8;25175:6;;:17;;;;;;;;;;;;;;;;;;25238:8;25207:40;;25228:8;25207:40;;;;;;;;;;;;25130:124;25067:187;:::o;17499:217::-;17597:1;17578:21;;:7;:21;;;17574:91;;17651:1;17622:32;;;;;;;;;;;:::i;:::-;;;;;;;;17574:91;17674:35;17690:1;17694:7;17703:5;17674:7;:35::i;:::-;17499:217;;:::o;19872:432::-;20001:1;19984:19;;:5;:19;;;19980:89;;20055:1;20026:32;;;;;;;;;;;:::i;:::-;;;;;;;;19980:89;20101:1;20082:21;;:7;:21;;;20078:90;;20154:1;20126:31;;;;;;;;;;;:::i;:::-;;;;;;;;20078:90;20207:5;20177:11;:18;20189:5;20177:18;;;;;;;;;;;;;;;:27;20196:7;20177:27;;;;;;;;;;;;;;;:35;;;;20226:9;20222:76;;;20272:7;20256:31;;20265:5;20256:31;;;20281:5;20256:31;;;;;;:::i;:::-;;;;;;;;20222:76;19872:432;;;;:::o;15426:308::-;15533:1;15517:18;;:4;:18;;;15513:86;;15585:1;15558:30;;;;;;;;;;;:::i;:::-;;;;;;;;15513:86;15626:1;15612:16;;:2;:16;;;15608:86;;15680:1;15651:32;;;;;;;;;;;:::i;:::-;;;;;;;;15608:86;15703:24;15711:4;15717:2;15721:5;15703:7;:24::i;:::-;15426:308;;;:::o;16049:1107::-;16154:1;16138:18;;:4;:18;;;16134:540;;16290:5;16274:12;;:21;;;;;;;:::i;:::-;;;;;;;;16134:540;;;16326:19;16348:9;:15;16358:4;16348:15;;;;;;;;;;;;;;;;16326:37;;16395:5;16381:11;:19;16377:115;;;16452:4;16458:11;16471:5;16427:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;16377:115;16644:5;16630:11;:19;16612:9;:15;16622:4;16612:15;;;;;;;;;;;;;;;:37;;;;16312:362;16134:540;16702:1;16688:16;;:2;:16;;;16684:425;;16867:5;16851:12;;:21;;;;;;;;;;;16684:425;;;17079:5;17062:9;:13;17072:2;17062:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;16684:425;17139:2;17124:25;;17133:4;17124:25;;;17143:5;17124:25;;;;;;:::i;:::-;;;;;;;;16049:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:170::-;6900:22;6896:1;6888:6;6884:14;6877:46;6760:170;:::o;6936:366::-;7078:3;7099:67;7163:2;7158:3;7099:67;:::i;:::-;7092:74;;7175:93;7264:3;7175:93;:::i;:::-;7293:2;7288:3;7284:12;7277:19;;6936:366;;;:::o;7308:419::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7561:9;7555:4;7551:20;7547:1;7536:9;7532:17;7525:47;7589:131;7715:4;7589:131;:::i;:::-;7581:139;;7308:419;;;:::o;7733:180::-;7781:77;7778:1;7771:88;7878:4;7875:1;7868:15;7902:4;7899:1;7892:15;7919:194;7959:4;7979:20;7997:1;7979:20;:::i;:::-;7974:25;;8013:20;8031:1;8013:20;:::i;:::-;8008:25;;8057:1;8054;8050:9;8042:17;;8081:1;8075:4;8072:11;8069:37;;;8086:18;;:::i;:::-;8069:37;7919:194;;;;:::o;8119:191::-;8159:3;8178:20;8196:1;8178:20;:::i;:::-;8173:25;;8212:20;8230:1;8212:20;:::i;:::-;8207:25;;8255:1;8252;8248:9;8241:16;;8276:3;8273:1;8270:10;8267:36;;;8283:18;;:::i;:::-;8267:36;8119:191;;;;:::o;8316:294::-;8456:34;8452:1;8444:6;8440:14;8433:58;8525:34;8520:2;8512:6;8508:15;8501:59;8594:8;8589:2;8581:6;8577:15;8570:33;8316:294;:::o;8616:366::-;8758:3;8779:67;8843:2;8838:3;8779:67;:::i;:::-;8772:74;;8855:93;8944:3;8855:93;:::i;:::-;8973:2;8968:3;8964:12;8957:19;;8616:366;;;:::o;8988:419::-;9154:4;9192:2;9181:9;9177:18;9169:26;;9241:9;9235:4;9231:20;9227:1;9216:9;9212:17;9205:47;9269:131;9395:4;9269:131;:::i;:::-;9261:139;;8988:419;;;:::o;9413:175::-;9553:27;9549:1;9541:6;9537:14;9530:51;9413:175;:::o;9594:366::-;9736:3;9757:67;9821:2;9816:3;9757:67;:::i;:::-;9750:74;;9833:93;9922:3;9833:93;:::i;:::-;9951:2;9946:3;9942:12;9935:19;;9594:366;;;:::o;9966:419::-;10132:4;10170:2;10159:9;10155:18;10147:26;;10219:9;10213:4;10209:20;10205:1;10194:9;10190:17;10183:47;10247:131;10373:4;10247:131;:::i;:::-;10239:139;;9966:419;;;:::o;10391:410::-;10431:7;10454:20;10472:1;10454:20;:::i;:::-;10449:25;;10488:20;10506:1;10488:20;:::i;:::-;10483:25;;10543:1;10540;10536:9;10565:30;10583:11;10565:30;:::i;:::-;10554:41;;10744:1;10735:7;10731:15;10728:1;10725:22;10705:1;10698:9;10678:83;10655:139;;10774:18;;:::i;:::-;10655:139;10439:362;10391:410;;;;:::o;10807:180::-;10855:77;10852:1;10845:88;10952:4;10949:1;10942:15;10976:4;10973:1;10966:15;10993:185;11033:1;11050:20;11068:1;11050:20;:::i;:::-;11045:25;;11084:20;11102:1;11084:20;:::i;:::-;11079:25;;11123:1;11113:35;;11128:18;;:::i;:::-;11113:35;11170:1;11167;11163:9;11158:14;;10993:185;;;;:::o;11184:181::-;11324:33;11320:1;11312:6;11308:14;11301:57;11184:181;:::o;11371:366::-;11513:3;11534:67;11598:2;11593:3;11534:67;:::i;:::-;11527:74;;11610:93;11699:3;11610:93;:::i;:::-;11728:2;11723:3;11719:12;11712:19;;11371:366;;;:::o;11743:419::-;11909:4;11947:2;11936:9;11932:18;11924:26;;11996:9;11990:4;11986:20;11982:1;11971:9;11967:17;11960:47;12024:131;12150:4;12024:131;:::i;:::-;12016:139;;11743:419;;;:::o;12168:168::-;12308:20;12304:1;12296:6;12292:14;12285:44;12168:168;:::o;12342:366::-;12484:3;12505:67;12569:2;12564:3;12505:67;:::i;:::-;12498:74;;12581:93;12670:3;12581:93;:::i;:::-;12699:2;12694:3;12690:12;12683:19;;12342:366;;;:::o;12714:419::-;12880:4;12918:2;12907:9;12903:18;12895:26;;12967:9;12961:4;12957:20;12953:1;12942:9;12938:17;12931:47;12995:131;13121:4;12995:131;:::i;:::-;12987:139;;12714:419;;;:::o;13139:442::-;13288:4;13326:2;13315:9;13311:18;13303:26;;13339:71;13407:1;13396:9;13392:17;13383:6;13339:71;:::i;:::-;13420:72;13488:2;13477:9;13473:18;13464:6;13420:72;:::i;:::-;13502;13570:2;13559:9;13555:18;13546:6;13502:72;:::i;:::-;13139:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1602800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INITIAL_SUPPLY()": "348",
								"MAX_SUPPLY()": "392",
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"calculateReward(address)": "infinite",
								"decimals()": "383",
								"name()": "infinite",
								"owner()": "2582",
								"ownerAddLiquidity(uint256)": "infinite",
								"ownerRemoveLiquidity(uint256)": "infinite",
								"removeLiquidityAndClaimRewards(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"undoAddLiquidity(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28924,
									"end": 29041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28979,
									"end": 28989,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "5477656574204F6E204261736500000000000000000000000000000000000000"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "PUSH",
									"source": 0,
									"value": "5477656574730000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11740,
									"end": 11745,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11737,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11732,
									"end": 11745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11745,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11765,
									"end": 11772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11762,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 11755,
									"end": 11772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11755,
									"end": 11772,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11666,
									"end": 11779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23452,
									"end": 23453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23428,
									"end": 23454,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23428,
									"end": 23454,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23428,
									"end": 23440,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23428,
									"end": 23454,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23428,
									"end": 23454,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23428,
									"end": 23454,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23424,
									"end": 23519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23424,
									"end": 23519,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23505,
									"end": 23506,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23477,
									"end": 23508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23477,
									"end": 23508,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23424,
									"end": 23519,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23424,
									"end": 23519,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23528,
									"end": 23560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23547,
									"end": 23559,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23528,
									"end": 23546,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23528,
									"end": 23546,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23528,
									"end": 23546,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23528,
									"end": 23560,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23528,
									"end": 23560,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23528,
									"end": 23560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23528,
									"end": 23560,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23528,
									"end": 23560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23380,
									"end": 23567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26992,
									"end": 26993,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27097,
									"end": 27104,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 27097,
									"end": 27119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27097,
									"end": 27119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27097,
									"end": 27119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27097,
									"end": 27119,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29001,
									"end": 29034,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29007,
									"end": 29017,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 28592,
									"end": 28614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 29001,
									"end": 29006,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 29001,
									"end": 29006,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29001,
									"end": 29006,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29001,
									"end": 29034,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29001,
									"end": 29034,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 29001,
									"end": 29034,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29001,
									"end": 29034,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29001,
									"end": 29034,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25067,
									"end": 25254,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 25067,
									"end": 25254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25140,
									"end": 25156,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25159,
									"end": 25165,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25140,
									"end": 25165,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25140,
									"end": 25165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25184,
									"end": 25192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25181,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25175,
									"end": 25181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25175,
									"end": 25192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25238,
									"end": 25246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25228,
									"end": 25236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25207,
									"end": 25247,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 25130,
									"end": 25254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25067,
									"end": 25254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25067,
									"end": 25254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17499,
									"end": 17716,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 17499,
									"end": 17716,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17597,
									"end": 17598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17578,
									"end": 17599,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17578,
									"end": 17599,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17578,
									"end": 17585,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17578,
									"end": 17599,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17578,
									"end": 17599,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17578,
									"end": 17599,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17574,
									"end": 17665,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17574,
									"end": 17665,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17651,
									"end": 17652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 17622,
									"end": 17654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17622,
									"end": 17654,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17574,
									"end": 17665,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 17574,
									"end": 17665,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17674,
									"end": 17709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17690,
									"end": 17691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17694,
									"end": 17701,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17703,
									"end": 17708,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17674,
									"end": 17681,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17674,
									"end": 17681,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17674,
									"end": 17681,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 17674,
									"end": 17709,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17674,
									"end": 17709,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 17674,
									"end": 17709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17674,
									"end": 17709,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17674,
									"end": 17709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17499,
									"end": 17716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17499,
									"end": 17716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17499,
									"end": 17716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16049,
									"end": 17156,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16049,
									"end": 17156,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16154,
									"end": 16155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16138,
									"end": 16156,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16138,
									"end": 16156,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16138,
									"end": 16142,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16138,
									"end": 16156,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16138,
									"end": 16156,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16138,
									"end": 16156,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16290,
									"end": 16295,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16286,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16274,
									"end": 16286,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 16274,
									"end": 16295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16274,
									"end": 16295,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16326,
									"end": 16345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16348,
									"end": 16357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16358,
									"end": 16362,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16348,
									"end": 16363,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16326,
									"end": 16363,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16326,
									"end": 16363,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16395,
									"end": 16400,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16381,
									"end": 16392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16381,
									"end": 16400,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 16377,
									"end": 16492,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16377,
									"end": 16492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16377,
									"end": 16492,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16452,
									"end": 16456,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16458,
									"end": 16469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16471,
									"end": 16476,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 16427,
									"end": 16477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16427,
									"end": 16477,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16377,
									"end": 16492,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 16377,
									"end": 16492,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16644,
									"end": 16649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16630,
									"end": 16641,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16630,
									"end": 16649,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16621,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16622,
									"end": 16626,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16612,
									"end": 16627,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16612,
									"end": 16649,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16312,
									"end": 16674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 16134,
									"end": 16674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16702,
									"end": 16703,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16688,
									"end": 16704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16688,
									"end": 16704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16688,
									"end": 16690,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16688,
									"end": 16704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16688,
									"end": 16704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16688,
									"end": 16704,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16867,
									"end": 16872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16863,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 16851,
									"end": 16863,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16851,
									"end": 16872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17079,
									"end": 17084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17072,
									"end": 17074,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17062,
									"end": 17084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 16684,
									"end": 17109,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17139,
									"end": 17141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17137,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17143,
									"end": 17148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 17124,
									"end": 17149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17124,
									"end": 17149,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16049,
									"end": 17156,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16049,
									"end": 17156,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16049,
									"end": 17156,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16049,
									"end": 17156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28471,
									"end": 32071,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081eda74695bce720927ac57d4cfb6212a2b1fac79dac9d6f1553fcad9efdbed064736f6c634300081a0033",
									".code": [
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "AFE8289A"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "AFE8289A"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "C8052107"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "D82E3962"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "FC6D483A"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "51C6590A"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "2254B79C"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28471,
											"end": 32071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11844,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11844,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14063,
											"end": 14249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14063,
											"end": 14249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14063,
											"end": 14249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12914,
											"end": 13011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12914,
											"end": 13011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31693,
											"end": 32067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31693,
											"end": 32067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14809,
											"end": 15053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14809,
											"end": 15053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14809,
											"end": 15053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28551,
											"end": 28614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28551,
											"end": 28614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28820,
											"end": 28910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28820,
											"end": 28910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28620,
											"end": 28683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28620,
											"end": 28683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 21628,
											"end": 21715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21628,
											"end": 21715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29598,
											"end": 29821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29598,
											"end": 29821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13069,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13069,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13069,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24448,
											"end": 24549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22031,
											"end": 22189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22031,
											"end": 22189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23793,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23793,
											"end": 23878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12046,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12046,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13380,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13380,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13380,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31471,
											"end": 31687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31471,
											"end": 31687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30123,
											"end": 31110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30123,
											"end": 31110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31116,
											"end": 31466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 31116,
											"end": 31466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31116,
											"end": 31466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13616,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13616,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 13616,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24698,
											"end": 24913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24698,
											"end": 24913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29826,
											"end": 30053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29826,
											"end": 30053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11889,
											"end": 11902,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11921,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11914,
											"end": 11926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 11914,
											"end": 11926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11914,
											"end": 11926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11844,
											"end": 11933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14136,
											"end": 14140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14168,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14168,
											"end": 14180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14180,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14168,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 14180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 14180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14199,
											"end": 14204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14213,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 14190,
											"end": 14221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14221,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14190,
											"end": 14221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14238,
											"end": 14242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14231,
											"end": 14242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14231,
											"end": 14242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14063,
											"end": 14249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12966,
											"end": 12973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12992,
											"end": 13004,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12992,
											"end": 13004,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12985,
											"end": 13004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12985,
											"end": 13004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 13011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23686,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23686,
											"end": 23699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 27558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27537,
											"end": 27556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27537,
											"end": 27558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 27558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27537,
											"end": 27558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31816,
											"end": 31823,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31816,
											"end": 31821,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31816,
											"end": 31823,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31816,
											"end": 31823,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31816,
											"end": 31823,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31824,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31787,
											"end": 31793,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31787,
											"end": 31824,
											"modifierDepth": 2,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31787,
											"end": 31824,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 31779,
											"end": 31849,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 31779,
											"end": 31849,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31890,
											"end": 31896,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31878,
											"end": 31885,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31878,
											"end": 31883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31878,
											"end": 31885,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31878,
											"end": 31885,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31878,
											"end": 31885,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31859,
											"end": 31896,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31859,
											"end": 31896,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31941,
											"end": 31942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31910,
											"end": 31928,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31929,
											"end": 31936,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31929,
											"end": 31934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31929,
											"end": 31936,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31929,
											"end": 31936,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31929,
											"end": 31936,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31937,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31910,
											"end": 31942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 32009,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31906,
											"end": 32009,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31997,
											"end": 31998,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31958,
											"end": 31985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31986,
											"end": 31993,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31986,
											"end": 31991,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31986,
											"end": 31993,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31986,
											"end": 31993,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31986,
											"end": 31993,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31958,
											"end": 31994,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31998,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31998,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31998,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31958,
											"end": 31998,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 32009,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31906,
											"end": 32009,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32018,
											"end": 32059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32036,
											"end": 32040,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32050,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32043,
											"end": 32048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 32043,
											"end": 32050,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32050,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32043,
											"end": 32050,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32052,
											"end": 32058,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32018,
											"end": 32027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32018,
											"end": 32059,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32018,
											"end": 32059,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32018,
											"end": 32059,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27579,
											"end": 27597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 27579,
											"end": 27599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27579,
											"end": 27599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 32067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14912,
											"end": 14927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14930,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14930,
											"end": 14942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14942,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14930,
											"end": 14942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14912,
											"end": 14942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14912,
											"end": 14942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14968,
											"end": 14972,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14974,
											"end": 14981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14983,
											"end": 14988,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14952,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14952,
											"end": 14989,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14952,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 15009,
											"end": 15013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15015,
											"end": 15017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14999,
											"end": 15025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14999,
											"end": 15025,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 14999,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15042,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15035,
											"end": 15046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14809,
											"end": 15053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28592,
											"end": 28614,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 28551,
											"end": 28614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28551,
											"end": 28614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 28883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28902,
											"end": 28903,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28895,
											"end": 28903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 28910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28657,
											"end": 28683,
											"name": "PUSH",
											"source": 0,
											"value": "48C27395000"
										},
										{
											"begin": 28620,
											"end": 28683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28620,
											"end": 28683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21688,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21688,
											"end": 21700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 21682,
											"end": 21708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21708,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21682,
											"end": 21708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21628,
											"end": 21715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29653,
											"end": 29697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29663,
											"end": 29673,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29683,
											"end": 29687,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29653,
											"end": 29662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29653,
											"end": 29697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29653,
											"end": 29697,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29653,
											"end": 29697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29741,
											"end": 29747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29726,
											"end": 29736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29707,
											"end": 29747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29707,
											"end": 29747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29799,
											"end": 29814,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29784,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29785,
											"end": 29795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29757,
											"end": 29796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29814,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29757,
											"end": 29814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29598,
											"end": 29821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13134,
											"end": 13141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13153,
											"end": 13178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24448,
											"end": 24549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23686,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23686,
											"end": 23699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24512,
											"end": 24542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24539,
											"end": 24540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24512,
											"end": 24542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24512,
											"end": 24542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24512,
											"end": 24542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22106,
											"end": 22151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 22122,
											"end": 22129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22131,
											"end": 22143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 22131,
											"end": 22141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 22131,
											"end": 22143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22131,
											"end": 22143,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 22131,
											"end": 22143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22145,
											"end": 22150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22106,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 22106,
											"end": 22151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22106,
											"end": 22151,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 22106,
											"end": 22151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22161,
											"end": 22182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 22167,
											"end": 22174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22161,
											"end": 22166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 22161,
											"end": 22182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22161,
											"end": 22182,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 22161,
											"end": 22182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22031,
											"end": 22189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23839,
											"end": 23846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23858,
											"end": 23871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23858,
											"end": 23871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23793,
											"end": 23878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12106,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12125,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12118,
											"end": 12132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12118,
											"end": 12132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12118,
											"end": 12132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12046,
											"end": 12139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13449,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13465,
											"end": 13478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 13481,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 13481,
											"end": 13493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13465,
											"end": 13493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13465,
											"end": 13493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13513,
											"end": 13518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13524,
											"end": 13529,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13503,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13503,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13547,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13540,
											"end": 13551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13540,
											"end": 13551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13540,
											"end": 13551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 23686,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23686,
											"end": 23699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31560,
											"end": 31567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 31560,
											"end": 31565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31560,
											"end": 31567,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31560,
											"end": 31567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 31560,
											"end": 31567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31541,
											"end": 31578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31541,
											"end": 31578,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31627,
											"end": 31642,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31616,
											"end": 31623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 31616,
											"end": 31621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31616,
											"end": 31623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31616,
											"end": 31623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 31616,
											"end": 31623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31588,
											"end": 31624,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31642,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31642,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31588,
											"end": 31642,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31666,
											"end": 31670,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31679,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 31652,
											"end": 31680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31652,
											"end": 31680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31652,
											"end": 31680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31471,
											"end": 31687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 27558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27537,
											"end": 27556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27537,
											"end": 27558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27537,
											"end": 27558,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 27537,
											"end": 27558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30246,
											"end": 30256,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30227,
											"end": 30257,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30257,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30257,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30209,
											"end": 30282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 30209,
											"end": 30282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30361,
											"end": 30368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 30319,
											"end": 30346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30347,
											"end": 30357,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30358,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30319,
											"end": 30368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 30319,
											"end": 30368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30300,
											"end": 30315,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30300,
											"end": 30368,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30300,
											"end": 30368,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 30292,
											"end": 30443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 30292,
											"end": 30443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30454,
											"end": 30468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30471,
											"end": 30498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 30487,
											"end": 30497,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30471,
											"end": 30486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 30471,
											"end": 30498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30471,
											"end": 30498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 30471,
											"end": 30498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30454,
											"end": 30498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30454,
											"end": 30498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28657,
											"end": 28683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "48C27395000"
										},
										{
											"begin": 30532,
											"end": 30538,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 30516,
											"end": 30527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30516,
											"end": 30529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 30516,
											"end": 30529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 30516,
											"end": 30538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 30516,
											"end": 30538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30552,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30516,
											"end": 30552,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 30508,
											"end": 30582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 30508,
											"end": 30582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30660,
											"end": 30666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30660,
											"end": 30670,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30656,
											"end": 30792,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30656,
											"end": 30792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30656,
											"end": 30792,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30686,
											"end": 30711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 30692,
											"end": 30702,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30704,
											"end": 30710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30686,
											"end": 30691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 30686,
											"end": 30711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30686,
											"end": 30711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 30686,
											"end": 30711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30754,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 30756,
											"end": 30762,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30730,
											"end": 30763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30730,
											"end": 30763,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 30656,
											"end": 30792,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 30656,
											"end": 30792,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30820,
											"end": 30824,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30827,
											"end": 30837,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30839,
											"end": 30845,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30802,
											"end": 30846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 30802,
											"end": 30846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30890,
											"end": 30896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30875,
											"end": 30885,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30856,
											"end": 30896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30856,
											"end": 30896,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30945,
											"end": 30946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30911,
											"end": 30929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30930,
											"end": 30940,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30941,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30962,
											"end": 30989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30990,
											"end": 31000,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30962,
											"end": 31001,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31005,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30962,
											"end": 31005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31078,
											"end": 31093,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31064,
											"end": 31074,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31036,
											"end": 31075,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31093,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 30907,
											"end": 31104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30199,
											"end": 31110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27579,
											"end": 27597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 27579,
											"end": 27599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27599,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 27579,
											"end": 27599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30123,
											"end": 31110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31176,
											"end": 31183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31254,
											"end": 31261,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 31218,
											"end": 31245,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31246,
											"end": 31250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31218,
											"end": 31261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 31218,
											"end": 31261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31199,
											"end": 31214,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31199,
											"end": 31261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31195,
											"end": 31442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 31195,
											"end": 31442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31327,
											"end": 31330,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31322,
											"end": 31323,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31295,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31314,
											"end": 31318,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31295,
											"end": 31323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 31294,
											"end": 31330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 31294,
											"end": 31330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28657,
											"end": 28683,
											"name": "PUSH",
											"source": 0,
											"value": "48C27395000"
										},
										{
											"begin": 31364,
											"end": 31370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 31348,
											"end": 31359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31348,
											"end": 31361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31361,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 31348,
											"end": 31361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31348,
											"end": 31370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 31348,
											"end": 31370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31348,
											"end": 31384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31344,
											"end": 31432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 31344,
											"end": 31432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31411,
											"end": 31417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31404,
											"end": 31417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31404,
											"end": 31417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31404,
											"end": 31417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31404,
											"end": 31417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 31404,
											"end": 31417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31344,
											"end": 31432,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 31344,
											"end": 31432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31263,
											"end": 31442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31195,
											"end": 31442,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 31195,
											"end": 31442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31451,
											"end": 31459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31451,
											"end": 31459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31116,
											"end": 31466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13696,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13740,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13741,
											"end": 13748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13722,
											"end": 13749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13616,
											"end": 13756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 23686,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23686,
											"end": 23699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 23686,
											"end": 23699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24802,
											"end": 24803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24782,
											"end": 24804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24782,
											"end": 24804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24782,
											"end": 24804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24782,
											"end": 24804,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 24778,
											"end": 24869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24855,
											"end": 24856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24827,
											"end": 24858,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24827,
											"end": 24858,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 24778,
											"end": 24869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24897,
											"end": 24905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24878,
											"end": 24906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24878,
											"end": 24906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 24878,
											"end": 24906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24698,
											"end": 24913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29903,
											"end": 29907,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29910,
											"end": 29920,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29922,
											"end": 29928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29885,
											"end": 29929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29885,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 29979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29957,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29958,
											"end": 29968,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29939,
											"end": 29979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29939,
											"end": 29979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30031,
											"end": 30046,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30016,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30017,
											"end": 30027,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29989,
											"end": 30028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30046,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29989,
											"end": 30046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29826,
											"end": 30053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4260,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4164,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4253,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4164,
											"end": 4260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19040,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 18912,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18996,
											"end": 19033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 19005,
											"end": 19010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19021,
											"end": 19026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19028,
											"end": 19032,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18996,
											"end": 19004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 18996,
											"end": 19033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18996,
											"end": 19033,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 18996,
											"end": 19033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 19040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 23951,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 24021,
											"end": 24031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24021,
											"end": 24033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24033,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 24021,
											"end": 24033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24010,
											"end": 24033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24010,
											"end": 24017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24017,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 24010,
											"end": 24017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24010,
											"end": 24033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24006,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 24006,
											"end": 24107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24083,
											"end": 24095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24083,
											"end": 24093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24083,
											"end": 24095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24083,
											"end": 24095,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 24083,
											"end": 24095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24056,
											"end": 24096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24006,
											"end": 24107,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 24006,
											"end": 24107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27612,
											"end": 27899,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27612,
											"end": 27899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27744,
											"end": 27751,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27744,
											"end": 27751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27744,
											"end": 27763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 27736,
											"end": 27799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27736,
											"end": 27799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27035,
											"end": 27036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27874,
											"end": 27881,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27874,
											"end": 27892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27874,
											"end": 27892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27874,
											"end": 27892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27874,
											"end": 27892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27612,
											"end": 27899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29434,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29046,
											"end": 29434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29140,
											"end": 29158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29170,
											"end": 29176,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 29161,
											"end": 29167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 29161,
											"end": 29176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 29161,
											"end": 29176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29140,
											"end": 29176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29140,
											"end": 29176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29183,
											"end": 29201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29213,
											"end": 29223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29204,
											"end": 29223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 29204,
											"end": 29223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29183,
											"end": 29223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29183,
											"end": 29223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29261,
											"end": 29271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29248,
											"end": 29271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 29248,
											"end": 29271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29238,
											"end": 29244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29238,
											"end": 29271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 29230,
											"end": 29294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 29230,
											"end": 29294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 29329,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29309,
											"end": 29329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29309,
											"end": 29329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29305,
											"end": 29379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 29305,
											"end": 29379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29341,
											"end": 29372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 29353,
											"end": 29359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29361,
											"end": 29371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29341,
											"end": 29352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 29341,
											"end": 29372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29341,
											"end": 29372,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 29341,
											"end": 29372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29305,
											"end": 29379,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 29305,
											"end": 29379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 29401,
											"end": 29407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29409,
											"end": 29418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29420,
											"end": 29430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 29385,
											"end": 29431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29385,
											"end": 29431,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 29385,
											"end": 29431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29134,
											"end": 29434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29134,
											"end": 29434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29046,
											"end": 29434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27905,
											"end": 28114,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 27905,
											"end": 28114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26992,
											"end": 26993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28085,
											"end": 28092,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28085,
											"end": 28107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28085,
											"end": 28107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28085,
											"end": 28107,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28085,
											"end": 28107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27905,
											"end": 28114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 21063,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 20586,
											"end": 21063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20685,
											"end": 20709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20712,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20722,
											"end": 20727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20729,
											"end": 20736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 20712,
											"end": 20737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20712,
											"end": 20737,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20712,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20685,
											"end": 20737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20685,
											"end": 20737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20771,
											"end": 20788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20751,
											"end": 20767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20751,
											"end": 20788,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 21057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20747,
											"end": 21057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20827,
											"end": 20832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20808,
											"end": 20832,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20804,
											"end": 20934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20804,
											"end": 20934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20804,
											"end": 20934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 20911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20913,
											"end": 20918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20859,
											"end": 20919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20804,
											"end": 20934,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20804,
											"end": 20934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20975,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20984,
											"end": 20989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20991,
											"end": 20998,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21019,
											"end": 21024,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21000,
											"end": 21016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21000,
											"end": 21024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20975,
											"end": 20983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20975,
											"end": 21032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20975,
											"end": 21032,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20975,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20747,
											"end": 21057,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 20747,
											"end": 21057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20675,
											"end": 21063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 21063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 21063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 21063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 21063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18034,
											"end": 18240,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 18034,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18123,
											"end": 18124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18104,
											"end": 18125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18104,
											"end": 18125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18104,
											"end": 18125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18104,
											"end": 18125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 18100,
											"end": 18189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18148,
											"end": 18178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18148,
											"end": 18178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18189,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 18100,
											"end": 18189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18198,
											"end": 18233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 18206,
											"end": 18213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18227,
											"end": 18232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18198,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 18198,
											"end": 18233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18198,
											"end": 18233,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 18198,
											"end": 18233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18034,
											"end": 18240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18034,
											"end": 18240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18034,
											"end": 18240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25254,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 25067,
											"end": 25254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25140,
											"end": 25156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25140,
											"end": 25165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25140,
											"end": 25165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25184,
											"end": 25192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25181,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25175,
											"end": 25181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25175,
											"end": 25192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25238,
											"end": 25246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25228,
											"end": 25236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25247,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25130,
											"end": 25254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25067,
											"end": 25254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17716,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17499,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17597,
											"end": 17598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17578,
											"end": 17599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17578,
											"end": 17585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17578,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17578,
											"end": 17599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17578,
											"end": 17599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17574,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17574,
											"end": 17665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17651,
											"end": 17652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17622,
											"end": 17654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17622,
											"end": 17654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17574,
											"end": 17665,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17574,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17674,
											"end": 17709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17690,
											"end": 17691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17694,
											"end": 17701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17703,
											"end": 17708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17674,
											"end": 17681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 17674,
											"end": 17709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17674,
											"end": 17709,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17674,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17499,
											"end": 17716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20001,
											"end": 20002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 19989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 20003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 19980,
											"end": 20069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20055,
											"end": 20056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20026,
											"end": 20058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 20069,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 19980,
											"end": 20069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20101,
											"end": 20102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20082,
											"end": 20089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20078,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20078,
											"end": 20168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20154,
											"end": 20155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20126,
											"end": 20157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20126,
											"end": 20157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20078,
											"end": 20168,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 20078,
											"end": 20168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20207,
											"end": 20212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20188,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20189,
											"end": 20194,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20177,
											"end": 20195,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20196,
											"end": 20203,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20177,
											"end": 20204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20212,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20177,
											"end": 20212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20226,
											"end": 20235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20222,
											"end": 20298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20222,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20222,
											"end": 20298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20272,
											"end": 20279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20265,
											"end": 20270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20281,
											"end": 20286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20256,
											"end": 20287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20256,
											"end": 20287,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20222,
											"end": 20298,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 20222,
											"end": 20298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 20304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15426,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15533,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15517,
											"end": 15535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15517,
											"end": 15535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15517,
											"end": 15535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15513,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 15513,
											"end": 15599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15558,
											"end": 15588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15513,
											"end": 15599,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 15513,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15612,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15612,
											"end": 15628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15612,
											"end": 15614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15612,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15612,
											"end": 15628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15612,
											"end": 15628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 15608,
											"end": 15694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15680,
											"end": 15681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15651,
											"end": 15683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15651,
											"end": 15683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15694,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 15608,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15703,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 15711,
											"end": 15715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15721,
											"end": 15726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15703,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 15703,
											"end": 15727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15703,
											"end": 15727,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 15703,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16049,
											"end": 17156,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 16049,
											"end": 17156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16154,
											"end": 16155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16138,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16138,
											"end": 16156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16138,
											"end": 16156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16156,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16274,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16274,
											"end": 16295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16274,
											"end": 16295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16348,
											"end": 16357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16358,
											"end": 16362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16348,
											"end": 16363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16395,
											"end": 16400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16381,
											"end": 16392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16381,
											"end": 16400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 16377,
											"end": 16492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16452,
											"end": 16456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16458,
											"end": 16469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16476,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 16427,
											"end": 16477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16377,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 16377,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16644,
											"end": 16649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16622,
											"end": 16626,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16649,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16312,
											"end": 16674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 16134,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16702,
											"end": 16703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16688,
											"end": 16690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16867,
											"end": 16872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16863,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16851,
											"end": 16863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16851,
											"end": 16872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17079,
											"end": 17084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17072,
											"end": 17074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17062,
											"end": 17084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 16684,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17139,
											"end": 17141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17143,
											"end": 17148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17124,
											"end": 17149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17124,
											"end": 17149,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16049,
											"end": 17156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16049,
											"end": 17156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16049,
											"end": 17156,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16049,
											"end": 17156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7163,
											"end": 7165,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7099,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7099,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 7264,
											"end": 7267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7175,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 7175,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7288,
											"end": 7291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 7302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7589,
											"end": 7720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 7589,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7733,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7858,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7882,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7906,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7959,
											"end": 7963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7997,
											"end": 7998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7979,
											"end": 7999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7979,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 8031,
											"end": 8032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8013,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 8013,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8083,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8086,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8069,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 8113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8178,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 8178,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 8212,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 8212,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8276,
											"end": 8279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8270,
											"end": 8280,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8283,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 8267,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8490,
											"name": "PUSH",
											"source": 1,
											"value": "4C6971756964697479206D7573742062652070726F766964656420666F722061"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8433,
											"end": 8491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8559,
											"name": "PUSH",
											"source": 1,
											"value": "74206C65617374203330206461797320746F207175616C69667920666F722072"
										},
										{
											"begin": 8520,
											"end": 8522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8602,
											"name": "PUSH",
											"source": 1,
											"value": "6577617264730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8589,
											"end": 8591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8316,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8843,
											"end": 8845,
											"name": "PUSH",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8838,
											"end": 8841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8779,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8779,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8944,
											"end": 8947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8855,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8855,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8968,
											"end": 8971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8964,
											"end": 8976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 8976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9231,
											"end": 9251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9395,
											"end": 9399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9269,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9269,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9261,
											"end": 9400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9580,
											"name": "PUSH",
											"source": 1,
											"value": "5265776172642065786365656473206D617820737570706C7900000000000000"
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9821,
											"end": 9823,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 9757,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9757,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 9833,
											"end": 9926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 9833,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9946,
											"end": 9949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10159,
											"end": 10168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 10373,
											"end": 10377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10247,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 10247,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10239,
											"end": 10378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 10385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 10385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10454,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10488,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10488,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10545,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 10583,
											"end": 10594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10565,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 10565,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10731,
											"end": 10746,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10725,
											"end": 10747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10706,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10678,
											"end": 10761,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10774,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 10774,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 10655,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10439,
											"end": 10801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10391,
											"end": 10801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10807,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10932,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 10956,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10949,
											"end": 10950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10942,
											"end": 10957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 10980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 11050,
											"end": 11070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 11050,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 11084,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11128,
											"end": 11146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 11113,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11167,
											"end": 11168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11158,
											"end": 11172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11357,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 11598,
											"end": 11600,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11593,
											"end": 11596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 11534,
											"end": 11601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 11534,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11527,
											"end": 11601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11610,
											"end": 11703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 11610,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11728,
											"end": 11730,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11723,
											"end": 11726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11909,
											"end": 11913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11947,
											"end": 11949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11960,
											"end": 12007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12150,
											"end": 12154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 12024,
											"end": 12155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12168,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "4275726E2076616C756520696E76616C69640000000000000000000000000000"
										},
										{
											"begin": 12304,
											"end": 12305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12285,
											"end": 12329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12168,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12708,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12342,
											"end": 12708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12564,
											"end": 12567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 12505,
											"end": 12572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12572,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12505,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 12670,
											"end": 12673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12581,
											"end": 12674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12581,
											"end": 12674,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 12581,
											"end": 12674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12694,
											"end": 12697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 13133,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12714,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12880,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12918,
											"end": 12920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12907,
											"end": 12916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12967,
											"end": 12976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12957,
											"end": 12977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 12954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12942,
											"end": 12951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 12955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 12978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 13121,
											"end": 13125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12995,
											"end": 13126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13126,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 12995,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 13133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 13133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 13133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 13133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13288,
											"end": 13292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13328,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13339,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13407,
											"end": 13408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13396,
											"end": 13405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13392,
											"end": 13409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13383,
											"end": 13389,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13339,
											"end": 13410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 13339,
											"end": 13410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13339,
											"end": 13410,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13339,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13488,
											"end": 13490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13477,
											"end": 13486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13473,
											"end": 13491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13464,
											"end": 13470,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13420,
											"end": 13492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13492,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13420,
											"end": 13492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13570,
											"end": 13572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13559,
											"end": 13568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13555,
											"end": 13573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13546,
											"end": 13552,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13502,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13502,
											"end": 13574,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13502,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Tweet_On_Base(latest)_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MAX_SUPPLY()": "32cb6b0c",
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"calculateReward(address)": "d82e3962",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerAddLiquidity(uint256)": "afe8289a",
							"ownerRemoveLiquidity(uint256)": "2254b79c",
							"removeLiquidityAndClaimRewards(uint256)": "c8052107",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"undoAddLiquidity(uint256)": "fc6d483a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerRemoveLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityAndClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undoAddLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tweet_On_Base(latest)_flattened.sol\":\"Tweet_On_Base\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tweet_On_Base(latest)_flattened.sol\":{\"keccak256\":\"0xd8e28a761ebf9c3202fff1e68a816fbe872bc2e0384e7112b3db047844bbda80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd71e0096a17b065462424c8aa3b31ec513c71f313171508e00062fbbbe45c00\",\"dweb:/ipfs/QmSGuWauZzGeqf3AD24JeTcoAHEQCEwHVJ4bWZcLgzTmGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 278,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 284,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 286,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 288,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 290,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 827,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 976,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1059,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_liquidityProvided",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1063,
								"contract": "Tweet_On_Base(latest)_flattened.sol:Tweet_On_Base",
								"label": "_liquidityProvidedTimestamp",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Tweet_On_Base(latest)_flattened.sol": {
				"ast": {
					"absolutePath": "Tweet_On_Base(latest)_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							780
						],
						"ERC20Burnable": [
							821
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							966
						],
						"ReentrancyGuard": [
							1030
						],
						"Tweet_On_Base": [
							1461
						]
					},
					"id": 1462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "150:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "176:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "257:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "270:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "439:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "464:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "448:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "486:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "498:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "490:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:57:0"
									},
									"src": "433:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "511:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "670:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "695:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "679:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "702:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "735:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:63:0"
									},
									"src": "664:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "748:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "827:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:9:0"
									},
									"scope": 77,
									"src": "818:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "879:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "964:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "982:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "974:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1014:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:9:0"
									},
									"scope": 77,
									"src": "955:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1029:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1256:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1285:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1310:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:6:0"
									},
									"scope": 77,
									"src": "1247:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1322:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1600:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1618:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1610:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:9:0"
									},
									"scope": 77,
									"src": "1591:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1680:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2361:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2377:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2394:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2386:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2419:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:6:0"
									},
									"scope": 77,
									"src": "2352:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2431:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2742:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2763:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2755:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2777:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2769:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2789:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2781:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2814:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:6:0"
									},
									"scope": 77,
									"src": "2733:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1462,
							"src": "247:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2980:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3122:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3122:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3122:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3007:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3104:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3135:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3203:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3207:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3233:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3233:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:15:0"
									},
									"scope": 100,
									"src": "3194:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3254:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3324:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3330:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3356:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3356:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:15:0"
									},
									"scope": 100,
									"src": "3315:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3377:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3456:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3464:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3490:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:7:0"
									},
									"scope": 100,
									"src": "3447:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1462,
							"src": "3094:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3609:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3635:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4150:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4226:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4243:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4247:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4243:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4236:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4173:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4183:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4217:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:9:0"
									},
									"scope": 129,
									"src": "4164:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4333:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4350:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4354:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4350:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4343:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4275:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4283:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4317:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4316:16:0"
									},
									"scope": 129,
									"src": "4266:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4443:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4460:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4453:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4380:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4400:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:9:0"
									},
									"scope": 129,
									"src": "4371:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1462,
							"src": "4132:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4603:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4629:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4779:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4798:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5118:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5142:49:0"
									},
									"src": "5112:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5198:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5361:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5388:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5379:16:0"
									},
									"src": "5355:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5402:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5572:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5601:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5593:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:18:0"
									},
									"src": "5566:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5617:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5973:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6008:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6000:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6025:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6017:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6044:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:52:0"
									},
									"src": "5967:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6058:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6243:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6272:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6264:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6263:18:0"
									},
									"src": "6237:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6288:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6494:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6513:17:0"
									},
									"src": "6488:43:0"
								}
							],
							"scope": 1462,
							"src": "4769:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6535:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6687:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6707:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6937:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6964:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6955:15:0"
									},
									"src": "6931:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "6977:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7120:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7151:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7143:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7142:17:0"
									},
									"src": "7114:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7166:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7466:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7487:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7503:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7528:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7520:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7486:48:0"
									},
									"src": "7460:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7541:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7704:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7723:16:0"
									},
									"src": "7698:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7746:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7916:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7946:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7938:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7937:18:0"
									},
									"src": "7910:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7962:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8220:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8255:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8247:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8246:35:0"
									},
									"src": "8214:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8288:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8473:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8503:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8495:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8494:18:0"
									},
									"src": "8467:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8519:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8727:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8757:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8749:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8748:18:0"
									},
									"src": "8721:46:0"
								}
							],
							"scope": 1462,
							"src": "6677:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8771:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8925:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8946:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9318:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9353:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9345:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9386:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9344:66:0"
									},
									"src": "9312:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9417:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9580:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9609:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9601:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9600:16:0"
									},
									"src": "9574:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9623:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9793:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9824:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9816:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9815:18:0"
									},
									"src": "9787:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9840:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10107:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10162:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10154:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10135:33:0"
									},
									"src": "10101:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10175:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10360:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10391:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10383:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10382:18:0"
									},
									"src": "10354:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10407:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10615:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10646:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10638:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10637:18:0"
									},
									"src": "10609:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10662:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10953:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "10987:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "10979:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11006:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "10998:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10978:41:0"
									},
									"src": "10947:73:0"
								}
							],
							"scope": 1462,
							"src": "8915:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11140:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 267,
										"name": "Context",
										"nameLocations": [
											"11198:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "11198:7:0"
									},
									"id": 268,
									"nodeType": "InheritanceSpecifier",
									"src": "11198:7:0"
								},
								{
									"baseName": {
										"id": 269,
										"name": "IERC20",
										"nameLocations": [
											"11207:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "11207:6:0"
									},
									"id": 270,
									"nodeType": "InheritanceSpecifier",
									"src": "11207:6:0"
								},
								{
									"baseName": {
										"id": 271,
										"name": "IERC20Metadata",
										"nameLocations": [
											"11215:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "11215:14:0"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "11215:14:0"
								},
								{
									"baseName": {
										"id": 273,
										"name": "IERC20Errors",
										"nameLocations": [
											"11231:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "11231:12:0"
									},
									"id": 274,
									"nodeType": "InheritanceSpecifier",
									"src": "11231:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "11189:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 278,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11294:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "11250:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 277,
										"keyName": "account",
										"keyNameLocation": "11266:7:0",
										"keyType": {
											"id": 275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11258:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11250:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11277:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 284,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "11382:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "11310:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 283,
										"keyName": "account",
										"keyNameLocation": "11326:7:0",
										"keyType": {
											"id": 279,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11318:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11310:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 282,
											"keyName": "spender",
											"keyNameLocation": "11353:7:0",
											"keyType": {
												"id": 280,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11345:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11337:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11364:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 286,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "11416:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "11400:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 285,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11400:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 288,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "11450:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "11435:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 287,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11435:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "11476:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "11461:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 289,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11461:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "11722:57:0",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "11732:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "11740:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11732:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "11732:13:0"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 302,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "11755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 303,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "11765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11755:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "11755:17:0"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "11490:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 307,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "11692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "11678:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11678:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "11713:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "11699:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11677:44:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11722:0:0"
									},
									"scope": 780,
									"src": "11666:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "11904:29:0",
										"statements": [
											{
												"expression": {
													"id": 313,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "11921:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 312,
												"id": 314,
												"nodeType": "Return",
												"src": "11914:12:0"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "11785:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11853:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11857:2:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11889:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11888:15:0"
									},
									"scope": 780,
									"src": "11844:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "12108:31:0",
										"statements": [
											{
												"expression": {
													"id": 322,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "12125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 321,
												"id": 323,
												"nodeType": "Return",
												"src": "12118:14:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "11939:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12055:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12061:2:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "12093:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12092:15:0"
									},
									"scope": 780,
									"src": "12046:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "12828:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12845:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 330,
												"id": 332,
												"nodeType": "Return",
												"src": "12838:9:0"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "12145:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12781:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12789:2:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "12821:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 328,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12820:7:0"
									},
									"scope": 780,
									"src": "12772:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "12975:36:0",
										"statements": [
											{
												"expression": {
													"id": 340,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 286,
													"src": "12992:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 341,
												"nodeType": "Return",
												"src": "12985:19:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "12860:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12923:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12934:2:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12966:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12965:9:0"
									},
									"scope": 780,
									"src": "12914:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "13143:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 351,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "13160:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 353,
													"indexExpression": {
														"id": 352,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "13170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13160:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 354,
												"nodeType": "Return",
												"src": "13153:25:0"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "13017:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13078:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "13088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13087:17:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "13134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13133:9:0"
									},
									"scope": 780,
									"src": "13069:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "13455:103:0",
										"statements": [
											{
												"assignments": [
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "13473:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 379,
														"src": "13465:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 366,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13465:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 368,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "13481:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13481:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13465:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "13513:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "13520:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "13524:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "13503:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13503:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "13503:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13547:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 365,
												"id": 378,
												"nodeType": "Return",
												"src": "13540:11:0"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "13191:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "13389:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13406:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13398:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13418:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13410:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13397:27:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13449:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13449:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13448:6:0"
									},
									"scope": 780,
									"src": "13380:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "13705:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 390,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "13722:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 392,
														"indexExpression": {
															"id": 391,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "13734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 394,
													"indexExpression": {
														"id": 393,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "13741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13722:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 389,
												"id": 395,
												"nodeType": "Return",
												"src": "13715:34:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "13564:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13625:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13643:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "13635:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "13650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13634:32:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "13696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13695:9:0"
									},
									"scope": 780,
									"src": "13616:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "14142:107:0",
										"statements": [
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14160:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 420,
														"src": "14152:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 407,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14152:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14168:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14168:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14152:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "14199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "14206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "14215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															731
														],
														"referencedDeclaration": 671,
														"src": "14190:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14190:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "14190:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 406,
												"id": 419,
												"nodeType": "Return",
												"src": "14231:11:0"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "13762:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14072:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "14080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14105:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "14097:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14079:32:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "14136:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14136:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14135:6:0"
									},
									"scope": 780,
									"src": "14063:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "14902:151:0",
										"statements": [
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "14920:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "14912:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 433,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14912:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 435,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14930:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14930:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14912:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "14968:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "14974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "14983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "14952:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14952:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "14952:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "15009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "15015:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "15019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 444,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "14999:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14999:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "14999:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 432,
												"id": 451,
												"nodeType": "Return",
												"src": "15035:11:0"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "14255:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14818:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14853:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14845:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14865:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14830:41:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "14896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14895:6:0"
									},
									"scope": 780,
									"src": "14809:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "15503:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 463,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "15517:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15533:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 464,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15525:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15525:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15517:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 477,
												"nodeType": "IfStatement",
												"src": "15513:86:0",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "15537:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15585:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15577:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 470,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15577:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15577:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 469,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "15558:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15558:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 475,
															"nodeType": "RevertStatement",
															"src": "15551:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 478,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "15612:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 479,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15618:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15618:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15612:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "15608:86:0",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "15630:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15680:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15672:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15672:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15672:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 484,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "15651:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15651:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "15644:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "15711:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "15717:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "15721:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15703:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "15703:24:0"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "15059:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15435:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "15445:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15467:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "15459:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15479:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "15471:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15444:41:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15503:0:0"
									},
									"scope": 780,
									"src": "15426:308:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "16124:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 510,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "16138:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 511,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16146:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16146:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16138:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 547,
													"nodeType": "Block",
													"src": "16312:362:0",
													"statements": [
														{
															"assignments": [
																522
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 522,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "16334:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 547,
																	"src": "16326:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 521,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16326:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 526,
															"initialValue": {
																"baseExpression": {
																	"id": 523,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "16348:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 525,
																"indexExpression": {
																	"id": 524,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "16358:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16348:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16326:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 527,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "16381:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "16395:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16381:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 537,
															"nodeType": "IfStatement",
															"src": "16377:115:0",
															"trueBody": {
																"id": 536,
																"nodeType": "Block",
																"src": "16402:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 531,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 503,
																					"src": "16452:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 532,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 522,
																					"src": "16458:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 533,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 507,
																					"src": "16471:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 530,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "16427:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16427:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 535,
																		"nodeType": "RevertStatement",
																		"src": "16420:57:0"
																	}
																]
															}
														},
														{
															"id": 546,
															"nodeType": "UncheckedBlock",
															"src": "16505:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 538,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "16612:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 540,
																			"indexExpression": {
																				"id": 539,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "16622:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "16612:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 541,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "16630:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 542,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 507,
																				"src": "16644:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16630:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16612:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 545,
																	"nodeType": "ExpressionStatement",
																	"src": "16612:37:0"
																}
															]
														}
													]
												},
												"id": 548,
												"nodeType": "IfStatement",
												"src": "16134:540:0",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "16158:148:0",
													"statements": [
														{
															"expression": {
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 516,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "16274:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "16290:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16274:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 519,
															"nodeType": "ExpressionStatement",
															"src": "16274:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "16688:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 550,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16694:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16694:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16688:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 568,
													"nodeType": "Block",
													"src": "16903:206:0",
													"statements": [
														{
															"id": 567,
															"nodeType": "UncheckedBlock",
															"src": "16917:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 561,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "17062:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 563,
																			"indexExpression": {
																				"id": 562,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "17072:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17062:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 564,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "17079:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17062:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 566,
																	"nodeType": "ExpressionStatement",
																	"src": "17062:22:0"
																}
															]
														}
													]
												},
												"id": 569,
												"nodeType": "IfStatement",
												"src": "16684:425:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "16706:191:0",
													"statements": [
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "16720:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 555,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "16851:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "16867:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16851:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "16851:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 571,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "17133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "17139:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "17143:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17124:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17124:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "EmitStatement",
												"src": "17119:30:0"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "15740:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16058:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16066:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16088:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16080:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16100:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16092:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16065:41:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16124:0:0"
									},
									"scope": 780,
									"src": "16049:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "17564:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "17578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17597:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17589:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17589:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17578:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "17574:91:0",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "17601:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17651:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17643:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 592,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17643:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17643:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "17622:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17622:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "17615:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17690:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17682:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17682:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "17694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "17703:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "17674:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17674:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "17674:35:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "17162:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "17508:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "17514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "17531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17513:32:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17564:0:0"
									},
									"scope": 780,
									"src": "17499:217:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "18090:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 618,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "18104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 619,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18115:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18115:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18104:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "18100:89:0",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "18127:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18175:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18167:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 625,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18167:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18167:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18148:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18148:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 630,
															"nodeType": "RevertStatement",
															"src": "18141:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "18206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18223:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18215:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18215:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18215:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "18227:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "18198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18198:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "18198:35:0"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "17722:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18043:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18057:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "18049:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "18066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18048:32:0"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18090:0:0"
									},
									"scope": 780,
									"src": "18034:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "18334:41:0",
										"statements": []
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "18255:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18284:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "18276:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18298:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "18290:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18310:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "18302:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18275:41:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18334:0:0"
									},
									"scope": 780,
									"src": "18246:129:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "18986:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "19005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "19012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "19021:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19028:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 663,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															731
														],
														"referencedDeclaration": 731,
														"src": "18996:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18996:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "18996:37:0"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "18382:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "18921:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "18930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "18953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "18945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18970:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "18962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18929:47:0"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18986:0:0"
									},
									"scope": 780,
									"src": "18912:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "19970:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "19984:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19993:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19993:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19984:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "19980:89:0",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "20005:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20055:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20047:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20047:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20047:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20026:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20026:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 695,
															"nodeType": "RevertStatement",
															"src": "20019:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "20082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20101:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 699,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20093:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20093:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20082:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "20078:90:0",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "20105:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20154:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20146:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 705,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20146:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20146:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 704,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20126:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20126:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 710,
															"nodeType": "RevertStatement",
															"src": "20119:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "20177:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "20189:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20177:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "20196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20177:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 718,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "20207:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20177:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "20177:35:0"
											},
											{
												"condition": {
													"id": 721,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "20226:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "20222:76:0",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "20237:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 723,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "20265:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 724,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "20272:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 725,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "20281:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 722,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20256:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20256:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "EmitStatement",
															"src": "20251:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "19046:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19881:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19898:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "19890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19913:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "19905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19930:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "19922:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "19942:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "19937:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19889:63:0"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:0:0"
									},
									"scope": 780,
									"src": "19872:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "20675:388:0",
										"statements": [
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "20693:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "20685:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "20722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "20729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 743,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "20712:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20712:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20685:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "20751:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20776:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 750,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20776:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "20771:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20771:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "20785:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "20771:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20751:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "20747:310:0",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "20790:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "20808:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 756,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "20827:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20808:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 765,
															"nodeType": "IfStatement",
															"src": "20804:130:0",
															"trueBody": {
																"id": 764,
																"nodeType": "Block",
																"src": "20834:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 759,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "20886:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "20895:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "20913:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 758,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "20859:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20859:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 763,
																		"nodeType": "RevertStatement",
																		"src": "20852:67:0"
																	}
																]
															}
														},
														{
															"id": 775,
															"nodeType": "UncheckedBlock",
															"src": "20947:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 767,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "20984:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 768,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "20991:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 769,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "21000:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 770,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "21019:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21000:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21026:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 766,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				671,
																				731
																			],
																			"referencedDeclaration": 731,
																			"src": "20975:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20975:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 774,
																	"nodeType": "ExpressionStatement",
																	"src": "20975:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "20310:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "20595:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20619:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "20611:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "20626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "20643:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20610:47:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20675:0:0"
									},
									"scope": 780,
									"src": "20586:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1462,
							"src": "11171:9894:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21221:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 783,
										"name": "Context",
										"nameLocations": [
											"21493:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "21493:7:0"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "21493:7:0"
								},
								{
									"baseName": {
										"id": 785,
										"name": "ERC20",
										"nameLocations": [
											"21502:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "21502:5:0"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "21502:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "21249:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821,
								780,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Burnable",
							"nameLocation": "21476:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "21672:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 793,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "21688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21688:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "21702:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "21682:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21682:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "21682:26:0"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "21514:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "21637:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "21642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21641:15:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21672:0:0"
									},
									"scope": 821,
									"src": "21628:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "22096:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "22122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 809,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "22131:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22131:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "22145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "22106:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22106:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "22106:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "22167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "22176:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "22161:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22161:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "22161:21:0"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "21721:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22040:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22057:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "22049:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "22066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22048:32:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22096:0:0"
									},
									"scope": 821,
									"src": "22031:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1462,
							"src": "21458:733:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22303:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 824,
										"name": "Context",
										"nameLocations": [
											"22847:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22847:7:0"
									},
									"id": 825,
									"nodeType": "InheritanceSpecifier",
									"src": "22847:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 823,
								"nodeType": "StructuredDocumentation",
								"src": "22330:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 966,
							"linearizedBaseContracts": [
								966,
								129
							],
							"name": "Ownable",
							"nameLocation": "22836:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 827,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22877:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "22861:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22861:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "22890:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 832,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22986:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23021:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "23013:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23012:17:0"
									},
									"src": "22980:50:0"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "23036:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 837,
									"name": "OwnableInvalidOwner",
									"nameLocation": "23129:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23157:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "23149:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23148:15:0"
									},
									"src": "23123:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 843,
									"name": "OwnershipTransferred",
									"nameLocation": "23176:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23213:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "23197:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23244:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "23228:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23196:57:0"
									},
									"src": "23170:84:0"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "23414:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 849,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "23428:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 850,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23444:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23444:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23428:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "23424:95:0",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "23456:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23505:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23497:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 856,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23497:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23497:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 855,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "23477:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23477:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 861,
															"nodeType": "RevertStatement",
															"src": "23470:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "23547:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 864,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "23528:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23528:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "23528:32:0"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "23260:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 869,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23400:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "23392:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23391:22:0"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23414:0:0"
									},
									"scope": 966,
									"src": "23380:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "23676:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 872,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "23686:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23686:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "23686:13:0"
											},
											{
												"id": 875,
												"nodeType": "PlaceholderStatement",
												"src": "23709:1:0"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "23573:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 877,
									"name": "onlyOwner",
									"nameLocation": "23664:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23673:2:0"
									},
									"src": "23655:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "23848:30:0",
										"statements": [
											{
												"expression": {
													"id": 883,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 827,
													"src": "23865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 882,
												"id": 884,
												"nodeType": "Return",
												"src": "23858:13:0"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "23723:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23802:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23807:2:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "23839:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23838:9:0"
									},
									"scope": 966,
									"src": "23793:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "23996:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 890,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "24010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24010:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 892,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "24021:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24021:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24010:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "24006:101:0",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "24035:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 896,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "24083:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24083:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 895,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "24056:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24056:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "24049:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "23884:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23960:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23971:2:0"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23996:0:0"
									},
									"scope": 966,
									"src": "23951:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "24502:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24539:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24531:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "24512:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24512:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "24512:30:0"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "24119:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 906,
												"name": "onlyOwner",
												"nameLocations": [
													"24492:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 877,
												"src": "24492:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24492:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24457:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24474:2:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24502:0:0"
									},
									"scope": 966,
									"src": "24448:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "24768:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "24782:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24794:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24794:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24782:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "24778:91:0",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "24806:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24855:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24847:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 932,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24847:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24847:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 931,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "24827:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24827:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "24820:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "24897:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 940,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "24878:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24878:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "24878:28:0"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "24555:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 923,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 922,
												"name": "onlyOwner",
												"nameLocations": [
													"24758:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 877,
												"src": "24758:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24758:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24707:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24733:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "24725:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24724:18:0"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24768:0:0"
									},
									"scope": 966,
									"src": "24698:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "25130:124:0",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25148:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 964,
														"src": "25140:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 951,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25140:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"id": 953,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 827,
													"src": "25159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25140:25:0"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "25175:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "25184:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25175:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "25175:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 960,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "25228:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "25238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 959,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "25207:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25207:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "EmitStatement",
												"src": "25202:45:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "24919:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "25076:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25103:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "25095:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25094:18:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25130:0:0"
									},
									"scope": 966,
									"src": "25067:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1462,
							"src": "22818:2438:0",
							"usedErrors": [
								832,
								837
							],
							"usedEvents": [
								843
							]
						},
						{
							"id": 967,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25388:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 968,
								"nodeType": "StructuredDocumentation",
								"src": "25413:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030
							],
							"name": "ReentrancyGuard",
							"nameLocation": "26182:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 971,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "26977:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "26952:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26952:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 970,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26992:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 974,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "27024:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "26999:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26999:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27035:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "27059:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "27043:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "27043:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "27087:39:0",
										"statements": [
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 979,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "27097:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "27107:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27097:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "27097:22:0"
											}
										]
									},
									"id": 984,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27084:2:0"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27087:0:0"
									},
									"scope": 1030,
									"src": "27073:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "27527:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 987,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "27537:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27537:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "27537:21:0"
											},
											{
												"id": 990,
												"nodeType": "PlaceholderStatement",
												"src": "27568:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "27579:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27579:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "27579:20:0"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "27132:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 995,
									"name": "nonReentrant",
									"nameLocation": "27512:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27524:2:0"
									},
									"src": "27503:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "27651:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 999,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "27744:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1000,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "27755:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27744:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27765:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27736:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "27736:63:0"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "27874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1006,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "27884:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27874:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "27874:18:0"
											}
										]
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "27621:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27640:2:0"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27651:0:0"
									},
									"scope": 1030,
									"src": "27612:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "27943:171:0",
										"statements": [
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1013,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "28085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1014,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "28095:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28085:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "28085:22:0"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "27914:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27932:2:0"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27943:0:0"
									},
									"scope": 1030,
									"src": "27905:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "28357:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "28374:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1025,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "28385:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28374:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1027,
												"nodeType": "Return",
												"src": "28367:26:0"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "28120:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "28302:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28325:2:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "28351:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28350:6:0"
									},
									"scope": 1030,
									"src": "28293:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1462,
							"src": "26164:2238:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28441:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1032,
										"name": "ERC20",
										"nameLocations": [
											"28497:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "28497:5:0"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "28497:5:0"
								},
								{
									"baseName": {
										"id": 1034,
										"name": "ERC20Burnable",
										"nameLocations": [
											"28504:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "28504:13:0"
									},
									"id": 1035,
									"nodeType": "InheritanceSpecifier",
									"src": "28504:13:0"
								},
								{
									"baseName": {
										"id": 1036,
										"name": "Ownable",
										"nameLocations": [
											"28519:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 966,
										"src": "28519:7:0"
									},
									"id": 1037,
									"nodeType": "InheritanceSpecifier",
									"src": "28519:7:0"
								},
								{
									"baseName": {
										"id": 1038,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"28528:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "28528:15:0"
									},
									"id": 1039,
									"nodeType": "InheritanceSpecifier",
									"src": "28528:15:0"
								}
							],
							"canonicalName": "Tweet_On_Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1461,
							"linearizedBaseContracts": [
								1461,
								1030,
								966,
								821,
								780,
								170,
								100,
								77,
								129
							],
							"name": "Tweet_On_Base",
							"nameLocation": "28480:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 1047,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "28575:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1461,
									"src": "28551:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1040,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28551:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"id": 1046,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 1041,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28592:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28606:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "32",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28612:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "28606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													}
												}
											],
											"id": 1045,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "28605:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											}
										},
										"src": "28592:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 1055,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "28644:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1461,
									"src": "28620:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1048,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28620:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000000000_by_1",
											"typeString": "int_const 5000000000000"
										},
										"id": 1054,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35305f3030305f3030305f303030",
											"id": 1049,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28657:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000000000_by_1",
												"typeString": "int_const 50000000000"
											},
											"value": "50_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28675:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "32",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "28675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													}
												}
											],
											"id": 1053,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "28674:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											}
										},
										"src": "28657:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000_by_1",
											"typeString": "int_const 5000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1059,
									"mutability": "mutable",
									"name": "_liquidityProvided",
									"nameLocation": "28726:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1461,
									"src": "28690:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1058,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1056,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28698:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28690:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1057,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28709:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1063,
									"mutability": "mutable",
									"name": "_liquidityProvidedTimestamp",
									"nameLocation": "28786:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1461,
									"src": "28750:63:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1062,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1060,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "28758:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "28750:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1061,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "28769:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "28885:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "32",
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"functionReturnParameters": 1068,
												"id": 1070,
												"nodeType": "Return",
												"src": "28895:8:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "28829:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1065,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28860:8:0"
									},
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28837:2:0"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "28878:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1066,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "28878:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28877:7:0"
									},
									"scope": 1461,
									"src": "28820:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "28991:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1084,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29007:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29011:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29007:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "29019:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "29001:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29001:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "29001:33:0"
											}
										]
									},
									"id": 1090,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5477656574204f6e2042617365",
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28944:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_80e97846aca6685e871a95e37db15e3ab09d68cf470af5a7888fe77f3d85baef",
														"typeString": "literal_string \"Tweet On Base\""
													},
													"value": "Tweet On Base"
												},
												{
													"hexValue": "547765657473",
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28961:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1fef6b2cfc5e46242875939ee75f96a3db70e31e30eb247fe7cd29c042bf64d8",
														"typeString": "literal_string \"Tweets\""
													},
													"value": "Tweets"
												}
											],
											"id": 1077,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1074,
												"name": "ERC20",
												"nameLocations": [
													"28938:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 780,
												"src": "28938:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28938:32:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1079,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28979:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28983:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28979:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1081,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1078,
												"name": "Ownable",
												"nameLocations": [
													"28971:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "28971:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28971:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28935:2:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28991:0:0"
									},
									"scope": 1461,
									"src": "28924:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										500
									],
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "29134:300:0",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "29148:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "29140:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29140:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1102,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "29161:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030303030",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "29161:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29140:36:0"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "29191:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "29183:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29183:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "29204:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1109,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "29213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29204:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29183:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "29238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "sendAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "29248:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1115,
																	"name": "burnAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "29261:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29248:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29238:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e2076616c756520696e76616c6964",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29273:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															},
															"value": "Burn value invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29a6cdfe33971f4ef7cd78eca9e98c12c89f9fc36c9671846f36ed4b2d61db12",
																"typeString": "literal_string \"Burn value invalid\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29230:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "29230:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1121,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "29309:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1122,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "29319:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29323:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "29319:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29309:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "29305:74:0",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "29331:48:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1128,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "29353:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "burnAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "29361:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1125,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "29341:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_Tweet_On_Base_$1461_$",
																			"typeString": "type(contract super Tweet_On_Base)"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29347:5:0",
																	"memberName": "_burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 643,
																	"src": "29341:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29341:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "29341:31:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1137,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "29401:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "29409:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "29420:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1134,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "29385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Tweet_On_Base_$1461_$",
																"typeString": "type(contract super Tweet_On_Base)"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29391:9:0",
														"memberName": "_transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "29385:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29385:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "29385:46:0"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "29055:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1098,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29125:8:0"
									},
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "29073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "29089:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29081:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "29100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29064:51:0"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29134:0:0"
									},
									"scope": 1461,
									"src": "29046:388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										653
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "29538:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1156,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "29571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "29577:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "29581:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1153,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "29544:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Tweet_On_Base_$1461_$",
																"typeString": "type(contract super Tweet_On_Base)"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29550:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "29544:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29544:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "29544:44:0"
											}
										]
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "29449:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29529:8:0"
									},
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29478:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "29470:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29492:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "29484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "29496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29469:42:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29538:0:0"
									},
									"scope": 1461,
									"src": "29440:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "29643:178:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29663:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29667:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29663:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1172,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29683:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29675:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29675:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "29690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143
														],
														"referencedDeclaration": 1143,
														"src": "29653:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29653:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "29653:44:0"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1177,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "29707:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1180,
														"indexExpression": {
															"expression": {
																"id": 1178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29730:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29707:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "29741:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29707:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "29707:40:0"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1184,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "29757:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1187,
														"indexExpression": {
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29785:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29789:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29785:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29757:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1188,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29799:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29805:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "29799:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29757:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "29757:57:0"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "29607:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29628:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "29620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29619:16:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29643:0:0"
									},
									"scope": 1461,
									"src": "29598:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "29875:178:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1201,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1199,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29895:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29895:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29910:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29914:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29910:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "29922:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143
														],
														"referencedDeclaration": 1143,
														"src": "29885:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29885:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "29885:44:0"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1208,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "29939:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1211,
														"indexExpression": {
															"expression": {
																"id": 1209,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29958:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29962:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29958:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29939:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1212,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "29973:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29939:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "29939:40:0"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1215,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "29989:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30017:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30021:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30017:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29989:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1219,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30031:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30037:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "30031:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29989:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "29989:57:0"
											}
										]
									},
									"functionSelector": "fc6d483a",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "undoAddLiquidity",
									"nameLocation": "29835:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "29852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29851:16:0"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29875:0:0"
									},
									"scope": 1461,
									"src": "29826:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1230,
									"name": "RewardClaimed",
									"nameLocation": "30065:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "30095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "30079:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "30109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "30101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30078:38:0"
									},
									"src": "30059:58:0"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "30199:911:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "30217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1239,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "30227:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1242,
																"indexExpression": {
																	"expression": {
																		"id": 1240,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "30246:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30250:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "30246:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "30227:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30217:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30259:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30209:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "30209:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1248,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "30300:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30306:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "30300:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1250,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "30319:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1253,
																	"indexExpression": {
																		"expression": {
																			"id": 1251,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30347:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30351:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30347:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "30319:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30361:7:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "30319:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30300:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6971756964697479206d7573742062652070726f766964656420666f72206174206c65617374203330206461797320746f207175616c69667920666f722072657761726473",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30370:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															},
															"value": "Liquidity must be provided for at least 30 days to qualify for rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de80d0be432c9f934acd11096cb5c54f0e9ef6f5278be323c663883eea63e229",
																"typeString": "literal_string \"Liquidity must be provided for at least 30 days to qualify for rewards\""
															}
														],
														"id": 1247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30292:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "30292:151:0"
											},
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "30462:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "30454:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30487:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30491:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30487:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1262,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "30471:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30471:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30454:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1268,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "30516:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30516:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1270,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "30532:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30516:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1272,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "30542:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30516:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172642065786365656473206d617820737570706c79",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30554:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															},
															"value": "Reward exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a994e1c908ec83648aa40e7795216438ca6cbc4c2ed423f9d92591de754e772",
																"typeString": "literal_string \"Reward exceeds max supply\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30508:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "30508:74:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "30660:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30669:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30660:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "30656:136:0",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "30672:120:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1281,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30692:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30696:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30692:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "30704:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1280,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "30686:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30686:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "30686:25:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1287,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30744:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30748:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30744:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1289,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "30756:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1286,
																	"name": "RewardClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "30730:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30730:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1291,
															"nodeType": "EmitStatement",
															"src": "30725:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1297,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30820:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1295,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30812:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30812:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30831:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30827:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "30839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143
														],
														"referencedDeclaration": 1143,
														"src": "30802:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30802:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "30802:44:0"
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1304,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "30856:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"expression": {
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30875:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30879:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30875:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30856:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1308,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "30890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30856:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "30856:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1311,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "30911:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1314,
														"indexExpression": {
															"expression": {
																"id": 1312,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30930:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30934:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30930:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30911:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30945:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30911:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "31022:82:0",
													"statements": [
														{
															"expression": {
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1325,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "31036:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1328,
																	"indexExpression": {
																		"expression": {
																			"id": 1326,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "31064:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31068:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "31064:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31036:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1329,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "31078:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31084:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "31078:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31036:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1332,
															"nodeType": "ExpressionStatement",
															"src": "31036:57:0"
														}
													]
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "30907:197:0",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "30948:68:0",
													"statements": [
														{
															"expression": {
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1317,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "30962:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1320,
																	"indexExpression": {
																		"expression": {
																			"id": 1318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30990:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30994:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30990:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "30962:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "30962:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "30962:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c8052107",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1234,
												"name": "nonReentrant",
												"nameLocations": [
													"30186:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 995,
												"src": "30186:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30186:12:0"
										}
									],
									"name": "removeLiquidityAndClaimRewards",
									"nameLocation": "30132:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30171:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "30163:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30162:16:0"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30199:0:0"
									},
									"scope": 1461,
									"src": "30123:987:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "31185:281:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1343,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31205:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31199:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1345,
																"name": "_liquidityProvidedTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "31218:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1347,
															"indexExpression": {
																"id": 1346,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "31246:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31218:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3330",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31254:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "31218:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31199:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "IfStatement",
												"src": "31195:247:0",
												"trueBody": {
													"id": 1372,
													"nodeType": "Block",
													"src": "31263:179:0",
													"statements": [
														{
															"assignments": [
																1352
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1352,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "31285:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1372,
																	"src": "31277:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1351,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31277:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1361,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1353,
																					"name": "_liquidityProvided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1059,
																					"src": "31295:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1355,
																				"indexExpression": {
																					"id": 1354,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "31314:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "31295:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31322:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "31295:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31294:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31327:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "31294:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31277:53:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1362,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "31348:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31348:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1364,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "31364:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "31348:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1366,
																	"name": "MAX_SUPPLY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "31374:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31348:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "31344:88:0",
															"trueBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "31386:46:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1368,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "31411:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1342,
																		"id": 1369,
																		"nodeType": "Return",
																		"src": "31404:13:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31458:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1342,
												"id": 1375,
												"nodeType": "Return",
												"src": "31451:8:0"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "31125:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "31149:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "31141:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31140:14:0"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "31176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31175:9:0"
									},
									"scope": 1461,
									"src": "31116:350:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "31531:156:0",
										"statements": [
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1384,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "31541:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1387,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1385,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "31560:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31560:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31541:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1388,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "31572:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31541:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "31541:37:0"
											},
											{
												"expression": {
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1391,
															"name": "_liquidityProvidedTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "31588:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1394,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1392,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "31616:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31616:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31588:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1395,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31633:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31627:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31588:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "31588:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1402,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31666:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31658:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31658:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31658:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "31673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1399,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "31652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31652:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "31652:28:0"
											}
										]
									},
									"functionSelector": "afe8289a",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1382,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1381,
												"name": "onlyOwner",
												"nameLocations": [
													"31521:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 877,
												"src": "31521:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31521:9:0"
										}
									],
									"name": "ownerAddLiquidity",
									"nameLocation": "31480:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "31498:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31497:16:0"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31531:0:0"
									},
									"scope": 1461,
									"src": "31471:216:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "31769:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "31787:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1419,
																	"name": "_liquidityProvided",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "31797:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1422,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1420,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "31816:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31816:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31797:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31787:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31826:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31779:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "31779:70:0"
											},
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "31859:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1430,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1428,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "31878:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31878:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31859:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1431,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "31890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31859:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "31859:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1434,
															"name": "_liquidityProvided",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "31910:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1437,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1435,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "31929:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31929:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31910:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31910:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "31906:103:0",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "31944:65:0",
													"statements": [
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1440,
																		"name": "_liquidityProvidedTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "31958:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1441,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 886,
																			"src": "31986:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31986:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31958:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31997:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31958:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "31958:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1452,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32036:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tweet_On_Base_$1461",
																		"typeString": "contract Tweet_On_Base"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32028:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32028:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32028:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "32043:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32043:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "32052:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143
														],
														"referencedDeclaration": 1143,
														"src": "32018:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32018:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "32018:41:0"
											}
										]
									},
									"functionSelector": "2254b79c",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1412,
												"name": "onlyOwner",
												"nameLocations": [
													"31746:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 877,
												"src": "31746:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31746:9:0"
										},
										{
											"id": 1415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1414,
												"name": "nonReentrant",
												"nameLocations": [
													"31756:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 995,
												"src": "31756:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31756:12:0"
										}
									],
									"name": "ownerRemoveLiquidity",
									"nameLocation": "31702:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31731:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "31723:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31722:16:0"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31769:0:0"
									},
									"scope": 1461,
									"src": "31693:374:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1462,
							"src": "28471:3600:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								832,
								837
							],
							"usedEvents": [
								11,
								20,
								843,
								1230
							]
						}
					],
					"src": "150:31922:0"
				},
				"id": 0
			}
		}
	}
}